{
    "version": "https://jsonfeed.org/version/1",
    "title": "Pavan Donthireddy",
    "home_page_url": "http://localhost:4000/",
    "feed_url": "http://localhost:4000/feed.json",
    "description": "Digital space of notes and thoughts",
    "icon": "http://localhost:4000/apple-touch-iconfavicon.png",
    "favicon": "http://localhost:4000/favicon.png",
    "expired": false,
    
    "author":  {
        "name": "Pavan Donthireddy",
        "url": "https://pavandonthireddy.github.io",
        "avatar": null
    },
    
"items": [
    
        {
            "id": "http://localhost:4000/2023/04/22/switching-kalman-filter",
            "title": "Switching Kalman Filter and Its Variants",
            "summary": "This article explains the switching Kalman filter and its variants in detail. It also includes Python implementations of the algorithms.",
            "content_text": "IntroductionA Kalman filter is a widely used algorithm that provides optimal estimation of a state variable based on a series of noisy measurements. It makes use of the past measurements and uses them, along with the system dynamics, to predict the future state of the system. This predicted state is then compared with the actual measurement, and the filter generates an optimal estimation of the true state. However, the standard Kalman filter assumes that the underlying system behaves in a certain way, and if the assumption is incorrect, the filter may not perform optimally. In such cases, we need to switch between multiple Kalman filters to estimate the system state accurately. This article discusses the switching Kalman filter and its variants.Switching Kalman FilterA switching Kalman filter (SKF) is an extension of the standard Kalman filter that efficiently addresses the problem of switching between different models. The idea behind SKF is to use a set of different models that describe the different regimes of the system. In each regime, a different Kalman filter is used to estimate the system state.Consider a system with N different regimes, and let z_t be a discrete random variable that takes values in {1, 2, ..., N} at time t, indicating which regime the system is currently in. Further, let x_t be the state of the system at time t, and y_t be the observation (measurement) of the system at time t. Assuming that the system transitions between regimes according to a Markov process, the state transition equation can be written as follows:xt=Aztxt−1+wtx_t = A_{z_t} x_{t-1} + w_txt​=Azt​​xt−1​+wt​where w_t is a zero-mean Gaussian noise with covariance Q_{z_t}. The observation equation is given by:yt=Hztxt+vty_t = H_{z_t} x_t + v_tyt​=Hzt​​xt​+vt​where v_t is a zero-mean Gaussian noise with covariance R_{z_t}, and A_i, H_i, Q_i, R_i are the state model, observation model, process noise covariance, and measurement noise covariance, respectively, for regime i.The SKF algorithm consists of two steps: (i) filtering, and (ii) mode estimation.Filtering with switching Kalman FilterIn the first step, we use a set of Kalman filters to filter the observations y_t and estimate the state x_t in each regime. Suppose we have N different Kalman filters, each corresponding to a different regime. For each regime i, the Kalman filter consists of the following equations:Prediction step:x^t∣t−1(i)=Aix^t−1∣t−1(i)\\hat{x}_{t|t-1}^{(i)} = A_{i} \\hat{x}_{t-1|t-1}^{(i)}x^t∣t−1(i)​=Ai​x^t−1∣t−1(i)​Pt∣t−1(i)=AiPt−1∣t−1(i)AiT+QiP_{t|t-1}^{(i)} = A_{i} P_{t-1|t-1}^{(i)} A_{i}^T + Q_{i}Pt∣t−1(i)​=Ai​Pt−1∣t−1(i)​AiT​+Qi​Update step:Kt(i)=Pt∣t−1(i)HiT[HiPt∣t−1(i)HiT+Ri]−1K_t^{(i)} = P_{t|t-1}^{(i)} H_{i}^T [H_{i} P_{t|t-1}^{(i)} H_{i}^T + R_{i}]^{-1}Kt(i)​=Pt∣t−1(i)​HiT​[Hi​Pt∣t−1(i)​HiT​+Ri​]−1x^t∣t(i)=x^t∣t−1(i)+Kt(i)(yt−Hix^t∣t−1(i))\\hat{x}_{t|t}^{(i)} = \\hat{x}_{t|t-1}^{(i)} + K_t^{(i)} (y_t - H_{i} \\hat{x}_{t|t-1}^{(i)})x^t∣t(i)​=x^t∣t−1(i)​+Kt(i)​(yt​−Hi​x^t∣t−1(i)​)Pt∣t(i)=(I−Kt(i)Hi)Pt∣t−1(i)P_{t|t}^{(i)} = (I - K_t^{(i)} H_{i}) P_{t|t-1}^{(i)}Pt∣t(i)​=(I−Kt(i)​Hi​)Pt∣t−1(i)​Here, P_{t|t}^{(i)} is the error covariance matrix of the Kalman filter for regime i at time t, K_t^{(i)} is the Kalman gain matrix, and y_t is the observation at time t.Mode EstimationOnce we have the estimated state x_t and error covariance matrix P_{t|t}^{(i)} for each regime, we need to estimate the mode z_t of the system, which tells us which regime the system is currently in. This is done using Bayesian model selection. We estimate the posterior probability of each model given the observations up to time t:P(zt=i∣y1:t)=P(y1:t∣zt=i)P(zt=i)∑j=1NP(y1:t∣zt=j)P(zt=j)P(z_t = i | y_{1:t}) = \\frac{P(y_{1:t}|z_t=i)P(z_t=i)}{\\sum_{j=1}^N P(y_{1:t}|z_t=j)P(z_t=j)}P(zt​=i∣y1:t​)=∑j=1N​P(y1:t​∣zt​=j)P(zt​=j)P(y1:t​∣zt​=i)P(zt​=i)​where P(z_t=i) is the prior probability of regime i, and P(y_{1:t}|z_t=i) is the likelihood of the observations up to time t given that the system is in regime i. The prior probabilities can be set uniformly, i.e., P(z_t=i) = 1/N.The likelihood can be computed using the Kalman filter prediction and update steps as follows:P(y1:t∣zt=i)=∫P(yt∣xt)P(xt∣xt−1,zt=i)dxtP(y_{1:t}|z_t=i) = \\int P(y_t|x_t) P(x_t|x_{t-1}, z_t=i)dx_tP(y1:t​∣zt​=i)=∫P(yt​∣xt​)P(xt​∣xt−1​,zt​=i)dxt​where P(x_t|x_{t-1}, z_t=i) is the state transition probability for regime i, and P(y_t|x_t) is the observation probability. These probabilities are given by the state model and observation model for each regime.Once we have computed the posterior probabilities, the mode z_t can be estimated as:z^t=arg⁡max⁡i=1NP(zt=i∣y1:t)\\hat{z}_t = \\arg\\max_{i=1}^N P(z_t=i|y_{1:t})z^t​=argi=1maxN​P(zt​=i∣y1:t​)Variants of Switching Kalman FilterThe SKF algorithm described above assumes that the models for different regimes are known a priori. In practice, the models may not be known, or they may change over time. To address these issues, several variants of SKF have been proposed.Adaptive Switching Kalman FilterThe adaptive switching Kalman filter (ASKF) is a variant of SKF that adapts to changes in the system. It is based on the assumption that the parameters of the different regimes may change slowly over time. The ASKF estimates the parameters of each regime using a recursive least-squares algorithm and updates them periodically.The state transition equation for the ASKF can be written as:xt=Aθtxt−1+wtx_t = A_{\\theta_t} x_{t-1} + w_txt​=Aθt​​xt−1​+wt​where A_{\\theta_t} is the state model parameterized by a vector theta_t. The observation equation is the same as that for SKF.The ASKF algorithm consists of the following steps:  Initialize the state x_0 and the error covariance matrix P_0.  For each regime i, initialize the state model parameters theta_i using a set of prior values.  For each time step t, do the following: a. Using the current mode estimate z_t, compute the Kalman filter prediction and update as described above. b. Update the state model parameters for each regime using a recursive least-squares algorithm. c. Compute the posterior probabilities and estimate the mode z_t as described above.The recursive least-squares algorithm updates the state model parameters theta_t^{(i)} as follows:θt(i)=θt−1(i)+Kt(i)[yt−Hix^t∣t−1(i)]xt−1T\\theta_t^{(i)} = \\theta_{t-1}^{(i)} + K_t^{(i)}[y_t - H_i \\hat{x}_{t|t-1}^{(i)}]x_{t-1}^Tθt(i)​=θt−1(i)​+Kt(i)​[yt​−Hi​x^t∣t−1(i)​]xt−1T​where K_t^{(i)} is the Kalman gain matrix for regime i, and x_{t-1} is the state at time t-1. The error covariance of the parameter estimate is updated as follows:Pθ,t(i)=Pθ,t−1(i)−Kt(i)[HiPt∣t−1(i)HiT+Ri]Kt(i)TP_{\\theta,t}^{(i)} = P_{\\theta,t-1}^{(i)} - K_t^{(i)} [H_i P_{t|t-1}^{(i)} H_i^T + R_i] K_t^{(i)T}Pθ,t(i)​=Pθ,t−1(i)​−Kt(i)​[Hi​Pt∣t−1(i)​HiT​+Ri​]Kt(i)T​The state model parameters can also be regularized to prevent overfitting.Particle Switching Kalman FilterThe particle filtering approach to the SKF is called the particle switching Kalman filter (PSKF). In the PSKF, we use a set of particle filters instead of Kalman filters to estimate the state in each regime. Particle filtering is a non-parametric approach to filtering that approximates the posterior distribution of the state using a set of weighted particles.The PSKF algorithm consists of the following steps:  Initialize a set of M particles for each regime.  For each time step t, do the following: a. For each regime i, propagate the particles using the state transition equation and compute the weights based on the observation model. b. Resample the particles with replacement based on their weights, and compute the Kalman filter prediction and update for each regime. c. Compute the posterior probabilities and estimate the mode z_t as described above.The PSKF has several advantages over the SKF. It can handle non-linear and non-Gaussian models and does not make any assumptions about the system dynamics. However, it is computationally expensive and requires a large number of particles to get accurate estimates.Implementation in PythonIn this section, we provide an implementation of the SKF algorithm in Python using NumPy and SciPy. We assume that the state and observation models for each regime are known a priori.import numpy as npfrom scipy.stats import multivariate_normalclass KalmanFilter:    def __init__(self, A, H, Q, R, x0, P0):        self.A = A        self.H = H        self.Q = Q        self.R = R        self.x = x0        self.P = P0    def predict(self):        self.x = self.A @ self.x        self.P = self.A @ self.P @ self.A.T + self.Q    def update(self, y):        K = self.P @ self.H.T @ np.linalg.inv(self.H @ self.P @ self.H.T + self.R)        self.x = self.x + K @ (y - self.H @ self.x)        self.P = (np.eye(self.x.shape[0]) - K @ self.H) @ self.Pclass SwitchingKalmanFilter:    def __init__(self, models, Pz0=None):        self.models = models        self.N = len(models)        self.Pz = np.ones(self.N) / self.N if Pz0 is None else Pz0.copy()    def predict(self):        for model in self.models:            model.predict()    def update(self, y):        for i in range(self.N):            self.models[i].update(y)        self.compute_posterior()    def compute_posterior(self):        likelihoods = np.zeros(self.N)        for i in range(self.N):            prob = multivariate_normal.pdf(self.models[i].x, cov=self.models[i].P, mean=self.models[i].x)            likelihoods[i] = self.Pz[i] * prob        self.Pz = likelihoods / likelihoods.sum()    def get_state(self):        x = np.zeros(self.models[0].x.shape)        for i in range(self.N):            x += self.Pz[i] * self.models[i].x        return x    def get_error_cov(self):        P = np.zeros(self.models[0].P.shape)        for i in range(self.N):            d = self.models[i].x - self.get_state()            P += self.Pz[i] * (self.models[i].P + d @ d.T)        return Pif __name__ == '__main__':    A1 = np.array([[0.9, 0], [0, 0.9]])    H1 = np.array([[1, 0], [0, 1]])    Q1 = np.array([[0.1, 0], [0, 0.1]])    R1 = np.array([[1, 0], [0, 1]])    x01 = np.array([0, 0])    P01 = np.eye(2)    A2 = np.array([[-0.9, 0], [0, -0.9]])    H2 = np.array([[1, 0], [0, 1]])    Q2 = np.array([[0.1, 0], [0, 0.1]])    R2 = np.array([[1, 0], [0, 1]])    x02 = np.array([5, 5])    P02 = np.eye(2)    models = [        KalmanFilter(A1, H1, Q1, R1, x01, P01),        KalmanFilter(A2, H2, Q2, R2, x02, P02)    ]    skf = SwitchingKalmanFilter(models)    y = np.random.multivariate_normal(np.zeros(2), R1, 100)    for obs in y:        skf.predict()        skf.update(obs)    print(skf.get_state())    print(skf.get_error_cov())This is a simple example of SKF with two regimes, where the state model and observation model for each regime are the same. We define the KalmanFilter class to represent the Kalman filter for each regime and the SwitchingKalmanFilter class to represent the SKF. The functions predict and update implement the Kalman filter prediction and update steps, and compute_posterior computes the posterior probabilities of each regime.In the main function, we define two regimes with different state models and observation models, and we use SKF to estimate the system state based on noisy measurements. We generate the measurements using a Gaussian distribution with mean 0 and covariance R1. Finally, we print the estimated state and error covariance.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>A Kalman filter is a widely used algorithm that provides optimal estimation of a state variable based on a series of noisy measurements. It makes use of the past measurements and uses them, along with the system dynamics, to predict the future state of the system. This predicted state is then compared with the actual measurement, and the filter generates an optimal estimation of the true state. However, the standard Kalman filter assumes that the underlying system behaves in a certain way, and if the assumption is incorrect, the filter may not perform optimally. In such cases, we need to switch between multiple Kalman filters to estimate the system state accurately. This article discusses the switching Kalman filter and its variants.</p><h1 id=\"switching-kalman-filter\">Switching Kalman Filter</h1><p>A switching Kalman filter (SKF) is an extension of the standard Kalman filter that efficiently addresses the problem of switching between different models. The idea behind SKF is to use a set of different models that describe the different regimes of the system. In each regime, a different Kalman filter is used to estimate the system state.</p><p>Consider a system with <code>N</code> different regimes, and let <code>z_t</code> be a discrete random variable that takes values in <code>{1, 2, ..., N}</code> at time <code>t</code>, indicating which regime the system is currently in. Further, let <code>x_t</code> be the state of the system at time <code>t</code>, and <code>y_t</code> be the observation (measurement) of the system at time <code>t</code>. Assuming that the system transitions between regimes according to a Markov process, the state transition equation can be written as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>=</mo><msub><mi>A</mi><msub><mi>z</mi><mi>t</mi></msub></msub><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>w</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_t = A_{z_t} x_{t-1} + w_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9334em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2963em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span><p>where <code>w_t</code> is a zero-mean Gaussian noise with covariance <code>Q_{z_t}</code>. The observation equation is given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>y</mi><mi>t</mi></msub><mo>=</mo><msub><mi>H</mi><msub><mi>z</mi><mi>t</mi></msub></msub><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><msub><mi>v</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">y_t = H_{z_t} x_t + v_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9334em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2963em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span><p>where <code>v_t</code> is a zero-mean Gaussian noise with covariance <code>R_{z_t}</code>, and <code>A_i, H_i, Q_i, R_i</code> are the state model, observation model, process noise covariance, and measurement noise covariance, respectively, for regime <code>i</code>.</p><p>The SKF algorithm consists of two steps: (i) filtering, and (ii) mode estimation.</p><h2 id=\"filtering-with-switching-kalman-filter\">Filtering with switching Kalman Filter</h2><p>In the first step, we use a set of Kalman filters to filter the observations <code>y_t</code> and estimate the state <code>x_t</code> in each regime. Suppose we have <code>N</code> different Kalman filters, each corresponding to a different regime. For each regime <code>i</code>, the Kalman filter consists of the following equations:</p><p><strong>Prediction step:</strong></p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover><mrow><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub><msubsup><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover><mrow><mi>t</mi><mo>−</mo><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">\\hat{x}_{t|t-1}^{(i)} = A_{i} \\hat{x}_{t-1|t-1}^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.56em;vertical-align:-0.5152em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5152em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.56em;vertical-align:-0.5152em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1∣</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5152em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>P</mi><mrow><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub><msubsup><mi>P</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msubsup><mi>A</mi><mi>i</mi><mi>T</mi></msubsup><mo>+</mo><msub><mi>Q</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">P_{t|t-1}^{(i)} = A_{i} P_{t-1|t-1}^{(i)} A_{i}^T + Q_{i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.56em;vertical-align:-0.5152em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5152em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.56em;vertical-align:-0.5152em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1∣</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5152em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span><p><strong>Update step:</strong></p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>K</mi><mi>t</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><msubsup><mi>P</mi><mrow><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msubsup><mi>H</mi><mi>i</mi><mi>T</mi></msubsup><mo stretchy=\"false\">[</mo><msub><mi>H</mi><mi>i</mi></msub><msubsup><mi>P</mi><mrow><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msubsup><mi>H</mi><mi>i</mi><mi>T</mi></msubsup><mo>+</mo><msub><mi>R</mi><mi>i</mi></msub><msup><mo stretchy=\"false\">]</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">K_t^{(i)} = P_{t|t-1}^{(i)} H_{i}^T [H_{i} P_{t|t-1}^{(i)} H_{i}^T + R_{i}]^{-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2906em;vertical-align:-0.2458em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4542em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2458em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.56em;vertical-align:-0.5152em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5152em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-2.453em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5152em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-2.453em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover><mrow><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mi>t</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><msubsup><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover><mrow><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><msubsup><mi>K</mi><mi>t</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>t</mi></msub><mo>−</mo><msub><mi>H</mi><mi>i</mi></msub><msubsup><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover><mrow><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hat{x}_{t|t}^{(i)} = \\hat{x}_{t|t-1}^{(i)} + K_t^{(i)} (y_t - H_{i} \\hat{x}_{t|t-1}^{(i)})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.56em;vertical-align:-0.5152em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5152em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.56em;vertical-align:-0.5152em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5152em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2948em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4542em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2458em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.56em;vertical-align:-0.5152em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5152em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>P</mi><mrow><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mi>t</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><mo stretchy=\"false\">(</mo><mi>I</mi><mo>−</mo><msubsup><mi>K</mi><mi>t</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msub><mi>H</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><msubsup><mi>P</mi><mrow><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">P_{t|t}^{(i)} = (I - K_t^{(i)} H_{i}) P_{t|t-1}^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.56em;vertical-align:-0.5152em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5152em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.56em;vertical-align:-0.5152em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4542em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2458em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5152em;\"><span></span></span></span></span></span></span></span></span></span></span><p>Here, <code>P_{t|t}^{(i)}</code> is the error covariance matrix of the Kalman filter for regime <code>i</code> at time <code>t</code>, <code>K_t^{(i)}</code> is the Kalman gain matrix, and <code>y_t</code> is the observation at time <code>t</code>.</p><h2 id=\"mode-estimation\">Mode Estimation</h2><p>Once we have the estimated state <code>x_t</code> and error covariance matrix <code>P_{t|t}^{(i)}</code> for each regime, we need to estimate the mode <code>z_t</code> of the system, which tells us which regime the system is currently in. This is done using Bayesian model selection. We estimate the posterior probability of each model given the observations up to time <code>t</code>:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>t</mi></msub><mo>=</mo><mi>i</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>y</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>z</mi><mi>t</mi></msub><mo>=</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>t</mi></msub><mo>=</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>z</mi><mi>t</mi></msub><mo>=</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>t</mi></msub><mo>=</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">P(z_t = i | y_{1:t}) = \\frac{P(y_{1:t}|z_t=i)P(z_t=i)}{\\sum_{j=1}^N P(y_{1:t}|z_t=j)P(z_t=j)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">:</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.734em;vertical-align:-1.307em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.1288em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9812em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">:</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">:</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.307em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><p>where <code>P(z_t=i)</code> is the prior probability of regime <code>i</code>, and <code>P(y_{1:t}|z_t=i)</code> is the likelihood of the observations up to time <code>t</code> given that the system is in regime <code>i</code>. The prior probabilities can be set uniformly, i.e., <code>P(z_t=i) = 1/N</code>.</p><p>The likelihood can be computed using the Kalman filter prediction and update steps as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>z</mi><mi>t</mi></msub><mo>=</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>∫</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>t</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>z</mi><mi>t</mi></msub><mo>=</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mi>d</mi><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">P(y_{1:t}|z_t=i) = \\int P(y_t|x_t) P(x_t|x_{t-1}, z_t=i)dx_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">:</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.2222em;vertical-align:-0.8622em;\"></span><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span><p>where <code>P(x_t|x_{t-1}, z_t=i)</code> is the state transition probability for regime <code>i</code>, and <code>P(y_t|x_t)</code> is the observation probability. These probabilities are given by the state model and observation model for each regime.</p><p>Once we have computed the posterior probabilities, the mode <code>z_t</code> can be estimated as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mover accent=\"true\"><mi>z</mi><mo>^</mo></mover><mi>t</mi></msub><mo>=</mo><mi>arg</mi><mo>⁡</mo><munderover><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>t</mi></msub><mo>=</mo><mi>i</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>y</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hat{z}_t = \\arg\\max_{i=1}^N P(z_t=i|y_{1:t})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.9366em;vertical-align:-0.7277em;\"></span><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2089em;\"><span style=\"top:-2.3723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">max</span></span></span><span style=\"top:-3.6306em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7277em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">:</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span><h1 id=\"variants-of-switching-kalman-filter\">Variants of Switching Kalman Filter</h1><p>The SKF algorithm described above assumes that the models for different regimes are known a priori. In practice, the models may not be known, or they may change over time. To address these issues, several variants of SKF have been proposed.</p><h2 id=\"adaptive-switching-kalman-filter\">Adaptive Switching Kalman Filter</h2><p>The adaptive switching Kalman filter (ASKF) is a variant of SKF that adapts to changes in the system. It is based on the assumption that the parameters of the different regimes may change slowly over time. The ASKF estimates the parameters of each regime using a recursive least-squares algorithm and updates them periodically.</p><p>The state transition equation for the ASKF can be written as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>=</mo><msub><mi>A</mi><msub><mi>θ</mi><mi>t</mi></msub></msub><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>w</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_t = A_{\\theta_t} x_{t-1} + w_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9334em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2963em;\"><span style=\"top:-2.357em;margin-left:-0.0278em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span><p>where <code>A_{\\theta_t}</code> is the state model parameterized by a vector <code>theta_t</code>. The observation equation is the same as that for SKF.</p><p>The ASKF algorithm consists of the following steps:</p><ol>  <li>Initialize the state <code>x_0</code> and the error covariance matrix <code>P_0</code>.</li>  <li>For each regime <code>i</code>, initialize the state model parameters <code>theta_i</code> using a set of prior values.</li>  <li>For each time step <code>t</code>, do the following: a. Using the current mode estimate <code>z_t</code>, compute the Kalman filter prediction and update as described above. b. Update the state model parameters for each regime using a recursive least-squares algorithm. c. Compute the posterior probabilities and estimate the mode <code>z_t</code> as described above.</li></ol><p>The recursive least-squares algorithm updates the state model parameters <code>theta_t^{(i)}</code> as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>θ</mi><mi>t</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><msubsup><mi>θ</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><msubsup><mi>K</mi><mi>t</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo stretchy=\"false\">[</mo><msub><mi>y</mi><mi>t</mi></msub><mo>−</mo><msub><mi>H</mi><mi>i</mi></msub><msubsup><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover><mrow><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo stretchy=\"false\">]</mo><msubsup><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mi>T</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">\\theta_t^{(i)} = \\theta_{t-1}^{(i)} + K_t^{(i)}[y_t - H_i \\hat{x}_{t|t-1}^{(i)}]x_{t-1}^T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2906em;vertical-align:-0.2458em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4542em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2458em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3694em;vertical-align:-0.3246em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4337em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3246em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2948em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4542em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2458em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.56em;vertical-align:-0.5152em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5152em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3053em;\"><span></span></span></span></span></span></span></span></span></span></span><p>where <code>K_t^{(i)}</code> is the Kalman gain matrix for regime <code>i</code>, and <code>x_{t-1}</code> is the state at time <code>t-1</code>. The error covariance of the parameter estimate is updated as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>P</mi><mrow><mi>θ</mi><mo separator=\"true\">,</mo><mi>t</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><msubsup><mi>P</mi><mrow><mi>θ</mi><mo separator=\"true\">,</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>−</mo><msubsup><mi>K</mi><mi>t</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo stretchy=\"false\">[</mo><msub><mi>H</mi><mi>i</mi></msub><msubsup><mi>P</mi><mrow><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msubsup><mi>H</mi><mi>i</mi><mi>T</mi></msubsup><mo>+</mo><msub><mi>R</mi><mi>i</mi></msub><mo stretchy=\"false\">]</mo><msubsup><mi>K</mi><mi>t</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mi>T</mi></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">P_{\\theta,t}^{(i)} = P_{\\theta,t-1}^{(i)} - K_t^{(i)} [H_i P_{t|t-1}^{(i)} H_i^T + R_i] K_t^{(i)T}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.4822em;vertical-align:-0.4374em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4374em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4822em;vertical-align:-0.4374em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4374em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.56em;vertical-align:-0.5152em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4542em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2458em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5152em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-2.453em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2948em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4542em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2458em;\"><span></span></span></span></span></span></span></span></span></span></span><p>The state model parameters can also be regularized to prevent overfitting.</p><h2 id=\"particle-switching-kalman-filter\">Particle Switching Kalman Filter</h2><p>The particle filtering approach to the SKF is called the particle switching Kalman filter (PSKF). In the PSKF, we use a set of particle filters instead of Kalman filters to estimate the state in each regime. Particle filtering is a non-parametric approach to filtering that approximates the posterior distribution of the state using a set of weighted particles.</p><p>The PSKF algorithm consists of the following steps:</p><ol>  <li>Initialize a set of <code>M</code> particles for each regime.</li>  <li>For each time step <code>t</code>, do the following: a. For each regime <code>i</code>, propagate the particles using the state transition equation and compute the weights based on the observation model. b. Resample the particles with replacement based on their weights, and compute the Kalman filter prediction and update for each regime. c. Compute the posterior probabilities and estimate the mode <code>z_t</code> as described above.</li></ol><p>The PSKF has several advantages over the SKF. It can handle non-linear and non-Gaussian models and does not make any assumptions about the system dynamics. However, it is computationally expensive and requires a large number of particles to get accurate estimates.</p><h1 id=\"implementation-in-python\">Implementation in Python</h1><p>In this section, we provide an implementation of the SKF algorithm in Python using NumPy and SciPy. We assume that the state and observation models for each regime are known a priori.</p><pre><code class=\"language-python\">import numpy as npfrom scipy.stats import multivariate_normalclass KalmanFilter:    def __init__(self, A, H, Q, R, x0, P0):        self.A = A        self.H = H        self.Q = Q        self.R = R        self.x = x0        self.P = P0    def predict(self):        self.x = self.A @ self.x        self.P = self.A @ self.P @ self.A.T + self.Q    def update(self, y):        K = self.P @ self.H.T @ np.linalg.inv(self.H @ self.P @ self.H.T + self.R)        self.x = self.x + K @ (y - self.H @ self.x)        self.P = (np.eye(self.x.shape[0]) - K @ self.H) @ self.Pclass SwitchingKalmanFilter:    def __init__(self, models, Pz0=None):        self.models = models        self.N = len(models)        self.Pz = np.ones(self.N) / self.N if Pz0 is None else Pz0.copy()    def predict(self):        for model in self.models:            model.predict()    def update(self, y):        for i in range(self.N):            self.models[i].update(y)        self.compute_posterior()    def compute_posterior(self):        likelihoods = np.zeros(self.N)        for i in range(self.N):            prob = multivariate_normal.pdf(self.models[i].x, cov=self.models[i].P, mean=self.models[i].x)            likelihoods[i] = self.Pz[i] * prob        self.Pz = likelihoods / likelihoods.sum()    def get_state(self):        x = np.zeros(self.models[0].x.shape)        for i in range(self.N):            x += self.Pz[i] * self.models[i].x        return x    def get_error_cov(self):        P = np.zeros(self.models[0].P.shape)        for i in range(self.N):            d = self.models[i].x - self.get_state()            P += self.Pz[i] * (self.models[i].P + d @ d.T)        return Pif __name__ == '__main__':    A1 = np.array([[0.9, 0], [0, 0.9]])    H1 = np.array([[1, 0], [0, 1]])    Q1 = np.array([[0.1, 0], [0, 0.1]])    R1 = np.array([[1, 0], [0, 1]])    x01 = np.array([0, 0])    P01 = np.eye(2)    A2 = np.array([[-0.9, 0], [0, -0.9]])    H2 = np.array([[1, 0], [0, 1]])    Q2 = np.array([[0.1, 0], [0, 0.1]])    R2 = np.array([[1, 0], [0, 1]])    x02 = np.array([5, 5])    P02 = np.eye(2)    models = [        KalmanFilter(A1, H1, Q1, R1, x01, P01),        KalmanFilter(A2, H2, Q2, R2, x02, P02)    ]    skf = SwitchingKalmanFilter(models)    y = np.random.multivariate_normal(np.zeros(2), R1, 100)    for obs in y:        skf.predict()        skf.update(obs)    print(skf.get_state())    print(skf.get_error_cov())</code></pre><p>This is a simple example of SKF with two regimes, where the state model and observation model for each regime are the same. We define the <code>KalmanFilter</code> class to represent the Kalman filter for each regime and the <code>SwitchingKalmanFilter</code> class to represent the SKF. The functions <code>predict</code> and <code>update</code> implement the Kalman filter prediction and update steps, and <code>compute_posterior</code> computes the posterior probabilities of each regime.</p><p>In the <code>main</code> function, we define two regimes with different state models and observation models, and we use SKF to estimate the system state based on noisy measurements. We generate the measurements using a Gaussian distribution with mean <code>0</code> and covariance <code>R1</code>. Finally, we print the estimated state and error covariance.</p>",
            "url": "http://localhost:4000/2023/04/22/switching-kalman-filter",
            
            
            
            
            
            "date_published": "2023-04-22T00:00:00+01:00",
            "date_modified": "2023-04-22T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/21/em-turning-points",
            "title": "Expectation Maximization for Change Point Detection in Time Series",
            "summary": "This article describes the Expectation Maximization algorithm for finding change points in time series data. The algorithm is explained for both batch and online mode, and Python implementation is provided.",
            "content_text": "IntroductionChange point detection in time series data is a fundamental problem in statistics and machine learning. A change point is a time at which some property of the time series changes abruptly. For example, a change point in stock prices could indicate a shift in market trends or a significant world event. Change point detection is therefore useful in many applications such as finance, weather forecasting, and medical research.One approach for detecting change points is the Expectation Maximization (EM) algorithm. The EM algorithm is a powerful tool for finding the underlying structure of data that has been generated from an unknown source. It works by iteratively fitting a statistical model to the data, estimating the parameters of the model, and then using those parameters to predict the underlying structure of the data.In this article, we will start by introducing the EM algorithm and its basic principles. We will then explain how it can be used to detect change points in time series data. Finally, we will demonstrate the algorithm through a Python implementation.The Expectation Maximization AlgorithmThe Expectation Maximization algorithm is a general algorithm for finding maximum likelihood estimates of parameters in statistical models with hidden variables. It is often used when there is missing or incomplete information in the data.In essence, the algorithm works by iteratively updating two sets of variables: the “expectation” variables (E-step) and the “maximization” variables (M-step). The expectation variables represent the expected value of the hidden variables given the observed data and the current estimate of the model parameters. The maximization variables represent the parameter estimates that maximize the likelihood of the observed data given the current estimate of the hidden variables.The EM algorithm can be summarized in the following steps:  Initialize the parameters of the model.  Compute the expectation variables given the current estimate of the parameters.  Compute the maximization variables by maximizing the likelihood function given the expectation variables.  Repeat steps 2 and 3 until convergence.This algorithm is guaranteed to converge to a local maximum of the likelihood function. However, there is no guarantee that this maximum is the global maximum. Therefore, it is often run multiple times with different initial conditions to ensure that the global maximum is found.EM Algorithm for Change Point DetectionNow that we have covered the basic principles of the EM algorithm, let us explain how it can be used for change point detection in time series data.Suppose we have a time series { $x_1$, $x_2$, …, $x_n$ } and we would like to detect any change points in the data. The EM algorithm can be used to fit a statistical model to the data that assumes that there are a fixed number of segments with different means.Let us assume that the data is generated from the following statistical model:xi=μzi+ϵix_i = \\mu_{z_i} + \\epsilon_ixi​=μzi​​+ϵi​where $z_i$ is the segment index, $\\mu_{z_i}$ is the mean of segment $z_i$, and $\\epsilon_i$ is the noise term for observation $i$.We can think of this statistical model as a hidden Markov model, where the segment index $z_i$ is the hidden state and the observation $x_i$ is the observed variable.To apply the EM algorithm, we need to define the expectation and maximization steps. Let $\\theta = { \\mu_1, …, \\mu_k, \\pi_1, …, \\pi_k }$ be the set of parameters of the model, where $k$ is the number of segments in the data and $\\pi_i$ is the probability of being in segment $i$.Batch ModeIn the batch mode of the EM algorithm, we assume that we have access to the entire time series data at once. The algorithm proceeds as follows:Expectation Step:We compute the probability of being in segment $i$ given the observed data and the current estimate of the parameters:γi,j=p(zi=j∣x1,...,xn,θ)=πjf(xi∣μj)∑r=1kπrf(xi∣μr)\\gamma_{i,j} = p(z_i = j \\mid x_1, ..., x_n, \\theta) = \\frac{\\pi_j f(x_i \\mid \\mu_j)}{\\sum_{r=1}^k \\pi_r f(x_i \\mid \\mu_r)}γi,j​=p(zi​=j∣x1​,...,xn​,θ)=∑r=1k​πr​f(xi​∣μr​)πj​f(xi​∣μj​)​where $f(x_i \\mid \\mu_j)$ is the probability density function of a normal distribution with mean $\\mu_j$ and variance $\\sigma^2$, and $\\sigma$ is assumed to be constant for all segments.Maximization Step:We update the parameters by maximizing the log-likelihood of the observed data given the expectation variables, subject to the constraint that the probabilities of being in the different segments add up to one:πj=1n∑i=1nγi,jμj=∑i=1nγi,jxi∑i=1nγi,j\\begin{aligned}\\pi_j &amp;= \\frac{1}{n} \\sum_{i=1}^n \\gamma_{i,j} \\\\\\mu_j &amp;= \\frac{\\sum_{i=1}^n \\gamma_{i,j} x_i}{\\sum_{i=1}^n \\gamma_{i,j}}\\end{aligned}πj​μj​​=n1​i=1∑n​γi,j​=∑i=1n​γi,j​∑i=1n​γi,j​xi​​​We repeat the expectation and maximization steps until convergence.Interpretation:The EM algorithm in batch mode provides us with the maximum likelihood estimates of the segment means and probabilities of being in each segment. We can use this information to identify the change points in the data. A change point is identified as the time where the segment mean changes.Online ModeIn the online mode of the EM algorithm, we assume that we have access to the time series data one observation at a time. We update the model parameters after each observation is received. The algorithm proceeds as follows:Expectation Step:The expectation step remains the same as in the batch mode:γi,j=p(zi=j∣x1,...,xn,θ)=πjf(xi∣μj)∑r=1kπrf(xi∣μr)\\gamma_{i,j} = p(z_i = j \\mid x_1, ..., x_n, \\theta) = \\frac{\\pi_j f(x_i \\mid \\mu_j)}{\\sum_{r=1}^k \\pi_r f(x_i \\mid \\mu_r)}γi,j​=p(zi​=j∣x1​,...,xn​,θ)=∑r=1k​πr​f(xi​∣μr​)πj​f(xi​∣μj​)​Maximization Step:We update the parameters after each observation by maximizing the log-likelihood of the observed data up to that point subject to the same constraint as in the batch mode:πj(t)=πj(t−1)+αjγn,jμj(t)=μj(t−1)+βjγn,j(xn−μj(t−1))\\begin{aligned}\\pi_{j}^{(t)} &amp;= \\pi_{j}^{(t-1)} + \\alpha_j \\gamma_{n,j} \\\\\\mu_{j}^{(t)} &amp;= \\mu_{j}^{(t-1)} + \\beta_j \\gamma _{n,j} (x_{n} - \\mu_{j}^{(t-1)})\\end{aligned}πj(t)​μj(t)​​=πj(t−1)​+αj​γn,j​=μj(t−1)​+βj​γn,j​(xn​−μj(t−1)​)​where $t$ is the time step, $\\alpha_j$ and $\\beta_j$ are the learning rates for the mixture weight and the mean parameter respectively.We repeat the expectation and maximization steps after each observation is received.Interpretation:The EM algorithm in online mode provides the same information as in batch mode. However, it is more useful in applications where online learning is critical. For example, in a stock trading application where stock prices change frequently and rapidly, online change point detection using the EM algorithm can help predict future trends and alter trading strategies on the fly.Python ImplementationWe present a Python implementation of the EM algorithm for change point detection in time series data. The implementation is optimized for the batch mode of the algorithm.import numpy as npfrom scipy.stats import normdef em_cp_detection(X, K, max_iter=100, tol=1e-3):    \"\"\"    Expectation Maximization algorithm for change point detection    Args:        X: 1D numpy array of observations        K: int, number of segments to fit        max_iter: int, maximum number of EM iterations        tol: float, tolerance for convergence    Returns:        tuple of numpy arrays:            * Z: 1D np array of segment assignments (length N)            * mu: np array of segment means (length K)            * pi: np array of segment probabilities (length K)    \"\"\"    n = len(X)    Z = np.zeros(n)    mu = np.zeros(K)    pi = np.ones(K) / K    sig_sq = 1  # assume constant variance for all segments    ll_old = -np.inf    for _ in range(max_iter):        # E-step        for i in range(n):            likelihood = pi * norm.pdf(X[i], mu, np.sqrt(sig_sq))            Z[i] = np.argmax(likelihood)        # M-step        for j in range(K):            mask = Z == j            n_j = np.sum(mask)            pi[j] = n_j / n            if n_j &gt; 0:                mu[j] = np.sum(X[mask]) / n_j        # Compute log-likelihood        ll_new = 0        for i in range(n):            ll_new += np.log(np.sum(pi * norm.pdf(X[i], mu, np.sqrt(sig_sq))))        # Check for convergence        if np.abs(ll_new - ll_old) &lt; tol:            break        ll_old = ll_new    return Z, mu, piConclusionThe Expectation Maximization algorithm is a powerful tool for finding maximum likelihood estimates of parameters in statistical models with hidden variables. Its applicability in batch and online mode makes it useful in many applications, including change point detection in time series data.In this article, we have presented the EM algorithm for change point detection in time series data. We have explained the algorithm in both batch and online mode, and provided a Python implementation for the batch mode. We hope that this article will serve as a useful reference for those interested in implementing the EM algorithm for change point detection.",
            "content_html": "<h2 id=\"introduction\">Introduction</h2><p>Change point detection in time series data is a fundamental problem in statistics and machine learning. A change point is a time at which some property of the time series changes abruptly. For example, a change point in stock prices could indicate a shift in market trends or a significant world event. Change point detection is therefore useful in many applications such as finance, weather forecasting, and medical research.</p><p>One approach for detecting change points is the Expectation Maximization (EM) algorithm. The EM algorithm is a powerful tool for finding the underlying structure of data that has been generated from an unknown source. It works by iteratively fitting a statistical model to the data, estimating the parameters of the model, and then using those parameters to predict the underlying structure of the data.</p><p>In this article, we will start by introducing the EM algorithm and its basic principles. We will then explain how it can be used to detect change points in time series data. Finally, we will demonstrate the algorithm through a Python implementation.</p><h2 id=\"the-expectation-maximization-algorithm\">The Expectation Maximization Algorithm</h2><p>The Expectation Maximization algorithm is a general algorithm for finding maximum likelihood estimates of parameters in statistical models with hidden variables. It is often used when there is missing or incomplete information in the data.</p><p>In essence, the algorithm works by iteratively updating two sets of variables: the “expectation” variables (E-step) and the “maximization” variables (M-step). The expectation variables represent the expected value of the hidden variables given the observed data and the current estimate of the model parameters. The maximization variables represent the parameter estimates that maximize the likelihood of the observed data given the current estimate of the hidden variables.</p><p>The EM algorithm can be summarized in the following steps:</p><ol>  <li>Initialize the parameters of the model.</li>  <li>Compute the expectation variables given the current estimate of the parameters.</li>  <li>Compute the maximization variables by maximizing the likelihood function given the expectation variables.</li>  <li>Repeat steps 2 and 3 until convergence.</li></ol><p>This algorithm is guaranteed to converge to a local maximum of the likelihood function. However, there is no guarantee that this maximum is the global maximum. Therefore, it is often run multiple times with different initial conditions to ensure that the global maximum is found.</p><h2 id=\"em-algorithm-for-change-point-detection\">EM Algorithm for Change Point Detection</h2><p>Now that we have covered the basic principles of the EM algorithm, let us explain how it can be used for change point detection in time series data.</p><p>Suppose we have a time series { $x_1$, $x_2$, …, $x_n$ } and we would like to detect any change points in the data. The EM algorithm can be used to fit a statistical model to the data that assumes that there are a fixed number of segments with different means.</p><p>Let us assume that the data is generated from the following statistical model:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><msub><mi>μ</mi><msub><mi>z</mi><mi>i</mi></msub></msub><mo>+</mo><msub><mi>ϵ</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_i = \\mu_{z_i} + \\epsilon_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8334em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span><p>where $z_i$ is the segment index, $\\mu_{z_i}$ is the mean of segment $z_i$, and $\\epsilon_i$ is the noise term for observation $i$.</p><p>We can think of this statistical model as a hidden Markov model, where the segment index $z_i$ is the hidden state and the observation $x_i$ is the observed variable.</p><p>To apply the EM algorithm, we need to define the expectation and maximization steps. Let $\\theta = { \\mu_1, …, \\mu_k, \\pi_1, …, \\pi_k }$ be the set of parameters of the model, where $k$ is the number of segments in the data and $\\pi_i$ is the probability of being in segment $i$.</p><h3 id=\"batch-mode\">Batch Mode</h3><p>In the batch mode of the EM algorithm, we assume that we have access to the entire time series data at once. The algorithm proceeds as follows:</p><h4 id=\"expectation-step\">Expectation Step:</h4><p>We compute the probability of being in segment $i$ given the observed data and the current estimate of the parameters:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>γ</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>i</mi></msub><mo>=</mo><mi>j</mi><mo>∣</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><msub><mi>π</mi><mi>j</mi></msub><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>∣</mo><msub><mi>μ</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><msub><mi>π</mi><mi>r</mi></msub><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>∣</mo><msub><mi>μ</mi><mi>r</mi></msub><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\gamma_{i,j} = p(z_i = j \\mid x_1, ..., x_n, \\theta) = \\frac{\\pi_j f(x_i \\mid \\mu_j)}{\\sum_{r=1}^k \\pi_r f(x_i \\mid \\mu_r)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.6057em;vertical-align:-1.1787em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.121em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.989em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1787em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><p>where $f(x_i \\mid \\mu_j)$ is the probability density function of a normal distribution with mean $\\mu_j$ and variance $\\sigma^2$, and $\\sigma$ is assumed to be constant for all segments.</p><h4 id=\"maximization-step\">Maximization Step:</h4><p>We update the parameters by maximizing the log-likelihood of the observed data given the expectation variables, subject to the constraint that the probabilities of being in the different segments add up to one:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msub><mi>π</mi><mi>j</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>γ</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msub><mi>μ</mi><mi>j</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>γ</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><msub><mi>x</mi><mi>i</mi></msub></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>γ</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\\pi_j &amp;= \\frac{1}{n} \\sum_{i=1}^n \\gamma_{i,j} \\\\\\mu_j &amp;= \\frac{\\sum_{i=1}^n \\gamma_{i,j} x_i}{\\sum_{i=1}^n \\gamma_{i,j}}\\end{aligned}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.0171em;vertical-align:-2.7585em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2585em;\"><span style=\"top:-5.2585em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.1869em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7585em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2585em;\"><span style=\"top:-5.2585em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.1869em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.494em;\"><span style=\"top:-2.3057em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.6897em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.994em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7585em;\"><span></span></span></span></span></span></span></span></span></span></span></span><p>We repeat the expectation and maximization steps until convergence.</p><h4 id=\"interpretation\">Interpretation:</h4><p>The EM algorithm in batch mode provides us with the maximum likelihood estimates of the segment means and probabilities of being in each segment. We can use this information to identify the change points in the data. A change point is identified as the time where the segment mean changes.</p><h3 id=\"online-mode\">Online Mode</h3><p>In the online mode of the EM algorithm, we assume that we have access to the time series data one observation at a time. We update the model parameters after each observation is received. The algorithm proceeds as follows:</p><h4 id=\"expectation-step-1\">Expectation Step:</h4><p>The expectation step remains the same as in the batch mode:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>γ</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>i</mi></msub><mo>=</mo><mi>j</mi><mo>∣</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><msub><mi>π</mi><mi>j</mi></msub><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>∣</mo><msub><mi>μ</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><msub><mi>π</mi><mi>r</mi></msub><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>∣</mo><msub><mi>μ</mi><mi>r</mi></msub><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\gamma_{i,j} = p(z_i = j \\mid x_1, ..., x_n, \\theta) = \\frac{\\pi_j f(x_i \\mid \\mu_j)}{\\sum_{r=1}^k \\pi_r f(x_i \\mid \\mu_r)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.6057em;vertical-align:-1.1787em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.121em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.989em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1787em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><h4 id=\"maximization-step-1\">Maximization Step:</h4><p>We update the parameters after each observation by maximizing the log-likelihood of the observed data up to that point subject to the same constraint as in the batch mode:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msubsup><mi>π</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msubsup><mi>π</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><msub><mi>α</mi><mi>j</mi></msub><msub><mi>γ</mi><mrow><mi>n</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msubsup><mi>μ</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msubsup><mi>μ</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><msub><mi>β</mi><mi>j</mi></msub><msub><mi>γ</mi><mrow><mi>n</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo>−</mo><msubsup><mi>μ</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\\pi_{j}^{(t)} &amp;= \\pi_{j}^{(t-1)} + \\alpha_j \\gamma_{n,j} \\\\\\mu_{j}^{(t)} &amp;= \\mu_{j}^{(t-1)} + \\beta_j \\gamma _{n,j} (x_{n} - \\mu_{j}^{(t-1)})\\end{aligned}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.5155em;vertical-align:-1.5078em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0078em;\"><span style=\"top:-4.0078em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5078em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0078em;\"><span style=\"top:-4.0078em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5078em;\"><span></span></span></span></span></span></span></span></span></span></span></span><p>where $t$ is the time step, $\\alpha_j$ and $\\beta_j$ are the learning rates for the mixture weight and the mean parameter respectively.</p><p>We repeat the expectation and maximization steps after each observation is received.</p><h4 id=\"interpretation-1\">Interpretation:</h4><p>The EM algorithm in online mode provides the same information as in batch mode. However, it is more useful in applications where online learning is critical. For example, in a stock trading application where stock prices change frequently and rapidly, online change point detection using the EM algorithm can help predict future trends and alter trading strategies on the fly.</p><h2 id=\"python-implementation\">Python Implementation</h2><p>We present a Python implementation of the EM algorithm for change point detection in time series data. The implementation is optimized for the batch mode of the algorithm.</p><pre><code class=\"language-python\">import numpy as npfrom scipy.stats import normdef em_cp_detection(X, K, max_iter=100, tol=1e-3):    \"\"\"    Expectation Maximization algorithm for change point detection    Args:        X: 1D numpy array of observations        K: int, number of segments to fit        max_iter: int, maximum number of EM iterations        tol: float, tolerance for convergence    Returns:        tuple of numpy arrays:            * Z: 1D np array of segment assignments (length N)            * mu: np array of segment means (length K)            * pi: np array of segment probabilities (length K)    \"\"\"    n = len(X)    Z = np.zeros(n)    mu = np.zeros(K)    pi = np.ones(K) / K    sig_sq = 1  # assume constant variance for all segments    ll_old = -np.inf    for _ in range(max_iter):        # E-step        for i in range(n):            likelihood = pi * norm.pdf(X[i], mu, np.sqrt(sig_sq))            Z[i] = np.argmax(likelihood)        # M-step        for j in range(K):            mask = Z == j            n_j = np.sum(mask)            pi[j] = n_j / n            if n_j &gt; 0:                mu[j] = np.sum(X[mask]) / n_j        # Compute log-likelihood        ll_new = 0        for i in range(n):            ll_new += np.log(np.sum(pi * norm.pdf(X[i], mu, np.sqrt(sig_sq))))        # Check for convergence        if np.abs(ll_new - ll_old) &lt; tol:            break        ll_old = ll_new    return Z, mu, pi</code></pre><h2 id=\"conclusion\">Conclusion</h2><p>The Expectation Maximization algorithm is a powerful tool for finding maximum likelihood estimates of parameters in statistical models with hidden variables. Its applicability in batch and online mode makes it useful in many applications, including change point detection in time series data.</p><p>In this article, we have presented the EM algorithm for change point detection in time series data. We have explained the algorithm in both batch and online mode, and provided a Python implementation for the batch mode. We hope that this article will serve as a useful reference for those interested in implementing the EM algorithm for change point detection.</p>",
            "url": "http://localhost:4000/2023/04/21/em-turning-points",
            
            
            
            "tags": ["Expectation_Maximization","turning_points","changepoint"],
            
            "date_published": "2023-04-21T00:00:00+01:00",
            "date_modified": "2023-04-21T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/20/expectation-maximization",
            "title": "Expectation Maximization: A Powerful Tool for Trading Analysis",
            "summary": "Explore how the Expectation Maximization algorithm can be applied to financial trading analysis in both batch and online mode. A comprehensive mathematical article with Python implementation.",
            "content_text": "IntroductionExpectation Maximization, or EM, is a powerful algorithm for solving a wide range of statistical problems, particularly in the field of machine learning. The algorithm estimates the parameters of a model, assuming that some of the data is missing or unobserved. EM is an iterative algorithm with two steps: the expectation step, which computes the expected values of the unobserved data or missing values, given the observed data and the estimated parameters, and the maximization step, which maximizes the likelihood of the observed data while updating the parameter estimates. EM can be applied in both batch and online modes, depending on how the data is processed. This article explains the theoretical background and algorithmic approach of EM and demonstrates its potential use cases in financial trading analysis, highlighting both modes.Theoretical backgroundThe EM algorithm is based on the maximum likelihood estimation principle, which is used to estimate the parameters of a statistical model that maximizes the likelihood function. The likelihood function calculates the probability of the observed data given the parameters of the model. However, in some cases, part of the data may be unobserved or missing, which makes it impossible to maximize the likelihood function directly. The EM algorithm provides a way to find the maximum likelihood estimates of the parameters in such cases.The EM algorithm solves this problem by introducing a latent or unobserved variable, which represents the missing data. The algorithm then iteratively estimates the parameters of the model by computing the expected values of the missing data given the observed data and the current estimate of the parameters, and then computes the maximum likelihood estimate of the parameters using the expected values. This process repeats until convergence is achieved, or a stopping criterion is satisfied.EM has several advantages over other parameter estimation algorithms, such as gradient descent or Newton-Raphson, particularly in cases where the likelihood function is not easily differentiable. Furthermore, EM provides a way to estimate the parameters of models with incomplete data or models that depend on unobserved variables.The AlgorithmThe EM algorithm can be described in two steps: the expectation step (E-step) and the maximization step (M-step).  E-step: Given the observed data $X$ and the current parameter estimates $\\theta^{(t)}$, we compute the expected value of the unobserved or missing data $Z$ using the conditional probability distribution $p(Z|X,\\theta^{(t)})$. This distribution is called the posterior distribution of $Z$ given $X$ and $\\theta^{(t)}$, and it tells us the probability of the missing data given the observed data and the current parameter estimates.γ(zi)=p(zi∣xi,θ(t))=p(xi∣zi,θ(t))p(zi∣θ(t))∑zip(xi∣zi,θ(t))p(zi∣θ(t))\\gamma(z_i)=p(z_i|x_i,\\theta^{(t)})=\\frac{p(x_i|z_i,\\theta^{(t)})p(z_i|\\theta^{(t)})}{\\sum_{z_i}p(x_i|z_i,\\theta^{(t)})p(z_i|\\theta^{(t)})}γ(zi​)=p(zi​∣xi​,θ(t))=∑zi​​p(xi​∣zi​,θ(t))p(zi​∣θ(t))p(xi​∣zi​,θ(t))p(zi​∣θ(t))​where $z_i$ is the missing data for the $i^{th}$ observation $x_i$, and $\\gamma(z_i)$ is the probability of $z_i$ given $x_i$ and the current parameter estimates $\\theta^{(t)}$. The denominator in the equation normalizes the probabilities over all possible values of $z_i$.  M-step: In the M-step, we compute the maximum likelihood estimate of the parameters $\\theta$ given the observed data and the expected values of the missing data obtained in the E-step.θ(t+1)=arg⁡max⁡θ∑i=1N∑ziγ(zi)log⁡p(xi,zi∣θ)\\theta^{(t+1)}=\\arg\\max_{\\theta}\\sum_{i=1}^N\\sum_{z_i}\\gamma(z_i)\\log p(x_i,z_i|\\theta)θ(t+1)=argθmax​i=1∑N​zi​∑​γ(zi​)logp(xi​,zi​∣θ)where $N$ is the number of observations, and $\\theta^{(t+1)}$ is the updated estimate of the parameters. The expression inside the logarithm is the joint probability of the observed data $x_i$ and its missing data $z_i$ given the parameter estimates $\\theta$.The EM algorithm iterates between the E-step and the M-step until convergence is achieved. The convergence criterion can be based on the change in the log-likelihood of the observed data or on the change in the parameter estimates.Potential use cases in trading analysisEM has several potential use cases in financial trading analysis, particularly in cases where the data is incomplete, missing, or noisy. EM can be applied in both batch and online modes depending on the trading strategy and data formats.Batch modeIn the batch mode, the algorithm processes a fixed set of historical data all at once. The algorithm can be used for various purposes including:Portfolio optimizationEM can be used for portfolio optimization by estimating the asset returns and covariances from historical data. The estimated returns and covariances can then be used to construct an optimal portfolio for a given set of constraints such as risk tolerance and expected return.We can estimate the expected asset returns by assuming a normal distribution and using the EM algorithm to estimate the mean and variance of the distribution. We can also estimate the covariance matrix of the asset returns by modeling the returns as a multivariate normal distribution and using the EM algorithm to estimate the covariance matrix.The Python code for mean and variance estimation is shown below:# Batch EM for mean and variance estimationimport numpy as np# Generate mock datanp.random.seed(42)data = np.random.normal(0, 1, size=(10000, 5))# Initialize mean and variancemean = np.mean(data, axis=0)variance = np.var(data, axis=0)# Run EM algorithm for mean and variance estimationfor i in range(10):    # E-step    gamma = np.exp(-0.5 * ((data - mean) ** 2 / variance + np.log(2 * np.pi * variance)))    # Normalize gamma    gamma /= np.sum(gamma, axis=0)    # M-step    mean = np.sum(gamma * data, axis=0) / np.sum(gamma, axis=0)    variance = np.sum(gamma * (data - mean) ** 2, axis=0) / np.sum(gamma, axis=0)        print('Iteration:', i+1)    print('Mean:', mean)    print('Variance:', variance)Hidden Markov modelsEM can be used for modeling and predicting financial time series data with a Hidden Markov Model (HMM). A HMM is a statistical model that describes a sequence of observations, where each observation is generated from one of several underlying hidden states with some probability. HMMs can be used to model the hidden states of financial markets or assets and to predict future market conditions.We can use the EM algorithm to train the HMM parameters by estimating the transition probabilities between the hidden states and the emission probabilities for each observation. The transition probabilities represent the probabilities of moving from one hidden state to another, and the emission probabilities represent the probabilities of observing an observation given a hidden state.# Batch EM for HMM parameter estimationfrom hmmlearn import hmmimport numpy as np# Generate mock datanp.random.seed(42)data = np.random.normal(0, 1, size=(1000, 1))# Initialize HMM with 2 hidden statesmodel = hmm.GaussianHMM(n_components=2)# Train HMM with EM algorithmmodel.fit(data)# Print estimated parametersprint('Transition probabilities:')print(model.transmat_)print('Means:')print(model.means_)print('Covariances:')print(model.covars_)Online modeIn the online mode, the algorithm processes data point by point or in small batches. The algorithm can be used for various purposes including:Anomaly detectionEM can be used for detecting anomalies in financial data such as fraud detection or detecting unusual market conditions. The algorithm can be used to estimate the normal or expected behavior of the data and identify data points that deviate significantly from the expected behavior.We can use the EM algorithm to estimate the parameters of a normal distribution from the historical data and then calculate the probability of a new data point belonging to the same normal distribution. If the probability is lower than a threshold, the data point is considered an anomaly.# Online EM for anomaly detectionimport numpy as np# Generate mock datanp.random.seed(42)data = np.random.normal(0, 1, size=(10000, 1))# Initialize mean and variancemean = np.mean(data[:100], axis=0)variance = np.var(data[:100], axis=0)# Run EM algorithm for mean and variance estimationfor i in range(100, 10000):    # E-step    gamma = np.exp(-0.5 * ((data[i] - mean) ** 2 / variance + np.log(2 * np.pi * variance)))    # Normalize gamma    gamma /= np.sum(gamma, axis=0)    # M-step    mean = np.sum(gamma * data[i]) / np.sum(gamma)    variance = np.sum(gamma * (data[i] - mean) ** 2) / np.sum(gamma)    # Anomaly detection    prob = np.exp(-0.5 * ((data[i] - mean) ** 2 / variance + np.log(2 * np.pi * variance)))    if prob &lt; 0.001:        print('Anomaly detected at index:', i)Short-term tradingEM can be used for short-term trading strategies by predicting the direction of the market or asset price movements. The algorithm can be used to estimate the parameters of a distribution from the historical data and then predict the next data point using the estimated parameters.We can use the EM algorithm to estimate the mean and variance of a normal distribution from the historical data and then predict the next data point as the mean of the distribution.# Online EM for short-term tradingimport numpy as np# Generate mock datanp.random.seed(42)data = np.random.normal(0, 1, size=(1000, 1))# Initialize mean and variancemean = np.mean(data[:100], axis=0)variance = np.var(data[:100], axis=0)# Run EM algorithm for mean and variance estimationfor i in range(100, 1000):    # E-step    gamma = np.exp(-0.5 * ((data[i] - mean) ** 2 / variance + np.log(2 * np.pi * variance)))    # Normalize gamma    gamma /= np.sum(gamma, axis=0)    # M-step    mean = np.sum(gamma * data[i]) / np.sum(gamma)    variance = np.sum(gamma * (data[i] - mean) ** 2) / np.sum(gamma)    # Short-term trading    if data[i] &gt; mean:        print('Buy')    else:        print('Sell')ConclusionEM is a powerful algorithm for solving a wide range of statistical problems, particularly in machine learning. The algorithm estimates the parameters of the model, assuming that some of the data is missing or unobserved. EM can be applied in both batch and online modes and has several potential use cases in financial trading analysis, including portfolio optimization, hidden Markov models, anomaly detection, and short-term trading strategies. EM can provide reliable and accurate results for statistical problems in finance, which makes it an important tool for financial analysis and decision-making.",
            "content_html": "<h2 id=\"introduction\">Introduction</h2><p>Expectation Maximization, or EM, is a powerful algorithm for solving a wide range of statistical problems, particularly in the field of machine learning. The algorithm estimates the parameters of a model, assuming that some of the data is missing or unobserved. EM is an iterative algorithm with two steps: the expectation step, which computes the expected values of the unobserved data or missing values, given the observed data and the estimated parameters, and the maximization step, which maximizes the likelihood of the observed data while updating the parameter estimates. EM can be applied in both batch and online modes, depending on how the data is processed. This article explains the theoretical background and algorithmic approach of EM and demonstrates its potential use cases in financial trading analysis, highlighting both modes.</p><h2 id=\"theoretical-background\">Theoretical background</h2><p>The EM algorithm is based on the maximum likelihood estimation principle, which is used to estimate the parameters of a statistical model that maximizes the likelihood function. The likelihood function calculates the probability of the observed data given the parameters of the model. However, in some cases, part of the data may be unobserved or missing, which makes it impossible to maximize the likelihood function directly. The EM algorithm provides a way to find the maximum likelihood estimates of the parameters in such cases.</p><p>The EM algorithm solves this problem by introducing a latent or unobserved variable, which represents the missing data. The algorithm then iteratively estimates the parameters of the model by computing the expected values of the missing data given the observed data and the current estimate of the parameters, and then computes the maximum likelihood estimate of the parameters using the expected values. This process repeats until convergence is achieved, or a stopping criterion is satisfied.</p><p>EM has several advantages over other parameter estimation algorithms, such as gradient descent or Newton-Raphson, particularly in cases where the likelihood function is not easily differentiable. Furthermore, EM provides a way to estimate the parameters of models with incomplete data or models that depend on unobserved variables.</p><h2 id=\"the-algorithm\">The Algorithm</h2><p>The EM algorithm can be described in two steps: the expectation step (E-step) and the maximization step (M-step).</p><ol>  <li>E-step: Given the observed data $X$ and the current parameter estimates $\\theta^{(t)}$, we compute the expected value of the unobserved or missing data $Z$ using the conditional probability distribution $p(Z|X,\\theta^{(t)})$. This distribution is called the posterior distribution of $Z$ given $X$ and $\\theta^{(t)}$, and it tells us the probability of the missing data given the observed data and the current parameter estimates.</li></ol><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>γ</mi><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msup><mi>θ</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>z</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msup><mi>θ</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msup><mi>θ</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow><mrow><munder><mo>∑</mo><msub><mi>z</mi><mi>i</mi></msub></munder><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>z</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msup><mi>θ</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msup><mi>θ</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\gamma(z_i)=p(z_i|x_i,\\theta^{(t)})=\\frac{p(x_i|z_i,\\theta^{(t)})p(z_i|\\theta^{(t)})}{\\sum_{z_i}p(x_i|z_i,\\theta^{(t)})p(z_i|\\theta^{(t)})}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.188em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.6688em;vertical-align:-1.1038em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.565em;\"><span style=\"top:-2.296em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0017em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3998em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1038em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><p>where $z_i$ is the missing data for the $i^{th}$ observation $x_i$, and $\\gamma(z_i)$ is the probability of $z_i$ given $x_i$ and the current parameter estimates $\\theta^{(t)}$. The denominator in the equation normalizes the probabilities over all possible values of $z_i$.</p><ol>  <li>M-step: In the M-step, we compute the maximum likelihood estimate of the parameters $\\theta$ given the observed data and the expected values of the missing data obtained in the E-step.</li></ol><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi>θ</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>θ</mi></munder><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><munder><mo>∑</mo><msub><mi>z</mi><mi>i</mi></msub></munder><mi>γ</mi><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>z</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>θ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\theta^{(t+1)}=\\arg\\max_{\\theta}\\sum_{i=1}^N\\sum_{z_i}\\gamma(z_i)\\log p(x_i,z_i|\\theta)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.938em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1784em;vertical-align:-1.3501em;\"></span><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4306em;\"><span style=\"top:-2.3479em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">max</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7521em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.05em;\"><span style=\"top:-1.9em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3501em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span></span></span></span></span><p>where $N$ is the number of observations, and $\\theta^{(t+1)}$ is the updated estimate of the parameters. The expression inside the logarithm is the joint probability of the observed data $x_i$ and its missing data $z_i$ given the parameter estimates $\\theta$.</p><p>The EM algorithm iterates between the E-step and the M-step until convergence is achieved. The convergence criterion can be based on the change in the log-likelihood of the observed data or on the change in the parameter estimates.</p><h2 id=\"potential-use-cases-in-trading-analysis\">Potential use cases in trading analysis</h2><p>EM has several potential use cases in financial trading analysis, particularly in cases where the data is incomplete, missing, or noisy. EM can be applied in both batch and online modes depending on the trading strategy and data formats.</p><h3 id=\"batch-mode\">Batch mode</h3><p>In the batch mode, the algorithm processes a fixed set of historical data all at once. The algorithm can be used for various purposes including:</p><h4 id=\"portfolio-optimization\">Portfolio optimization</h4><p>EM can be used for portfolio optimization by estimating the asset returns and covariances from historical data. The estimated returns and covariances can then be used to construct an optimal portfolio for a given set of constraints such as risk tolerance and expected return.</p><p>We can estimate the expected asset returns by assuming a normal distribution and using the EM algorithm to estimate the mean and variance of the distribution. We can also estimate the covariance matrix of the asset returns by modeling the returns as a multivariate normal distribution and using the EM algorithm to estimate the covariance matrix.</p><p>The Python code for mean and variance estimation is shown below:</p><pre><code class=\"language-python\"># Batch EM for mean and variance estimationimport numpy as np# Generate mock datanp.random.seed(42)data = np.random.normal(0, 1, size=(10000, 5))# Initialize mean and variancemean = np.mean(data, axis=0)variance = np.var(data, axis=0)# Run EM algorithm for mean and variance estimationfor i in range(10):    # E-step    gamma = np.exp(-0.5 * ((data - mean) ** 2 / variance + np.log(2 * np.pi * variance)))    # Normalize gamma    gamma /= np.sum(gamma, axis=0)    # M-step    mean = np.sum(gamma * data, axis=0) / np.sum(gamma, axis=0)    variance = np.sum(gamma * (data - mean) ** 2, axis=0) / np.sum(gamma, axis=0)        print('Iteration:', i+1)    print('Mean:', mean)    print('Variance:', variance)</code></pre><h4 id=\"hidden-markov-models\">Hidden Markov models</h4><p>EM can be used for modeling and predicting financial time series data with a Hidden Markov Model (HMM). A HMM is a statistical model that describes a sequence of observations, where each observation is generated from one of several underlying hidden states with some probability. HMMs can be used to model the hidden states of financial markets or assets and to predict future market conditions.</p><p>We can use the EM algorithm to train the HMM parameters by estimating the transition probabilities between the hidden states and the emission probabilities for each observation. The transition probabilities represent the probabilities of moving from one hidden state to another, and the emission probabilities represent the probabilities of observing an observation given a hidden state.</p><pre><code class=\"language-python\"># Batch EM for HMM parameter estimationfrom hmmlearn import hmmimport numpy as np# Generate mock datanp.random.seed(42)data = np.random.normal(0, 1, size=(1000, 1))# Initialize HMM with 2 hidden statesmodel = hmm.GaussianHMM(n_components=2)# Train HMM with EM algorithmmodel.fit(data)# Print estimated parametersprint('Transition probabilities:')print(model.transmat_)print('Means:')print(model.means_)print('Covariances:')print(model.covars_)</code></pre><h3 id=\"online-mode\">Online mode</h3><p>In the online mode, the algorithm processes data point by point or in small batches. The algorithm can be used for various purposes including:</p><h4 id=\"anomaly-detection\">Anomaly detection</h4><p>EM can be used for detecting anomalies in financial data such as fraud detection or detecting unusual market conditions. The algorithm can be used to estimate the normal or expected behavior of the data and identify data points that deviate significantly from the expected behavior.</p><p>We can use the EM algorithm to estimate the parameters of a normal distribution from the historical data and then calculate the probability of a new data point belonging to the same normal distribution. If the probability is lower than a threshold, the data point is considered an anomaly.</p><pre><code class=\"language-python\"># Online EM for anomaly detectionimport numpy as np# Generate mock datanp.random.seed(42)data = np.random.normal(0, 1, size=(10000, 1))# Initialize mean and variancemean = np.mean(data[:100], axis=0)variance = np.var(data[:100], axis=0)# Run EM algorithm for mean and variance estimationfor i in range(100, 10000):    # E-step    gamma = np.exp(-0.5 * ((data[i] - mean) ** 2 / variance + np.log(2 * np.pi * variance)))    # Normalize gamma    gamma /= np.sum(gamma, axis=0)    # M-step    mean = np.sum(gamma * data[i]) / np.sum(gamma)    variance = np.sum(gamma * (data[i] - mean) ** 2) / np.sum(gamma)    # Anomaly detection    prob = np.exp(-0.5 * ((data[i] - mean) ** 2 / variance + np.log(2 * np.pi * variance)))    if prob &lt; 0.001:        print('Anomaly detected at index:', i)</code></pre><h4 id=\"short-term-trading\">Short-term trading</h4><p>EM can be used for short-term trading strategies by predicting the direction of the market or asset price movements. The algorithm can be used to estimate the parameters of a distribution from the historical data and then predict the next data point using the estimated parameters.</p><p>We can use the EM algorithm to estimate the mean and variance of a normal distribution from the historical data and then predict the next data point as the mean of the distribution.</p><pre><code class=\"language-python\"># Online EM for short-term tradingimport numpy as np# Generate mock datanp.random.seed(42)data = np.random.normal(0, 1, size=(1000, 1))# Initialize mean and variancemean = np.mean(data[:100], axis=0)variance = np.var(data[:100], axis=0)# Run EM algorithm for mean and variance estimationfor i in range(100, 1000):    # E-step    gamma = np.exp(-0.5 * ((data[i] - mean) ** 2 / variance + np.log(2 * np.pi * variance)))    # Normalize gamma    gamma /= np.sum(gamma, axis=0)    # M-step    mean = np.sum(gamma * data[i]) / np.sum(gamma)    variance = np.sum(gamma * (data[i] - mean) ** 2) / np.sum(gamma)    # Short-term trading    if data[i] &gt; mean:        print('Buy')    else:        print('Sell')</code></pre><h2 id=\"conclusion\">Conclusion</h2><p>EM is a powerful algorithm for solving a wide range of statistical problems, particularly in machine learning. The algorithm estimates the parameters of the model, assuming that some of the data is missing or unobserved. EM can be applied in both batch and online modes and has several potential use cases in financial trading analysis, including portfolio optimization, hidden Markov models, anomaly detection, and short-term trading strategies. EM can provide reliable and accurate results for statistical problems in finance, which makes it an important tool for financial analysis and decision-making.</p>",
            "url": "http://localhost:4000/2023/04/20/expectation-maximization",
            
            
            
            
            
            "date_published": "2023-04-20T00:00:00+01:00",
            "date_modified": "2023-04-20T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/19/recursive-algorithms-for-trailing-stop-stochastic-approximation-approach",
            "title": "Recursive Algorithms for Trailing Stop Stochastic Approximation Approach",
            "summary": "Recursive Algorithms for Trailing Stop Stochastic Approximation Approach",
            "content_text": "AbstractTrailing stops are often used in stock trading to limit the maximum of apossible loss and to lock in a profit. This work develops stochastic approximationalgorithms to estimate the optimal trailing stop percentage. A stochastic optimizationapproach is proposed to recursively estimate the desired trailing stop percentage.A modification using projection is developed to ensure that the approximationsequence constructed stays in a reasonable range. Convergence of the algorithm isobtained. Moreover, interval estimates are constructed. Simulation examples are presentedto compare our algorithm with Monte Carlo methods. Finally, we use realmarket data to demonstrate the algorithms.FormulationIn our formulation, we shall not require the stock price $S(t)$ be any specific stochastic process or follow any specific distributions; we only assume the stock price being observable. Based on the observed stock price, for a given time $t$, we define the stop price at a trailing stop percentage $h$ with $0&lt;h&lt;1$ asTh(t)=(1−h)Smax⁡(t)T_h(t)=(1-h) S_{\\max }(t)Th​(t)=(1−h)Smax​(t)whereSmax⁡(t)=max⁡{S(u):0≤u≤t}S_{\\max }(t)=\\max \\{S(u): 0 \\leq u \\leq t\\}Smax​(t)=max{S(u):0≤u≤t}Letτ=inf⁡{t&gt;0:S(t)≤Th(t)}\\tau=\\inf \\left\\{t&gt;0: S(t) \\leq T_h(t)\\right\\}τ=inf{t&gt;0:S(t)≤Th​(t)}Then $\\tau$ is the first time the stock price reaches the stop price. We aim to find the optimal trailing stop percentage $h_* \\in[a, 1]$ with $a&gt;0$ that maximize a suitable objective function. Thus the problem is$(\\mathcal{P})$ Find $\\operatorname{argmax} J(h)=E[\\Phi(S(\\tau)) \\exp (-\\rho \\tau)], \\quad h \\in[a, 1]$Here $\\rho&gt;0$ is an appropriate discount rate and the reward function isΦ(S)=S−S0S0\\Phi(S)=\\frac{S-S_0}{S_0}Φ(S)=S0​S−S0​​In practice, a trailing stop $h$ has to be greater than 0 because $h=0$ means selling right after bought the stock. In view of this, the lower bound $a$ is assumed to be greater than 0 , which represents a reasonable lower bound for the trailing stop percentage.In general, an analytic solution is difficult to obtain even if $S(t)$ is a specific process, e.g., a geometric Brownian motion. This is mainly due to the pathdependence nature of the problem. Our contribution is to devise a numerical approximation procedure that estimates the optimal trailing stop percentage $h$. We will use a stochastic approximation procedure to resolve the problem by constructing a sequence of estimates of the optimal trailing stop percentage $h$, usinghn+1=hn+{ stepsize } gradient estimate of J(h)}.\\left.h_{n+1}=h_n+\\{\\text { stepsize }\\} \\text { gradient estimate of } J(h)\\right\\} .hn+1​=hn​+{ stepsize } gradient estimate of J(h)}.Moreover, in accordance with (4), we need to make sure the iterate $h_n \\in[a, 1]$.Recursive AlgorithmLet us begin with a simple noisy finite difference scheme. The only provision is that $S(t)$ can be observed. Associated with the iteration number $n$, denote the trailing stop percentage by $h_n$. Beginning at an arbitrary initial guess, we construct a sequence of estimates $\\left{h_n\\right}$ recursively as follows. We figure out $\\tau_n$, the first time when the stock price declines under the stop price asτn=inf⁡{t&gt;0:S(t)≤Thn(t)}.\\tau_n=\\inf \\left\\{t&gt;0: S(t) \\leq T_{h_n}(t)\\right\\} .τn​=inf{t&gt;0:S(t)≤Thn​​(t)}.Define a combined process $\\xi_n$ that includes the random effect from $S(t)$ and the stopping time $\\tau_n$ asξn=(S(τn),τn)′\\xi_n=\\left(S\\left(\\tau_n\\right), \\tau_n\\right)^{\\prime}ξn​=(S(τn​),τn​)′where $S\\left(\\tau_n\\right)$ denotes the stock price process $S(t)$ stopped at stopping time $\\tau_n$. Henceforth, we call $\\left{\\xi_n\\right}$ the sequence of collective noise. Let $\\hat{J}(h, \\xi)$ be the observed value of $J(h)$ with collective noise $\\xi$. With the values $h \\pm \\delta_n$, define $Y_n^{ \\pm}$asYn±(h,ξn±)=J^(h±δn,ξn±).Y_n^{ \\pm}\\left(h, \\xi_n^{ \\pm}\\right)=\\hat{J}\\left(h \\pm \\delta_n, \\xi_n^{ \\pm}\\right) .Yn±​(h,ξn±​)=J^(h±δn​,ξn±​).$\\xi_n^{ \\pm}$being the two different collective noises taken at the trailing stop percentages $h \\pm$ $\\delta_n$, where $\\delta_n$ is the finite difference sequence satisfying $\\delta_n \\rightarrow 0$ as $n \\rightarrow \\infty$. We shall write $Y_n^{ \\pm}=Y_n^{ \\pm}\\left(h, \\xi_n^{ \\pm}\\right)$. For simplicity, in what follows, we often use $\\xi_n$ to represent both $\\xi_n^{+}$and $\\xi_n^{-}$if there is no confusion. The gradient estimate at iteration $n$ is given byDJ^(hn,ξn)= def (Yn+−Yn−)/(2δn)D \\hat{J}\\left(h_n, \\xi_n\\right) \\stackrel{\\text { def }}{=}\\left(Y_n^{+}-Y_n^{-}\\right) /\\left(2 \\delta_n\\right)DJ^(hn​,ξn​)= def (Yn+​−Yn−​)/(2δn​)Then the recursive algorithm ishn+1=hn+εnDJ^(hn,ξn),h_{n+1}=h_n+\\varepsilon_n D \\hat{J}\\left(h_n, \\xi_n\\right),hn+1​=hn​+εn​DJ^(hn​,ξn​),where $\\varepsilon_n$ is a sequence of real numbers known as stepsizes. A frequently used choice of step size and finite difference sequences is $\\varepsilon_n=O(1 / n)$ and $\\delta_n=O\\left(1 / n^{1 / 6}\\right)$. Throughout this paper, this is our default choice of stepsize and finite difference sequences.To proceed, defineρn=(Yn+−Yn−)−En(Yn+−Yn−),ηn=[EnYn+−J(hn+δn)]−[EnYn−−J(hn−δn)],βn=J(hn+δn)−J(hn−δn)2δn−Jh(hn),\\begin{aligned}&amp; \\rho_n=\\left(Y_n^{+}-Y_n^{-}\\right)-E_n\\left(Y_n^{+}-Y_n^{-}\\right), \\\\&amp; \\eta_n=\\left[E_n Y_n^{+}-J\\left(h_n+\\delta_n\\right)\\right]-\\left[E_n Y_n^{-}-J\\left(h_n-\\delta_n\\right)\\right], \\\\&amp; \\beta_n=\\frac{J\\left(h_n+\\delta_n\\right)-J\\left(h_n-\\delta_n\\right)}{2 \\delta_n}-J_h\\left(h_n\\right),\\end{aligned}​ρn​=(Yn+​−Yn−​)−En​(Yn+​−Yn−​),ηn​=[En​Yn+​−J(hn​+δn​)]−[En​Yn−​−J(hn​−δn​)],βn​=2δn​J(hn​+δn​)−J(hn​−δn​)​−Jh​(hn​),​where $E_n$ denotes the conditional expectation with respect to $\\mathcal{F}_n$, the $\\sigma$-algebra generated by $\\left{h_j, \\xi_j^{ \\pm}: j&lt;n\\right}, J_h\\left(h_n\\right)=(\\partial / \\partial h) J\\left(h_n\\right)$. In the above, $\\eta_n$ and $\\beta_n$ represent the noise and bias, and $\\left{\\rho_n\\right}$ is a martingale difference sequence. We separate the noise into two parts, uncorrelated noise $\\rho_n$ and correlated noise $\\eta_n$. It is reasonable to assume that after taking the conditional expectations, the resulting function is smooth. With the above definitions, algorithm (9) can be rewritten ashn+1=hn+εnJh(hn)+εnρn2δn+εnβn+εnηn(hn,ξn)2δn.h_{n+1}=h_n+\\varepsilon_n J_h\\left(h_n\\right)+\\varepsilon_n \\frac{\\rho_n}{2 \\delta_n}+\\varepsilon_n \\beta_n+\\varepsilon_n \\frac{\\eta_n\\left(h_n, \\xi_n\\right)}{2 \\delta_n} .hn+1​=hn​+εn​Jh​(hn​)+εn​2δn​ρn​​+εn​βn​+εn​2δn​ηn​(hn​,ξn​)​.Projection AlgorithmsThe use of projections in the algorithms stems from two reasons. First, for the purpose of computations, it is more convenient if one uses projections to force the iterates to remain in a bounded region. In addition, the problems under consideration may well be constrained so that the iterates will be in a given set. Current problem under consideration is such an example (the iterates need to stay in the interval $[a, 1]$ ). For example, one might choose a lowest trailing stop percentage of $10 \\%$ to ensure the holding position will not be closed due to the normal fluctuations of daily stock price. Obviously, there is a upper bound for the optimal trailing stop percentage, $100 \\%$. To solve the problem (4) with constrains, we construct the following stochastic approximation algorithm with a projectionhn+1=Π[hn+εnDJ^(hn,ξn)]h_{n+1}=\\Pi\\left[h_n+\\varepsilon_n D \\hat{J}\\left(h_n, \\xi_n\\right)\\right]hn+1​=Π[hn​+εn​DJ^(hn​,ξn​)]where $\\varepsilon_n=1 / n, \\delta_n=\\delta /\\left(n^{1 / 6}\\right)$ and $\\Pi[x]$ is a projection given byΠ[h]={a, if h&lt;a,1, if h&gt;1,h, otherwise. \\Pi[h]= \\begin{cases}a, &amp; \\text { if } h&lt;a, \\\\ 1, &amp; \\text { if } h&gt;1, \\\\ h, &amp; \\text { otherwise. }\\end{cases}Π[h]=⎩⎨⎧​a,1,h,​ if h&lt;a, if h&gt;1, otherwise. ​As in Kushner and Yin [4], the projection algorithm (11) can be rewritten ashn+1=hn+εnDJ^(hn,ξn)+εnrn,h_{n+1}=h_n+\\varepsilon_n D \\hat{J}\\left(h_n, \\xi_n\\right)+\\varepsilon_n r_n,hn+1​=hn​+εn​DJ^(hn​,ξn​)+εn​rn​,where $\\varepsilon_n r_n=h_{n+1}-h_n-\\varepsilon_n D \\hat{J}\\left(h_n, \\xi_n\\right)$ is the real number with the shortest distance needed to bring $h_n+\\varepsilon_n D \\hat{J}\\left(h_n, \\xi_n\\right)$ back $[a, 1]$ if it is outside this set.Interval EstimatesThis section is devoted to obtaining interval estimates as well as a piratically useful stopping rule for the recursive computation. Roughly, with prescribed confidence level, we wish to show that with large probability (probability close to 1 ), a sequence of scaled and centered estimates and a stopped sequence converge weakly to a diffusion process. Based on this result, we will then be able to build confidence interval for the iterates.To proceed, for simplicity of notation, we take $\\varepsilon_n=1 / n$ and $\\delta_n=\\delta_0 / n^{1 / 6}$. In the analysis to follow, for simplicity and without loss of generality, we take $\\delta_0=1$. We assume all the conditions of Theorem 3.1 holds. To carry out the subsequent study, we also assume an additional condition.(A3) $J_h(h)=J_{h h}\\left(h_\\right)\\left(h-h_\\right)+o\\left(\\left|h-h_\\right|^2\\right)$, where $J_{h h}\\left(h_\\right)-(1 / 2)&lt;0$. In addition, $k^{2 / 3} E\\left(h_k-h_*\\right)^2=O(1)$ and the bound holds uniformly in $k$.Remark 4.1 The first condition in (A3) indicates that $J_h(h)$ is linearizable. The second condition is a moment estimate. Sufficient conditions guaranteeing this can be provided by means of perturbed Lyapunov function methods; see for example [7] for liquidation related issues and the more extensive discussion in [4] for general setting. For simplicity, here we assume this condition.Defineρn∗=[Y(h∗,ξn+)−Y(h∗,ξn−)]−En[Y(h∗,ξn+)−Y(h∗,ξn−)].\\rho_n^*=\\left[Y\\left(h_*, \\xi_n^{+}\\right)-Y\\left(h_*, \\xi_n^{-}\\right)\\right]-E_n\\left[Y\\left(h_*, \\xi_n^{+}\\right)-Y\\left(h_*, \\xi_n^{-}\\right)\\right] .ρn∗​=[Y(h∗​,ξn+​)−Y(h∗​,ξn−​)]−En​[Y(h∗​,ξn+​)−Y(h∗​,ξn−​)].That is, $\\rho_n^$ is $\\rho_n$ with the argument $h_n$ replaced by $h_$. The detailed development of the interval estimates can be outlined as follows. Suppose that we can show that $n^{1 / 3}\\left(h_n-h_\\right)$ is asymptotically normal with mean zero and asymptotic variance $\\sigma^2$. Choose $\\alpha$, such that $0&lt;\\alpha&lt;1$ and $1-\\alpha$ is the desired confidence coefficient. Given $\\varepsilon&gt;0$, then the asymptotic normality implies thatP(n1/3∣hn−h∗∣σ≤zα/2)→1−α, as n→∞.P\\left(\\frac{n^{1 / 3}\\left|h_n-h_*\\right|}{\\sigma} \\leq z_{\\alpha / 2}\\right) \\rightarrow 1-\\alpha, \\text { as } n \\rightarrow \\infty .P(σn1/3∣hn​−h∗​∣​≤zα/2​)→1−α, as n→∞.This will lead to the desired confidence interval estimator. Then we require the length of the interval $\\left|h_n-h_\\right|$ be small enough in that for any $\\varepsilon&gt;0$, for sufficiently large$n$, we can make $\\sigma z_{\\alpha / 2} / n^{1 / 3}&lt;\\varepsilon$ or equivalently $n&gt;\\left\\lfloor\\sigma z_{\\alpha / 2} / \\varepsilon\\right\\rfloor$. DefineMε,αn=⌊σzα/2ε⌋,με,α=inf⁡{n:Mε,αn≤n},M_{\\varepsilon, \\alpha}^n=\\left\\lfloor\\frac{\\sigma z_{\\alpha / 2}}{\\varepsilon}\\right\\rfloor, \\quad \\mu_{\\varepsilon, \\alpha}=\\inf \\left\\{n: M_{\\varepsilon, \\alpha}^n \\leq n\\right\\},Mε,αn​=⌊εσzα/2​​⌋,με,α​=inf{n:Mε,αn​≤n},where $\\lfloor z\\rfloor$ denotes the greatest integer that is less than or equal to $z$. Then $\\mu_{\\varepsilon, \\alpha}$ is a stopping rule for the iterating sequence $\\left{h_n\\right}$. DenoteIμε,α=[hμε,α−σzα/2n2/3,hμε,α+σzα/2n2/3].I_{\\mu_{\\varepsilon, \\alpha}}=\\left[h_{\\mu_{\\varepsilon, \\alpha}}-\\sigma \\frac{z_{\\alpha / 2}}{n^{2 / 3}}, h_{\\mu_{\\varepsilon, \\alpha}}+\\sigma \\frac{z_{\\alpha / 2}}{n^{2 / 3}}\\right] .Iμε,α​​=[hμε,α​​−σn2/3zα/2​​,hμε,α​​+σn2/3zα/2​​].We shall show that as the length of the interval shrinks, i.e., $\\varepsilon \\rightarrow 0$,P{h∈Iμε,α and ∣Iμε,α∣≤ε}→1−α,P\\left\\{h \\in I_{\\mu_{\\varepsilon, \\alpha}} \\text { and }\\left|I_{\\mu_{\\varepsilon, \\alpha}}\\right| \\leq \\varepsilon\\right\\} \\rightarrow 1-\\alpha,P{h∈Iμε,α​​ and ∣∣​Iμε,α​​∣∣​≤ε}→1−α,where $\\left|I_{\\mu_{\\varepsilon, \\alpha}}\\right|$ denotes the length of the interval $I_{\\mu_{\\varepsilon, \\alpha}}$.",
            "content_html": "<h2 id=\"abstract\">Abstract</h2><p align=\"justify\">Trailing stops are often used in stock trading to limit the maximum of apossible loss and to lock in a profit. This work develops stochastic approximationalgorithms to estimate the optimal trailing stop percentage. A stochastic optimizationapproach is proposed to recursively estimate the desired trailing stop percentage.A modification using projection is developed to ensure that the approximationsequence constructed stays in a reasonable range. Convergence of the algorithm isobtained. Moreover, interval estimates are constructed. Simulation examples are presentedto compare our algorithm with Monte Carlo methods. Finally, we use realmarket data to demonstrate the algorithms.</p><h2 id=\"formulation\">Formulation</h2><p>In our formulation, we shall not require the stock price $S(t)$ be any specific stochastic process or follow any specific distributions; we only assume the stock price being observable. Based on the observed stock price, for a given time $t$, we define the stop price at a trailing stop percentage $h$ with $0&lt;h&lt;1$ as<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>h</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>h</mi><mo stretchy=\"false\">)</mo><msub><mi>S</mi><mi>max</mi><mo>⁡</mo></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T_h(t)=(1-h) S_{\\max }(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mtight\">m</span><span class=\"mtight\">a</span><span class=\"mtight\">x</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span>where<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>max</mi><mo>⁡</mo></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\"false\">{</mo><mi>S</mi><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mn>0</mn><mo>≤</mo><mi>u</mi><mo>≤</mo><mi>t</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">S_{\\max }(t)=\\max \\{S(u): 0 \\leq u \\leq t\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mtight\">m</span><span class=\"mtight\">a</span><span class=\"mtight\">x</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">max</span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">}</span></span></span></span>Let<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>τ</mi><mo>=</mo><mi>inf</mi><mo>⁡</mo><mrow><mo fence=\"true\">{</mo><mi>t</mi><mo>&gt;</mo><mn>0</mn><mo>:</mo><mi>S</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><msub><mi>T</mi><mi>h</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">}</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\tau=\\inf \\left\\{t&gt;0: S(t) \\leq T_h(t)\\right\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">in<span style=\"margin-right:0.07778em;\">f</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span></span></span></span>Then $\\tau$ is the first time the stock price reaches the stop price. We aim to find the optimal trailing stop percentage $h_* \\in[a, 1]$ with $a&gt;0$ that maximize a suitable objective function. Thus the problem is$(\\mathcal{P})$ Find $\\operatorname{argmax} J(h)=E[\\Phi(S(\\tau)) \\exp (-\\rho \\tau)], \\quad h \\in[a, 1]$Here $\\rho&gt;0$ is an appropriate discount rate and the reward function is<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Φ</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>S</mi><mo>−</mo><msub><mi>S</mi><mn>0</mn></msub></mrow><msub><mi>S</mi><mn>0</mn></msub></mfrac></mrow><annotation encoding=\"application/x-tex\">\\Phi(S)=\\frac{S-S_0}{S_0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Φ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3335em;vertical-align:-0.4451em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8884em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4101em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>In practice, a trailing stop $h$ has to be greater than 0 because $h=0$ means selling right after bought the stock. In view of this, the lower bound $a$ is assumed to be greater than 0 , which represents a reasonable lower bound for the trailing stop percentage.In general, an analytic solution is difficult to obtain even if $S(t)$ is a specific process, e.g., a geometric Brownian motion. This is mainly due to the pathdependence nature of the problem. Our contribution is to devise a numerical approximation procedure that estimates the optimal trailing stop percentage $h$. We will use a stochastic approximation procedure to resolve the problem by constructing a sequence of estimates of the optimal trailing stop percentage $h$, using<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><msub><mi>h</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>h</mi><mi>n</mi></msub><mo>+</mo><mo stretchy=\"false\">{</mo><mtext> stepsize </mtext><mo stretchy=\"false\">}</mo><mtext> gradient estimate of </mtext><mi>J</mi><mo stretchy=\"false\">(</mo><mi>h</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">}</mo></mrow><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">\\left.h_{n+1}=h_n+\\{\\text { stepsize }\\} \\text { gradient estimate of } J(h)\\right\\} .</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen nulldelimiter\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">{</span><span class=\"mord text\"><span class=\"mord\"> stepsize </span></span><span class=\"mclose\">}</span><span class=\"mord text\"><span class=\"mord\"> gradient estimate of </span></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">h</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">.</span></span></span></span>Moreover, in accordance with (4), we need to make sure the iterate $h_n \\in[a, 1]$.</p><h3 id=\"recursive-algorithm\">Recursive Algorithm</h3><p>Let us begin with a simple noisy finite difference scheme. The only provision is that $S(t)$ can be observed. Associated with the iteration number $n$, denote the trailing stop percentage by $h_n$. Beginning at an arbitrary initial guess, we construct a sequence of estimates $\\left{h_n\\right}$ recursively as follows. We figure out $\\tau_n$, the first time when the stock price declines under the stop price as<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>τ</mi><mi>n</mi></msub><mo>=</mo><mi>inf</mi><mo>⁡</mo><mrow><mo fence=\"true\">{</mo><mi>t</mi><mo>&gt;</mo><mn>0</mn><mo>:</mo><mi>S</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><msub><mi>T</mi><msub><mi>h</mi><mi>n</mi></msub></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">}</mo></mrow><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">\\tau_n=\\inf \\left\\{t&gt;0: S(t) \\leq T_{h_n}(t)\\right\\} .</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1132em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mop\">in<span style=\"margin-right:0.07778em;\">f</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">.</span></span></span></span></p><p>Define a combined process $\\xi_n$ that includes the random effect from $S(t)$ and the stopping time $\\tau_n$ as<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ξ</mi><mi>n</mi></msub><mo>=</mo><msup><mrow><mo fence=\"true\">(</mo><mi>S</mi><mrow><mo fence=\"true\">(</mo><msub><mi>τ</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo><msub><mi>τ</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\xi_n=\\left(S\\left(\\tau_n\\right), \\tau_n\\right)^{\\prime}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.046em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1418em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1132em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1132em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8918em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>where $S\\left(\\tau_n\\right)$ denotes the stock price process $S(t)$ stopped at stopping time $\\tau_n$. Henceforth, we call $\\left{\\xi_n\\right}$ the sequence of collective noise. Let $\\hat{J}(h, \\xi)$ be the observed value of $J(h)$ with collective noise $\\xi$. With the values $h \\pm \\delta_n$, define $Y_n^{ \\pm}$as<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>Y</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">±</mo></msubsup><mrow><mo fence=\"true\">(</mo><mi>h</mi><mo separator=\"true\">,</mo><msubsup><mi>ξ</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">±</mo></msubsup><mo fence=\"true\">)</mo></mrow><mo>=</mo><mover accent=\"true\"><mi>J</mi><mo>^</mo></mover><mrow><mo fence=\"true\">(</mo><mi>h</mi><mo>±</mo><msub><mi>δ</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><msubsup><mi>ξ</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">±</mo></msubsup><mo fence=\"true\">)</mo></mrow><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">Y_n^{ \\pm}\\left(h, \\xi_n^{ \\pm}\\right)=\\hat{J}\\left(h \\pm \\delta_n, \\xi_n^{ \\pm}\\right) .</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0213em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-2.453em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">±</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">h</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-2.453em;margin-left:-0.046em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">±</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1968em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9468em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span></span><span style=\"top:-3.2523em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.0833em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">±</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-2.453em;margin-left:-0.046em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">±</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">.</span></span></span></span>$\\xi_n^{ \\pm}$being the two different collective noises taken at the trailing stop percentages $h \\pm$ $\\delta_n$, where $\\delta_n$ is the finite difference sequence satisfying $\\delta_n \\rightarrow 0$ as $n \\rightarrow \\infty$. We shall write $Y_n^{ \\pm}=Y_n^{ \\pm}\\left(h, \\xi_n^{ \\pm}\\right)$. For simplicity, in what follows, we often use $\\xi_n$ to represent both $\\xi_n^{+}$and $\\xi_n^{-}$if there is no confusion. The gradient estimate at iteration $n$ is given by<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mover accent=\"true\"><mi>J</mi><mo>^</mo></mover><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><msub><mi>ξ</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow><mo><mover><mo><mo>=</mo></mo><mtext> def </mtext></mover></mo><mrow><mo fence=\"true\">(</mo><msubsup><mi>Y</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">+</mo></msubsup><mo>−</mo><msubsup><mi>Y</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">−</mo></msubsup><mo fence=\"true\">)</mo></mrow><mi mathvariant=\"normal\">/</mi><mrow><mo fence=\"true\">(</mo><mn>2</mn><msub><mi>δ</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">D \\hat{J}\\left(h_n, \\xi_n\\right) \\stackrel{\\text { def }}{=}\\left(Y_n^{+}-Y_n^{-}\\right) /\\left(2 \\delta_n\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.403em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9468em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span></span><span style=\"top:-3.2523em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.0833em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.046em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.153em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">=</span></span></span><span style=\"top:-3.5669em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\"> def </span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0213em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-2.453em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-2.453em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">/</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span>Then the recursive algorithm is<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>h</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>h</mi><mi>n</mi></msub><mo>+</mo><msub><mi>ε</mi><mi>n</mi></msub><mi>D</mi><mover accent=\"true\"><mi>J</mi><mo>^</mo></mover><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><msub><mi>ξ</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">h_{n+1}=h_n+\\varepsilon_n D \\hat{J}\\left(h_n, \\xi_n\\right),</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9028em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1968em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9468em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span></span><span style=\"top:-3.2523em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.0833em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.046em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span></span></span></span>where $\\varepsilon_n$ is a sequence of real numbers known as stepsizes. A frequently used choice of step size and finite difference sequences is $\\varepsilon_n=O(1 / n)$ and $\\delta_n=O\\left(1 / n^{1 / 6}\\right)$. Throughout this paper, this is our default choice of stepsize and finite difference sequences.To proceed, define<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>ρ</mi><mi>n</mi></msub><mo>=</mo><mrow><mo fence=\"true\">(</mo><msubsup><mi>Y</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">+</mo></msubsup><mo>−</mo><msubsup><mi>Y</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">−</mo></msubsup><mo fence=\"true\">)</mo></mrow><mo>−</mo><msub><mi>E</mi><mi>n</mi></msub><mrow><mo fence=\"true\">(</mo><msubsup><mi>Y</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">+</mo></msubsup><mo>−</mo><msubsup><mi>Y</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">−</mo></msubsup><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>η</mi><mi>n</mi></msub><mo>=</mo><mrow><mo fence=\"true\">[</mo><msub><mi>E</mi><mi>n</mi></msub><msubsup><mi>Y</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">+</mo></msubsup><mo>−</mo><mi>J</mi><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mi>n</mi></msub><mo>+</mo><msub><mi>δ</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow><mo>−</mo><mrow><mo fence=\"true\">[</mo><msub><mi>E</mi><mi>n</mi></msub><msubsup><mi>Y</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">−</mo></msubsup><mo>−</mo><mi>J</mi><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mi>n</mi></msub><mo>−</mo><msub><mi>δ</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>β</mi><mi>n</mi></msub><mo>=</mo><mfrac><mrow><mi>J</mi><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mi>n</mi></msub><mo>+</mo><msub><mi>δ</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow><mo>−</mo><mi>J</mi><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mi>n</mi></msub><mo>−</mo><msub><mi>δ</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow></mrow><mrow><mn>2</mn><msub><mi>δ</mi><mi>n</mi></msub></mrow></mfrac><mo>−</mo><msub><mi>J</mi><mi>h</mi></msub><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}&amp; \\rho_n=\\left(Y_n^{+}-Y_n^{-}\\right)-E_n\\left(Y_n^{+}-Y_n^{-}\\right), \\\\&amp; \\eta_n=\\left[E_n Y_n^{+}-J\\left(h_n+\\delta_n\\right)\\right]-\\left[E_n Y_n^{-}-J\\left(h_n-\\delta_n\\right)\\right], \\\\&amp; \\beta_n=\\frac{J\\left(h_n+\\delta_n\\right)-J\\left(h_n-\\delta_n\\right)}{2 \\delta_n}-J_h\\left(h_n\\right),\\end{aligned}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.583em;vertical-align:-2.5415em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.0415em;\"><span style=\"top:-5.6185em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-4.1085em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.0215em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5415em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.0415em;\"><span style=\"top:-5.6185em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ρ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8213em;\"><span style=\"top:-2.453em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8213em;\"><span style=\"top:-2.453em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8213em;\"><span style=\"top:-2.453em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8213em;\"><span style=\"top:-2.453em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-4.1085em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8213em;\"><span style=\"top:-2.453em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8213em;\"><span style=\"top:-2.453em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.0215em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.836em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5415em;\"><span></span></span></span></span></span></span></span></span></span></span>where $E_n$ denotes the conditional expectation with respect to $\\mathcal{F}_n$, the $\\sigma$-algebra generated by $\\left{h_j, \\xi_j^{ \\pm}: j&lt;n\\right}, J_h\\left(h_n\\right)=(\\partial / \\partial h) J\\left(h_n\\right)$. In the above, $\\eta_n$ and $\\beta_n$ represent the noise and bias, and $\\left{\\rho_n\\right}$ is a martingale difference sequence. We separate the noise into two parts, uncorrelated noise $\\rho_n$ and correlated noise $\\eta_n$. It is reasonable to assume that after taking the conditional expectations, the resulting function is smooth. With the above definitions, algorithm (9) can be rewritten as<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>h</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>h</mi><mi>n</mi></msub><mo>+</mo><msub><mi>ε</mi><mi>n</mi></msub><msub><mi>J</mi><mi>h</mi></msub><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow><mo>+</mo><msub><mi>ε</mi><mi>n</mi></msub><mfrac><msub><mi>ρ</mi><mi>n</mi></msub><mrow><mn>2</mn><msub><mi>δ</mi><mi>n</mi></msub></mrow></mfrac><mo>+</mo><msub><mi>ε</mi><mi>n</mi></msub><msub><mi>β</mi><mi>n</mi></msub><mo>+</mo><msub><mi>ε</mi><mi>n</mi></msub><mfrac><mrow><msub><mi>η</mi><mi>n</mi></msub><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><msub><mi>ξ</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow></mrow><mrow><mn>2</mn><msub><mi>δ</mi><mi>n</mi></msub></mrow></mfrac><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">h_{n+1}=h_n+\\varepsilon_n J_h\\left(h_n\\right)+\\varepsilon_n \\frac{\\rho_n}{2 \\delta_n}+\\varepsilon_n \\beta_n+\\varepsilon_n \\frac{\\eta_n\\left(h_n, \\xi_n\\right)}{2 \\delta_n} .</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9028em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1926em;vertical-align:-0.4451em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7475em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0379em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ρ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4551em;vertical-align:-0.4451em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0379em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">η</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"minner mtight\"><span class=\"mopen mtight delimcenter\" style=\"top:0em;\"><span class=\"mtight\">(</span></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.046em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight delimcenter\" style=\"top:0em;\"><span class=\"mtight\">)</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">.</span></span></span></span></p><h3 id=\"projection-algorithms\">Projection Algorithms</h3><p>The use of projections in the algorithms stems from two reasons. First, for the purpose of computations, it is more convenient if one uses projections to force the iterates to remain in a bounded region. In addition, the problems under consideration may well be constrained so that the iterates will be in a given set. Current problem under consideration is such an example (the iterates need to stay in the interval $[a, 1]$ ). For example, one might choose a lowest trailing stop percentage of $10 \\%$ to ensure the holding position will not be closed due to the normal fluctuations of daily stock price. Obviously, there is a upper bound for the optimal trailing stop percentage, $100 \\%$. To solve the problem (4) with constrains, we construct the following stochastic approximation algorithm with a projection<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>h</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi mathvariant=\"normal\">Π</mi><mrow><mo fence=\"true\">[</mo><msub><mi>h</mi><mi>n</mi></msub><mo>+</mo><msub><mi>ε</mi><mi>n</mi></msub><mi>D</mi><mover accent=\"true\"><mi>J</mi><mo>^</mo></mover><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><msub><mi>ξ</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">h_{n+1}=\\Pi\\left[h_n+\\varepsilon_n D \\hat{J}\\left(h_n, \\xi_n\\right)\\right]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9028em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"mord\">Π</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9468em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span></span><span style=\"top:-3.2523em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.0833em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.046em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span></span></span></span>where $\\varepsilon_n=1 / n, \\delta_n=\\delta /\\left(n^{1 / 6}\\right)$ and $\\Pi[x]$ is a projection given by<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Π</mi><mo stretchy=\"false\">[</mo><mi>h</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>a</mi><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext> if </mtext><mi>h</mi><mo>&lt;</mo><mi>a</mi><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>1</mn><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext> if </mtext><mi>h</mi><mo>&gt;</mo><mn>1</mn><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>h</mi><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext> otherwise. </mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">\\Pi[h]= \\begin{cases}a, &amp; \\text { if } h&lt;a, \\\\ 1, &amp; \\text { if } h&gt;1, \\\\ h, &amp; \\text { otherwise. }\\end{cases}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Π</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">h</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.32em;vertical-align:-1.91em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35em;\"><span style=\"top:-2.2em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.192em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.316em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style=\"top:-3.15em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.292em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.316em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style=\"top:-4.6em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.85em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.41em;\"><span style=\"top:-4.41em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.97em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mpunct\">,</span></span></span><span style=\"top:-1.53em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.91em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.41em;\"><span style=\"top:-4.41em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\"> if </span></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.97em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\"> if </span></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span></span></span><span style=\"top:-1.53em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\"> otherwise. </span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.91em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>As in Kushner and Yin [4], the projection algorithm (11) can be rewritten as<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>h</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>h</mi><mi>n</mi></msub><mo>+</mo><msub><mi>ε</mi><mi>n</mi></msub><mi>D</mi><mover accent=\"true\"><mi>J</mi><mo>^</mo></mover><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><msub><mi>ξ</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow><mo>+</mo><msub><mi>ε</mi><mi>n</mi></msub><msub><mi>r</mi><mi>n</mi></msub><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">h_{n+1}=h_n+\\varepsilon_n D \\hat{J}\\left(h_n, \\xi_n\\right)+\\varepsilon_n r_n,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9028em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1968em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9468em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span></span><span style=\"top:-3.2523em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.0833em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.046em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span>where $\\varepsilon_n r_n=h_{n+1}-h_n-\\varepsilon_n D \\hat{J}\\left(h_n, \\xi_n\\right)$ is the real number with the shortest distance needed to bring $h_n+\\varepsilon_n D \\hat{J}\\left(h_n, \\xi_n\\right)$ back $[a, 1]$ if it is outside this set.</p><h2 id=\"interval-estimates\">Interval Estimates</h2><p>This section is devoted to obtaining interval estimates as well as a piratically useful stopping rule for the recursive computation. Roughly, with prescribed confidence level, we wish to show that with large probability (probability close to 1 ), a sequence of scaled and centered estimates and a stopped sequence converge weakly to a diffusion process. Based on this result, we will then be able to build confidence interval for the iterates.</p><p>To proceed, for simplicity of notation, we take $\\varepsilon_n=1 / n$ and $\\delta_n=\\delta_0 / n^{1 / 6}$. In the analysis to follow, for simplicity and without loss of generality, we take $\\delta_0=1$. We assume all the conditions of Theorem 3.1 holds. To carry out the subsequent study, we also assume an additional condition.(A3) $J_h(h)=J_{h h}\\left(h_<em>\\right)\\left(h-h_</em>\\right)+o\\left(\\left|h-h_<em>\\right|^2\\right)$, where $J_{h h}\\left(h_</em>\\right)-(1 / 2)&lt;0$. In addition, $k^{2 / 3} E\\left(h_k-h_*\\right)^2=O(1)$ and the bound holds uniformly in $k$.</p><p>Remark 4.1 The first condition in (A3) indicates that $J_h(h)$ is linearizable. The second condition is a moment estimate. Sufficient conditions guaranteeing this can be provided by means of perturbed Lyapunov function methods; see for example [7] for liquidation related issues and the more extensive discussion in [4] for general setting. For simplicity, here we assume this condition.Define<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>ρ</mi><mi>n</mi><mo>∗</mo></msubsup><mo>=</mo><mrow><mo fence=\"true\">[</mo><mi>Y</mi><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mo>∗</mo></msub><mo separator=\"true\">,</mo><msubsup><mi>ξ</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">+</mo></msubsup><mo fence=\"true\">)</mo></mrow><mo>−</mo><mi>Y</mi><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mo>∗</mo></msub><mo separator=\"true\">,</mo><msubsup><mi>ξ</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">−</mo></msubsup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow><mo>−</mo><msub><mi>E</mi><mi>n</mi></msub><mrow><mo fence=\"true\">[</mo><mi>Y</mi><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mo>∗</mo></msub><mo separator=\"true\">,</mo><msubsup><mi>ξ</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">+</mo></msubsup><mo fence=\"true\">)</mo></mrow><mo>−</mo><mi>Y</mi><mrow><mo fence=\"true\">(</mo><msub><mi>h</mi><mo>∗</mo></msub><mo separator=\"true\">,</mo><msubsup><mi>ξ</mi><mi>n</mi><mo lspace=\"0em\" rspace=\"0em\">−</mo></msubsup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">\\rho_n^*=\\left[Y\\left(h_*, \\xi_n^{+}\\right)-Y\\left(h_*, \\xi_n^{-}\\right)\\right]-E_n\\left[Y\\left(h_*, \\xi_n^{+}\\right)-Y\\left(h_*, \\xi_n^{-}\\right)\\right] .</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9357em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ρ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0213em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1757em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-2.453em;margin-left:-0.046em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1757em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-2.453em;margin-left:-0.046em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0213em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1757em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-2.453em;margin-left:-0.046em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1757em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-2.453em;margin-left:-0.046em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">.</span></span></span></span>That is, $\\rho_n^<em>$ is $\\rho_n$ with the argument $h_n$ replaced by $h_</em>$. The detailed development of the interval estimates can be outlined as follows. Suppose that we can show that $n^{1 / 3}\\left(h_n-h_<em>\\right)$ is asymptotically normal with mean zero and asymptotic variance $\\sigma^2$. Choose $\\alpha$, such that $0&lt;\\alpha&lt;1$ and $1-\\alpha$ is the desired confidence coefficient. Given $\\varepsilon&gt;0$, then the asymptotic normality implies that<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mrow><mo fence=\"true\">(</mo><mfrac><mrow><msup><mi>n</mi><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>3</mn></mrow></msup><mrow><mo fence=\"true\">∣</mo><msub><mi>h</mi><mi>n</mi></msub><mo>−</mo><msub><mi>h</mi><mo>∗</mo></msub><mo fence=\"true\">∣</mo></mrow></mrow><mi>σ</mi></mfrac><mo>≤</mo><msub><mi>z</mi><mrow><mi>α</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow></msub><mo fence=\"true\">)</mo></mrow><mo>→</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo separator=\"true\">,</mo><mtext> as </mtext><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">P\\left(\\frac{n^{1 / 3}\\left|h_n-h_*\\right|}{\\sigma} \\leq z_{\\alpha / 2}\\right) \\rightarrow 1-\\alpha, \\text { as } n \\rightarrow \\infty .</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.8117em;vertical-align:-0.65em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1617em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9667em;\"><span style=\"top:-2.9667em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5357em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1/3</span></span></span></span></span></span></span></span></span><span class=\"minner mtight\"><span class=\"mopen mtight delimcenter\" style=\"top:0em;\"><span class=\"mtight\">∣</span></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1893em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight delimcenter\" style=\"top:0em;\"><span class=\"mtight\">∣</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord mtight\">/2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord text\"><span class=\"mord\"> as </span></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞.</span></span></span></span>This will lead to the desired confidence interval estimator. Then we require the length of the interval $\\left|h_n-h_</em>\\right|$ be small enough in that for any $\\varepsilon&gt;0$, for sufficiently large</p><p>$n$, we can make $\\sigma z_{\\alpha / 2} / n^{1 / 3}&lt;\\varepsilon$ or equivalently $n&gt;\\left\\lfloor\\sigma z_{\\alpha / 2} / \\varepsilon\\right\\rfloor$. Define<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>M</mi><mrow><mi>ε</mi><mo separator=\"true\">,</mo><mi>α</mi></mrow><mi>n</mi></msubsup><mo>=</mo><mrow><mo fence=\"true\">⌊</mo><mfrac><mrow><mi>σ</mi><msub><mi>z</mi><mrow><mi>α</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow></msub></mrow><mi>ε</mi></mfrac><mo fence=\"true\">⌋</mo></mrow><mo separator=\"true\">,</mo><mspace width=\"1em\"/><msub><mi>μ</mi><mrow><mi>ε</mi><mo separator=\"true\">,</mo><mi>α</mi></mrow></msub><mo>=</mo><mi>inf</mi><mo>⁡</mo><mrow><mo fence=\"true\">{</mo><mi>n</mi><mo>:</mo><msubsup><mi>M</mi><mrow><mi>ε</mi><mo separator=\"true\">,</mo><mi>α</mi></mrow><mi>n</mi></msubsup><mo>≤</mo><mi>n</mi><mo fence=\"true\">}</mo></mrow><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">M_{\\varepsilon, \\alpha}^n=\\left\\lfloor\\frac{\\sigma z_{\\alpha / 2}}{\\varepsilon}\\right\\rfloor, \\quad \\mu_{\\varepsilon, \\alpha}=\\inf \\left\\{n: M_{\\varepsilon, \\alpha}^n \\leq n\\right\\},</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0664em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-2.453em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ε</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.22em;vertical-align:-0.35em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">⌊</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.87em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ε</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.5686em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5357em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord mtight\">/2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3695em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">⌋</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ε</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2331em;vertical-align:-0.3831em;\"></span><span class=\"mop\">in<span style=\"margin-right:0.07778em;\">f</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">{</span></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-2.453em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ε</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">}</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span></span></span></span>where $\\lfloor z\\rfloor$ denotes the greatest integer that is less than or equal to $z$. Then $\\mu_{\\varepsilon, \\alpha}$ is a stopping rule for the iterating sequence $\\left{h_n\\right}$. Denote<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>I</mi><msub><mi>μ</mi><mrow><mi>ε</mi><mo separator=\"true\">,</mo><mi>α</mi></mrow></msub></msub><mo>=</mo><mrow><mo fence=\"true\">[</mo><msub><mi>h</mi><msub><mi>μ</mi><mrow><mi>ε</mi><mo separator=\"true\">,</mo><mi>α</mi></mrow></msub></msub><mo>−</mo><mi>σ</mi><mfrac><msub><mi>z</mi><mrow><mi>α</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow></msub><msup><mi>n</mi><mrow><mn>2</mn><mi mathvariant=\"normal\">/</mi><mn>3</mn></mrow></msup></mfrac><mo separator=\"true\">,</mo><msub><mi>h</mi><msub><mi>μ</mi><mrow><mi>ε</mi><mo separator=\"true\">,</mo><mi>α</mi></mrow></msub></msub><mo>+</mo><mi>σ</mi><mfrac><msub><mi>z</mi><mrow><mi>α</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow></msub><msup><mi>n</mi><mrow><mn>2</mn><mi mathvariant=\"normal\">/</mi><mn>3</mn></mrow></msup></mfrac><mo fence=\"true\">]</mo></mrow><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">I_{\\mu_{\\varepsilon, \\alpha}}=\\left[h_{\\mu_{\\varepsilon, \\alpha}}-\\sigma \\frac{z_{\\alpha / 2}}{n^{2 / 3}}, h_{\\mu_{\\varepsilon, \\alpha}}+\\sigma \\frac{z_{\\alpha / 2}}{n^{2 / 3}}\\right] .</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0307em;vertical-align:-0.3473em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ε</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2819em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3473em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2555em;vertical-align:-0.3854em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ε</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2819em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3473em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.87em;\"><span style=\"top:-2.6146em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.822em;\"><span style=\"top:-2.822em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5357em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2/3</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.5686em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5357em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord mtight\">/2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3695em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3854em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ε</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2819em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3473em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.87em;\"><span style=\"top:-2.6146em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.822em;\"><span style=\"top:-2.822em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5357em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2/3</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.5686em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5357em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord mtight\">/2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3695em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3854em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">.</span></span></span></span>We shall show that as the length of the interval shrinks, i.e., $\\varepsilon \\rightarrow 0$,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mrow><mo fence=\"true\">{</mo><mi>h</mi><mo>∈</mo><msub><mi>I</mi><msub><mi>μ</mi><mrow><mi>ε</mi><mo separator=\"true\">,</mo><mi>α</mi></mrow></msub></msub><mtext> and </mtext><mrow><mo fence=\"true\">∣</mo><msub><mi>I</mi><msub><mi>μ</mi><mrow><mi>ε</mi><mo separator=\"true\">,</mo><mi>α</mi></mrow></msub></msub><mo fence=\"true\">∣</mo></mrow><mo>≤</mo><mi>ε</mi><mo fence=\"true\">}</mo></mrow><mo>→</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">P\\left\\{h \\in I_{\\mu_{\\varepsilon, \\alpha}} \\text { and }\\left|I_{\\mu_{\\varepsilon, \\alpha}}\\right| \\leq \\varepsilon\\right\\} \\rightarrow 1-\\alpha,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.212em;vertical-align:-0.35em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">{</span></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ε</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2819em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3473em;\"><span></span></span></span></span></span></span><span class=\"mord text\"><span class=\"mord\"> and </span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.862em;\"><span style=\"top:-2.256em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.854em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span style=\"height:0.016em;width:0.3333em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.3333em' height='0.016em' style='width:0.3333em' viewBox='0 0 333.33000000000004 16' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V16 H145z M145 0 H188 V16 H145z'/></svg></span></span><span style=\"top:-2.862em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ε</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2819em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3473em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.862em;\"><span style=\"top:-2.256em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.854em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span style=\"height:0.016em;width:0.3333em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.3333em' height='0.016em' style='width:0.3333em' viewBox='0 0 333.33000000000004 16' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V16 H145z M145 0 H188 V16 H145z'/></svg></span></span><span style=\"top:-2.862em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">ε</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">}</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mpunct\">,</span></span></span></span>where $\\left|I_{\\mu_{\\varepsilon, \\alpha}}\\right|$ denotes the length of the interval $I_{\\mu_{\\varepsilon, \\alpha}}$.</p>",
            "url": "http://localhost:4000/2023/04/19/recursive-algorithms-for-trailing-stop-stochastic-approximation-approach",
            
            
            
            "tags": ["stochastic_optimization","trading","execution"],
            
            "date_published": "2023-04-19T00:00:00+01:00",
            "date_modified": "2023-04-19T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/18/stochastic-optimization",
            "title": "Stochastic Optimization and Its Potential Use Cases in Trading",
            "summary": "This article discusses the fundamentals of stochastic optimization and explores its potential applications in trading.",
            "content_text": "IntroductionStochastic optimization is a branch of optimization that makes use of random variables and probability distributions to solve optimization problems. This approach is particularly useful when the underlying problem involves uncertainty or randomness. In recent years, stochastic optimization has found numerous applications in finance, particularly in the domain of algorithmic trading.Algorithmic trading refers to the use of sophisticated algorithms to automate trading decisions. In the context of stochastic optimization, these algorithms leverage probabilistic models to optimize various aspects of trading strategies such as portfolio allocation, risk management, and order execution. In this article, we provide a brief overview of stochastic optimization and explore its potential use cases in trading.Stochastic Optimization FundamentalsBefore delving into the applications of stochastic optimization in trading, let us first establish some fundamental concepts in the field.Stochastic ProgrammingStochastic programming is a subfield of optimization that deals with problems where some or all of the parameters are uncertain. In these problems, the objective function and constraints are specified in terms of probability distributions rather than fixed values. The goal of stochastic programming is to find a decision that minimizes the expected value of the objective function subject to the constraints.Mathematically, a stochastic programming problem can be formulated as follows:min⁡x Eξ[f(x,ξ)]s.t.x∈X(ξ)andgi(x)≤0 ∀i∈{1,…,m}\\min_{\\boldsymbol{x}}\\ \\mathbb{E}_{\\boldsymbol{\\xi}}[f(\\boldsymbol{x},\\boldsymbol{\\xi})]\\quad\\text{s.t.}\\quad \\boldsymbol{x}\\in\\mathcal{X}(\\boldsymbol{\\xi}) \\quad\\text{and}\\quad g_i(\\boldsymbol{x})\\leq 0\\ \\forall i\\in\\{1,\\ldots,m\\}xmin​ Eξ​[f(x,ξ)]s.t.x∈X(ξ)andgi​(x)≤0 ∀i∈{1,…,m}where $\\boldsymbol{x}\\in\\mathbb{R}^{n}$ is the decision variable, $\\boldsymbol{\\xi}\\in\\mathbb{R}^{p}$ is a random vector representing the uncertain parameters, $f(\\boldsymbol{x},\\boldsymbol{\\xi})$ is the objective function, $\\mathcal{X}(\\boldsymbol{\\xi})$ is the feasible set that depends on the uncertain parameters, and $g_i(\\boldsymbol{x})$ are the inequality constraints.Stochastic Gradient DescentStochastic gradient descent (SGD) is an optimization algorithm that is widely used in machine learning for training models. The algorithm updates the parameters of the model iteratively by computing the gradient of the loss function with respect to a small subset of the training data referred to as a mini-batch. Unlike the batch gradient descent algorithm, which computes the gradient using the entire training set, SGD is a quicker and more scalable algorithm that can be applied to large datasets.In the context of stochastic optimization, SGD can be used to solve problems where the objective function is not known in closed-form or is too expensive to compute. The algorithm converges to the optimal solution in expectation, under certain conditions on the objective function.Stochastic Optimization in TradingNow that we are familiar with the fundamentals of stochastic optimization, let us turn our attention to its potential use cases in trading.Portfolio OptimizationPortfolio optimization refers to the problem of allocating assets in a portfolio to achieve a desired objective, such as maximizing returns or minimizing risk. Traditional portfolio optimization techniques assume that the underlying parameters, such as asset returns and correlations, are known with certainty. However, this assumption is unrealistic as financial markets are inherently uncertain and unpredictable.Stochastic optimization can be used to incorporate uncertainty into the portfolio optimization problem. In this context, the uncertain parameters could include the expected returns and volatilities of the assets, as well as the correlations between them. A common approach to solving the stochastic portfolio optimization problem is to use chance-constrained programming, where the constraints are specified in terms of the probability that the portfolio returns do not fall below a certain threshold.Mathematically, the stochastic portfolio optimization problem can be formulated as follows:max⁡w Eξ[rp(w,ξ)]s.t.Pξ[rp(w,ξ)≥R]≥1−α,w∈Δn\\max_{\\boldsymbol{w}}\\ \\mathbb{E}_{\\boldsymbol{\\xi}}[r_p(\\boldsymbol{w},\\boldsymbol{\\xi})]\\quad\\text{s.t.}\\quad \\mathbb{P}_{\\boldsymbol{\\xi}}[r_p(\\boldsymbol{w},\\boldsymbol{\\xi})\\geq R]\\geq 1-\\alpha, \\quad \\boldsymbol{w}\\in\\Delta^{n}wmax​ Eξ​[rp​(w,ξ)]s.t.Pξ​[rp​(w,ξ)≥R]≥1−α,w∈Δnwhere $\\boldsymbol{w}\\in\\mathbb{R}^{n}$ represents the portfolio weights, $r_p(\\boldsymbol{w},\\boldsymbol{\\xi})$ is the portfolio return, $\\Delta^{n}$ is the simplex of $n$-dimensional vectors, $R$ is the target return, and $\\alpha$ is the confidence level.Python Implementation:import numpy as npfrom scipy.optimize import minimizedef stochastic_portfolio_optimization(expected_returns, covariances, R, alpha):    n = len(expected_returns)    x0 = np.ones(n) / n    def objective(x):        return -np.dot(expected_returns, x)    def constraint(x):        return R - np.dot(expected_returns, x)    def chance_constraint(x):        return 1 - (np.dot(x, np.dot(covariances, x)) ** 0.5) / alpha    constraints = [{'type': 'eq', 'fun': constraint},                    {'type': 'ineq', 'fun': chance_constraint}]        bounds = [(0, 1) for i in range(n)]    result = minimize(objective, x0, bounds=bounds, constraints=constraints)        return result.xRisk ManagementRisk management is a critical aspect of trading, particularly in volatile markets. While portfolio optimization can be used to minimize risk, it is often not sufficient to manage extreme events such as market crashes or black swan events.Stochastic optimization techniques such as robust optimization and distributionally robust optimization can be used to explicitly account for worst-case scenarios and ensure the portfolio is resilient to such events. These techniques involve optimizing the performance of the portfolio under a distribution that is designed to capture extreme events.Mathematically, the risk management problem can be formulated as follows:max⁡w Eξ[rp(w,ξ)]s.t.sup⁡ξ∈ΞEξ[rp(w,ξ)]≥R,w∈Δn\\max_{\\boldsymbol{w}}\\ \\mathbb{E}_{\\boldsymbol{\\xi}}[r_p(\\boldsymbol{w},\\boldsymbol{\\xi})]\\quad\\text{s.t.}\\quad \\sup_{\\boldsymbol{\\xi}\\in\\Xi}\\mathbb{E}_{\\boldsymbol{\\xi}}[r_p(\\boldsymbol{w},\\boldsymbol{\\xi})]\\geq R, \\quad \\boldsymbol{w}\\in\\Delta^{n}wmax​ Eξ​[rp​(w,ξ)]s.t.ξ∈Ξsup​Eξ​[rp​(w,ξ)]≥R,w∈Δnwhere $\\Xi$ is a set of distributions that are designed to capture extreme scenarios.Python Implementation:import numpy as npfrom scipy.optimize import minimizedef robust_portfolio_optimization(expected_returns, covariances, R):    n = len(expected_returns)    x0 = np.ones(n) / n    def objective(x):        return -np.dot(expected_returns, x)    def constraint(x):        return R - np.dot(expected_returns, x)    def worst_case_constraint(x):        return np.dot(expected_returns, x) - np.dot(covariances, x) ** 0.5    constraints = [{'type': 'eq', 'fun': constraint},                   {'type': 'ineq', 'fun': worst_case_constraint}]    bounds = [(0, 1) for i in range(n)]    result = minimize(objective, x0, bounds=bounds, constraints=constraints)    return result.xOrder ExecutionOrder execution refers to the process of executing trades in the market. In the context of stochastic optimization, the order execution problem involves optimizing the timing and size of trades to minimize slippage costs and maximize execution efficiency.One approach to solving the order execution problem is to use reinforcement learning, which involves using trial and error to learn an optimal policy for executing trades. Reinforcement learning algorithms such as Q-learning and deep reinforcement learning have been shown to be effective in solving the order execution problem, particularly in the presence of uncertainty and dynamic market conditions.Python Implementation:import numpy as npclass OrderExecution:    def __init__(self, q_learning_rate, epsilon):        self.q_learning_rate = q_learning_rate        self.epsilon = epsilon        self.Q = np.zeros((num_states, num_actions))        self.alpha = np.ones((num_states, num_actions))    def get_action(self, state):        if np.random.uniform() &lt; self.epsilon:            action = np.random.choice(num_actions)        else:            action = np.argmax(self.Q[state])        return action    def update(self, state, action, reward, next_state):        if action is not None:            self.alpha[state][action] += 1            error = reward + np.max(self.Q[next_state]) - self.Q[state][action]            self.Q[state][action] += self.q_learning_rate * error / self.alpha[state][action]ConclusionStochastic optimization is a powerful tool that can be used to address the challenges of uncertainty and randomness in trading. By incorporating probabilistic models into trading strategies, traders can optimize their portfolios, manage risk, and improve the efficiency of order execution. As financial markets continue to evolve and become more complex, the use of stochastic optimization is likely to play an increasingly important role in the trading industry.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>Stochastic optimization is a branch of optimization that makes use of random variables and probability distributions to solve optimization problems. This approach is particularly useful when the underlying problem involves uncertainty or randomness. In recent years, stochastic optimization has found numerous applications in finance, particularly in the domain of algorithmic trading.</p><p>Algorithmic trading refers to the use of sophisticated algorithms to automate trading decisions. In the context of stochastic optimization, these algorithms leverage probabilistic models to optimize various aspects of trading strategies such as portfolio allocation, risk management, and order execution. In this article, we provide a brief overview of stochastic optimization and explore its potential use cases in trading.</p><h1 id=\"stochastic-optimization-fundamentals\">Stochastic Optimization Fundamentals</h1><p>Before delving into the applications of stochastic optimization in trading, let us first establish some fundamental concepts in the field.</p><h2 id=\"stochastic-programming\">Stochastic Programming</h2><p>Stochastic programming is a subfield of optimization that deals with problems where some or all of the parameters are uncertain. In these problems, the objective function and constraints are specified in terms of probability distributions rather than fixed values. The goal of stochastic programming is to find a decision that minimizes the expected value of the objective function subject to the constraints.</p><p>Mathematically, a stochastic programming problem can be formulated as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mi mathvariant=\"bold-italic\">x</mi></munder><mtext> </mtext><msub><mi mathvariant=\"double-struck\">E</mi><mi mathvariant=\"bold-italic\">ξ</mi></msub><mo stretchy=\"false\">[</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">x</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold-italic\">ξ</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mspace width=\"1em\"/><mtext>s.t.</mtext><mspace width=\"1em\"/><mi mathvariant=\"bold-italic\">x</mi><mo>∈</mo><mi mathvariant=\"script\">X</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">ξ</mi><mo stretchy=\"false\">)</mo><mspace width=\"1em\"/><mtext>and</mtext><mspace width=\"1em\"/><msub><mi>g</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">x</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><mn>0</mn><mtext> </mtext><mi mathvariant=\"normal\">∀</mi><mi>i</mi><mo>∈</mo><mo stretchy=\"false\">{</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>m</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\min_{\\boldsymbol{x}}\\ \\mathbb{E}_{\\boldsymbol{\\xi}}[f(\\boldsymbol{x},\\boldsymbol{\\xi})]\\quad\\text{s.t.}\\quad \\boldsymbol{x}\\in\\mathcal{X}(\\boldsymbol{\\xi}) \\quad\\text{and}\\quad g_i(\\boldsymbol{x})\\leq 0\\ \\forall i\\in\\{1,\\ldots,m\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.45em;vertical-align:-0.7em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6679em;\"><span style=\"top:-2.4em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord boldsymbol mtight\">x</span></span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">min</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7em;\"><span></span></span></span></span></span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord boldsymbol mtight\" style=\"margin-right:0.03021em;\">ξ</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">x</span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03021em;\">ξ</span></span></span><span class=\"mclose\">)]</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord text\"><span class=\"mord\">s.t.</span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">x</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.14643em;\">X</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03021em;\">ξ</span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord text\"><span class=\"mord\">and</span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">x</span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\"> </span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">}</span></span></span></span></span><p>where $\\boldsymbol{x}\\in\\mathbb{R}^{n}$ is the decision variable, $\\boldsymbol{\\xi}\\in\\mathbb{R}^{p}$ is a random vector representing the uncertain parameters, $f(\\boldsymbol{x},\\boldsymbol{\\xi})$ is the objective function, $\\mathcal{X}(\\boldsymbol{\\xi})$ is the feasible set that depends on the uncertain parameters, and $g_i(\\boldsymbol{x})$ are the inequality constraints.</p><h2 id=\"stochastic-gradient-descent\">Stochastic Gradient Descent</h2><p>Stochastic gradient descent (SGD) is an optimization algorithm that is widely used in machine learning for training models. The algorithm updates the parameters of the model iteratively by computing the gradient of the loss function with respect to a small subset of the training data referred to as a mini-batch. Unlike the batch gradient descent algorithm, which computes the gradient using the entire training set, SGD is a quicker and more scalable algorithm that can be applied to large datasets.</p><p>In the context of stochastic optimization, SGD can be used to solve problems where the objective function is not known in closed-form or is too expensive to compute. The algorithm converges to the optimal solution in expectation, under certain conditions on the objective function.</p><h1 id=\"stochastic-optimization-in-trading\">Stochastic Optimization in Trading</h1><p>Now that we are familiar with the fundamentals of stochastic optimization, let us turn our attention to its potential use cases in trading.</p><h2 id=\"portfolio-optimization\">Portfolio Optimization</h2><p>Portfolio optimization refers to the problem of allocating assets in a portfolio to achieve a desired objective, such as maximizing returns or minimizing risk. Traditional portfolio optimization techniques assume that the underlying parameters, such as asset returns and correlations, are known with certainty. However, this assumption is unrealistic as financial markets are inherently uncertain and unpredictable.</p><p>Stochastic optimization can be used to incorporate uncertainty into the portfolio optimization problem. In this context, the uncertain parameters could include the expected returns and volatilities of the assets, as well as the correlations between them. A common approach to solving the stochastic portfolio optimization problem is to use chance-constrained programming, where the constraints are specified in terms of the probability that the portfolio returns do not fall below a certain threshold.</p><p>Mathematically, the stochastic portfolio optimization problem can be formulated as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi mathvariant=\"bold-italic\">w</mi></munder><mtext> </mtext><msub><mi mathvariant=\"double-struck\">E</mi><mi mathvariant=\"bold-italic\">ξ</mi></msub><mo stretchy=\"false\">[</mo><msub><mi>r</mi><mi>p</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">w</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold-italic\">ξ</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mspace width=\"1em\"/><mtext>s.t.</mtext><mspace width=\"1em\"/><msub><mi mathvariant=\"double-struck\">P</mi><mi mathvariant=\"bold-italic\">ξ</mi></msub><mo stretchy=\"false\">[</mo><msub><mi>r</mi><mi>p</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">w</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold-italic\">ξ</mi><mo stretchy=\"false\">)</mo><mo>≥</mo><mi>R</mi><mo stretchy=\"false\">]</mo><mo>≥</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi mathvariant=\"bold-italic\">w</mi><mo>∈</mo><msup><mi mathvariant=\"normal\">Δ</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\max_{\\boldsymbol{w}}\\ \\mathbb{E}_{\\boldsymbol{\\xi}}[r_p(\\boldsymbol{w},\\boldsymbol{\\xi})]\\quad\\text{s.t.}\\quad \\mathbb{P}_{\\boldsymbol{\\xi}}[r_p(\\boldsymbol{w},\\boldsymbol{\\xi})\\geq R]\\geq 1-\\alpha, \\quad \\boldsymbol{w}\\in\\Delta^{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.45em;vertical-align:-0.7em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4306em;\"><span style=\"top:-2.4em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord boldsymbol mtight\" style=\"margin-right:0.02778em;\">w</span></span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">max</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7em;\"><span></span></span></span></span></span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord boldsymbol mtight\" style=\"margin-right:0.03021em;\">ξ</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.02778em;\">w</span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03021em;\">ξ</span></span></span><span class=\"mclose\">)]</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord text\"><span class=\"mord\">s.t.</span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord boldsymbol mtight\" style=\"margin-right:0.03021em;\">ξ</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.02778em;\">w</span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03021em;\">ξ</span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.02778em;\">w</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7144em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span><p>where $\\boldsymbol{w}\\in\\mathbb{R}^{n}$ represents the portfolio weights, $r_p(\\boldsymbol{w},\\boldsymbol{\\xi})$ is the portfolio return, $\\Delta^{n}$ is the simplex of $n$-dimensional vectors, $R$ is the target return, and $\\alpha$ is the confidence level.</p><p>Python Implementation:</p><pre><code class=\"language-python\">import numpy as npfrom scipy.optimize import minimizedef stochastic_portfolio_optimization(expected_returns, covariances, R, alpha):    n = len(expected_returns)    x0 = np.ones(n) / n    def objective(x):        return -np.dot(expected_returns, x)    def constraint(x):        return R - np.dot(expected_returns, x)    def chance_constraint(x):        return 1 - (np.dot(x, np.dot(covariances, x)) ** 0.5) / alpha    constraints = [{'type': 'eq', 'fun': constraint},                    {'type': 'ineq', 'fun': chance_constraint}]        bounds = [(0, 1) for i in range(n)]    result = minimize(objective, x0, bounds=bounds, constraints=constraints)        return result.x</code></pre><h2 id=\"risk-management\">Risk Management</h2><p>Risk management is a critical aspect of trading, particularly in volatile markets. While portfolio optimization can be used to minimize risk, it is often not sufficient to manage extreme events such as market crashes or black swan events.</p><p>Stochastic optimization techniques such as robust optimization and distributionally robust optimization can be used to explicitly account for worst-case scenarios and ensure the portfolio is resilient to such events. These techniques involve optimizing the performance of the portfolio under a distribution that is designed to capture extreme events.</p><p>Mathematically, the risk management problem can be formulated as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi mathvariant=\"bold-italic\">w</mi></munder><mtext> </mtext><msub><mi mathvariant=\"double-struck\">E</mi><mi mathvariant=\"bold-italic\">ξ</mi></msub><mo stretchy=\"false\">[</mo><msub><mi>r</mi><mi>p</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">w</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold-italic\">ξ</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mspace width=\"1em\"/><mtext>s.t.</mtext><mspace width=\"1em\"/><munder><mrow><mi>sup</mi><mo>⁡</mo></mrow><mrow><mi mathvariant=\"bold-italic\">ξ</mi><mo>∈</mo><mi mathvariant=\"normal\">Ξ</mi></mrow></munder><msub><mi mathvariant=\"double-struck\">E</mi><mi mathvariant=\"bold-italic\">ξ</mi></msub><mo stretchy=\"false\">[</mo><msub><mi>r</mi><mi>p</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">w</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold-italic\">ξ</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>≥</mo><mi>R</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi mathvariant=\"bold-italic\">w</mi><mo>∈</mo><msup><mi mathvariant=\"normal\">Δ</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\max_{\\boldsymbol{w}}\\ \\mathbb{E}_{\\boldsymbol{\\xi}}[r_p(\\boldsymbol{w},\\boldsymbol{\\xi})]\\quad\\text{s.t.}\\quad \\sup_{\\boldsymbol{\\xi}\\in\\Xi}\\mathbb{E}_{\\boldsymbol{\\xi}}[r_p(\\boldsymbol{w},\\boldsymbol{\\xi})]\\geq R, \\quad \\boldsymbol{w}\\in\\Delta^{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.8327em;vertical-align:-1.0827em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4306em;\"><span style=\"top:-2.4em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord boldsymbol mtight\" style=\"margin-right:0.02778em;\">w</span></span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">max</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7em;\"><span></span></span></span></span></span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord boldsymbol mtight\" style=\"margin-right:0.03021em;\">ξ</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.02778em;\">w</span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03021em;\">ξ</span></span></span><span class=\"mclose\">)]</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord text\"><span class=\"mord\">s.t.</span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4306em;\"><span style=\"top:-2.1535em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord boldsymbol mtight\" style=\"margin-right:0.03021em;\">ξ</span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\">Ξ</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">sup</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0827em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord boldsymbol mtight\" style=\"margin-right:0.03021em;\">ξ</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.02778em;\">w</span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03021em;\">ξ</span></span></span><span class=\"mclose\">)]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.02778em;\">w</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7144em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span><p>where $\\Xi$ is a set of distributions that are designed to capture extreme scenarios.</p><p>Python Implementation:</p><pre><code class=\"language-python\">import numpy as npfrom scipy.optimize import minimizedef robust_portfolio_optimization(expected_returns, covariances, R):    n = len(expected_returns)    x0 = np.ones(n) / n    def objective(x):        return -np.dot(expected_returns, x)    def constraint(x):        return R - np.dot(expected_returns, x)    def worst_case_constraint(x):        return np.dot(expected_returns, x) - np.dot(covariances, x) ** 0.5    constraints = [{'type': 'eq', 'fun': constraint},                   {'type': 'ineq', 'fun': worst_case_constraint}]    bounds = [(0, 1) for i in range(n)]    result = minimize(objective, x0, bounds=bounds, constraints=constraints)    return result.x</code></pre><h2 id=\"order-execution\">Order Execution</h2><p>Order execution refers to the process of executing trades in the market. In the context of stochastic optimization, the order execution problem involves optimizing the timing and size of trades to minimize slippage costs and maximize execution efficiency.</p><p>One approach to solving the order execution problem is to use reinforcement learning, which involves using trial and error to learn an optimal policy for executing trades. Reinforcement learning algorithms such as Q-learning and deep reinforcement learning have been shown to be effective in solving the order execution problem, particularly in the presence of uncertainty and dynamic market conditions.</p><p>Python Implementation:</p><pre><code class=\"language-python\">import numpy as npclass OrderExecution:    def __init__(self, q_learning_rate, epsilon):        self.q_learning_rate = q_learning_rate        self.epsilon = epsilon        self.Q = np.zeros((num_states, num_actions))        self.alpha = np.ones((num_states, num_actions))    def get_action(self, state):        if np.random.uniform() &lt; self.epsilon:            action = np.random.choice(num_actions)        else:            action = np.argmax(self.Q[state])        return action    def update(self, state, action, reward, next_state):        if action is not None:            self.alpha[state][action] += 1            error = reward + np.max(self.Q[next_state]) - self.Q[state][action]            self.Q[state][action] += self.q_learning_rate * error / self.alpha[state][action]</code></pre><h1 id=\"conclusion\">Conclusion</h1><p>Stochastic optimization is a powerful tool that can be used to address the challenges of uncertainty and randomness in trading. By incorporating probabilistic models into trading strategies, traders can optimize their portfolios, manage risk, and improve the efficiency of order execution. As financial markets continue to evolve and become more complex, the use of stochastic optimization is likely to play an increasingly important role in the trading industry.</p>",
            "url": "http://localhost:4000/2023/04/18/stochastic-optimization",
            
            
            
            "tags": ["stochastic_optimization","trading","execution"],
            
            "date_published": "2023-04-18T00:00:00+01:00",
            "date_modified": "2023-04-18T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/17/peak-trough",
            "title": "Understanding L Peak and L Trough in Time Series Data",
            "summary": "This article discusses the concepts of L Peak and L Trough in time series analysis, and provides a Python implementation for calculating them",
            "content_text": "L Peak and L Trough are two concepts that are commonly used in time series analysis. L Peak is the highest value of a time series, while L Trough is the lowest value of a time series. Both L Peak and L Trough play an important role in understanding the trends and patterns of a time series, and can help in making future predictions.Calculating L Peak and L TroughIn order to calculate L Peak and L Trough, we first need to have a time series data set. A time series is a sequence of measurements taken at equal intervals over time. It can be represented as a mathematical function with time as the independent variable and the value at each time point as the dependent variable.Suppose we have a time series such as the following:y=[5,7,8,10,11,13,12,9,6,3,1]y = [5, 7, 8, 10, 11, 13, 12, 9, 6, 3, 1]y=[5,7,8,10,11,13,12,9,6,3,1]To calculate L Peak and L Trough, we first need to find the maximum and minimum values of the time series.We can use the NumPy max() and min() functions to find the maximum and minimum values, respectively:import numpy as npy = np.array([5, 7, 8, 10, 11, 13, 12, 9, 6, 3, 1])L_peak = np.max(y)L_trough = np.min(y)In this case, the output should be:L_peak: 13L_trough: 1Interpretation of L Peak and L TroughOnce we have calculated L Peak and L Trough, we can use them to interpret the trends in the time series.If L Peak is increasing over time, then the time series is said to have an increasing trend. Similarly, if L Trough is decreasing over time, then the time series is said to have a decreasing trend.On the other hand, if L Peak is decreasing over time and L Trough is increasing over time, then the time series is said to have a decreasing trend.If L Peak and L Trough remain relatively constant over time, then the time series is said to be stationary.ConclusionL Peak and L Trough are important concepts in time series analysis. They provide important information about the trends in a time series, and can help in making future predictions. In this article, we provided a Python implementation for calculating L Peak and L Trough using NumPy.",
            "content_html": "<p>L Peak and L Trough are two concepts that are commonly used in time series analysis. L Peak is the highest value of a time series, while L Trough is the lowest value of a time series. Both L Peak and L Trough play an important role in understanding the trends and patterns of a time series, and can help in making future predictions.</p><h3 id=\"calculating-l-peak-and-l-trough\">Calculating L Peak and L Trough</h3><p>In order to calculate L Peak and L Trough, we first need to have a time series data set. A time series is a sequence of measurements taken at equal intervals over time. It can be represented as a mathematical function with time as the independent variable and the value at each time point as the dependent variable.</p><p>Suppose we have a time series such as the following:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo>=</mo><mo stretchy=\"false\">[</mo><mn>5</mn><mo separator=\"true\">,</mo><mn>7</mn><mo separator=\"true\">,</mo><mn>8</mn><mo separator=\"true\">,</mo><mn>10</mn><mo separator=\"true\">,</mo><mn>11</mn><mo separator=\"true\">,</mo><mn>13</mn><mo separator=\"true\">,</mo><mn>12</mn><mo separator=\"true\">,</mo><mn>9</mn><mo separator=\"true\">,</mo><mn>6</mn><mo separator=\"true\">,</mo><mn>3</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">y = [5, 7, 8, 10, 11, 13, 12, 9, 6, 3, 1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">7</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">8</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">10</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">11</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">13</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">12</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">9</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></span><p>To calculate L Peak and L Trough, we first need to find the maximum and minimum values of the time series.</p><p>We can use the NumPy <code>max()</code> and <code>min()</code> functions to find the maximum and minimum values, respectively:</p><pre><code class=\"language-python\">import numpy as npy = np.array([5, 7, 8, 10, 11, 13, 12, 9, 6, 3, 1])L_peak = np.max(y)L_trough = np.min(y)</code></pre><p>In this case, the output should be:</p><pre><code>L_peak: 13L_trough: 1</code></pre><h3 id=\"interpretation-of-l-peak-and-l-trough\">Interpretation of L Peak and L Trough</h3><p>Once we have calculated L Peak and L Trough, we can use them to interpret the trends in the time series.</p><p>If L Peak is increasing over time, then the time series is said to have an increasing trend. Similarly, if L Trough is decreasing over time, then the time series is said to have a decreasing trend.</p><p>On the other hand, if L Peak is decreasing over time and L Trough is increasing over time, then the time series is said to have a decreasing trend.</p><p>If L Peak and L Trough remain relatively constant over time, then the time series is said to be stationary.</p><h3 id=\"conclusion\">Conclusion</h3><p>L Peak and L Trough are important concepts in time series analysis. They provide important information about the trends in a time series, and can help in making future predictions. In this article, we provided a Python implementation for calculating L Peak and L Trough using NumPy.</p>",
            "url": "http://localhost:4000/2023/04/17/peak-trough",
            
            
            
            
            
            "date_published": "2023-04-17T00:00:00+01:00",
            "date_modified": "2023-04-17T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/16/segmentation-turning-points",
            "title": "Time Series Segmentation using Turning Points and their Variants",
            "summary": "A comprehensive guide on Time Series Segmentation using Turning Points and their Variants",
            "content_text": "Time series segmentation is a crucial task in time series analysis. It involves dividing a time series into homogeneous segments, thereby facilitating further analysis and modeling. Turning points, which are defined as local minima or maxima, are widely used as anchors for segmenting time series. This article provides an overview of various methods for identifying turning points and their variants, along with their applications in practical time series analysis. Implementations in Python are provided for all variants.Turning PointsA turning point in a time series is a value of the series where the trend changes direction. In other words, it is a local minimum or maximum in the series. Turning points play a crucial role in time series segmentation, as they are often used as anchors for dividing the series into homogeneous segments. The detection of turning points can be done by various methods, as discussed below.Fixed Interval MethodThe fixed interval method involves dividing a time series into fixed-sized intervals and identifying the turning points within each interval. This method is computationally simple and easy to implement, but it may miss key turning points if they occur at the boundaries of the intervals.Moving Average MethodThe moving average method involves computing a moving average of the time series and identifying the turning points based on the slope of the moving average. Specifically, a turning point is identified as a point where the difference between the moving average at that point and the moving average at the previous point changes sign. This method is computationally efficient and more robust than the fixed interval method, as it is less affected by local noise in the series.Regression MethodThe regression method involves fitting a regression model to the time series and identifying turning points as the local minima or maxima of the fitted function. The regression function can be a linear or nonlinear function, depending on the nature of the time series. This method is more accurate than the previous methods but can be computationally intensive, especially for large time series.Wavelet MethodThe wavelet method involves applying wavelet analysis to the time series and identifying turning points as the local minima or maxima of the wavelet transform. Wavelet analysis is a powerful tool for time series analysis that allows for both time and frequency localization. This method is more complex than the previous methods but is more robust and accurate, especially for nonstationary time series.Variants of Turning PointsSeveral variants of the turning points concept have been proposed to address specific issues in time series analysis. Some of the commonly used variants are discussed below.L-Peaks and TroughsL-peaks and troughs are local extrema that are defined using both the amplitude and the length of a series of consecutive points. Specifically, an L-peak is a point that has a value greater than its surrounding points and whose height is greater than a certain threshold, which is defined as the average of the heights of the n highest peaks in the series. Similarly, an L-trough is a point that has a value less than its surrounding points and whose depth is less than a certain threshold, which is defined as the average of the depths of the n deepest troughs in the series. This variant is useful for identifying significant turning points in noisy time series.Dynamic Time WarpingDynamic time warping (DTW) is a technique for aligning two time series by warping their time axes to minimize the difference between them. DTW can be used to identify turning points in time series by comparing the distance between each point in the series and the best matching point in a reference series. This variant is useful for comparing time series with different lengths or for identifying turning points in nonstationary time series.Hidden Markov ModelsHidden Markov models (HMM) are stochastic models that capture the underlying structure of a time series by modeling its transitions between states. HMM can be used for identifying turning points in time series by inferring the state sequence that generates the observed series and identifying the transition points between states. This variant is useful for identifying turning points in complex time series with multiple trends or regimes.Python ImplementationBelow is an example Python implementation for identifying turning points in a time series using the moving average method.import numpy as npdef moving_average(x, window_size):    weights = np.repeat(1.0, window_size) / window_size    ma = np.convolve(x, weights, 'valid')    return madef turning_points(x, window_size):    ma = moving_average(x, window_size)    tp = []    for i in range(1, len(ma)-1):        if np.sign(ma[i]-ma[i-1]) != np.sign(ma[i+1]-ma[i]):            tp.append(i)    return tpThe moving_average function computes a moving average of the input time series x using a window of window_size. The turning_points function identifies the turning points in the original time series x based on the slope of the moving average. Specifically, it checks for points where the difference between the moving average at that point and the moving average at the previous point changes sign. The function returns a list of indices corresponding to the turning points.ConclusionTime series segmentation is a fundamental task in time series analysis, and turning points are widely used as anchors for this task. Various methods and variants for identifying turning points have been proposed, each with its own strengths and weaknesses. These methods and variants can be applied to a wide range of time series analysis problems, ranging from simple anomaly detection to complex regime switching models. Python implementations for all variants make it easy to explore these methods and variants on real-world time series data.",
            "content_html": "<p>Time series segmentation is a crucial task in time series analysis. It involves dividing a time series into homogeneous segments, thereby facilitating further analysis and modeling. Turning points, which are defined as local minima or maxima, are widely used as anchors for segmenting time series. This article provides an overview of various methods for identifying turning points and their variants, along with their applications in practical time series analysis. Implementations in Python are provided for all variants.</p><h2 id=\"turning-points\">Turning Points</h2><p>A turning point in a time series is a value of the series where the trend changes direction. In other words, it is a local minimum or maximum in the series. Turning points play a crucial role in time series segmentation, as they are often used as anchors for dividing the series into homogeneous segments. The detection of turning points can be done by various methods, as discussed below.</p><h2 id=\"fixed-interval-method\">Fixed Interval Method</h2><p>The fixed interval method involves dividing a time series into fixed-sized intervals and identifying the turning points within each interval. This method is computationally simple and easy to implement, but it may miss key turning points if they occur at the boundaries of the intervals.</p><h2 id=\"moving-average-method\">Moving Average Method</h2><p>The moving average method involves computing a moving average of the time series and identifying the turning points based on the slope of the moving average. Specifically, a turning point is identified as a point where the difference between the moving average at that point and the moving average at the previous point changes sign. This method is computationally efficient and more robust than the fixed interval method, as it is less affected by local noise in the series.</p><h2 id=\"regression-method\">Regression Method</h2><p>The regression method involves fitting a regression model to the time series and identifying turning points as the local minima or maxima of the fitted function. The regression function can be a linear or nonlinear function, depending on the nature of the time series. This method is more accurate than the previous methods but can be computationally intensive, especially for large time series.</p><h2 id=\"wavelet-method\">Wavelet Method</h2><p>The wavelet method involves applying wavelet analysis to the time series and identifying turning points as the local minima or maxima of the wavelet transform. Wavelet analysis is a powerful tool for time series analysis that allows for both time and frequency localization. This method is more complex than the previous methods but is more robust and accurate, especially for nonstationary time series.</p><h2 id=\"variants-of-turning-points\">Variants of Turning Points</h2><p>Several variants of the turning points concept have been proposed to address specific issues in time series analysis. Some of the commonly used variants are discussed below.</p><h3 id=\"l-peaks-and-troughs\">L-Peaks and Troughs</h3><p>L-peaks and troughs are local extrema that are defined using both the amplitude and the length of a series of consecutive points. Specifically, an L-peak is a point that has a value greater than its surrounding points and whose height is greater than a certain threshold, which is defined as the average of the heights of the n highest peaks in the series. Similarly, an L-trough is a point that has a value less than its surrounding points and whose depth is less than a certain threshold, which is defined as the average of the depths of the n deepest troughs in the series. This variant is useful for identifying significant turning points in noisy time series.</p><h3 id=\"dynamic-time-warping\">Dynamic Time Warping</h3><p>Dynamic time warping (DTW) is a technique for aligning two time series by warping their time axes to minimize the difference between them. DTW can be used to identify turning points in time series by comparing the distance between each point in the series and the best matching point in a reference series. This variant is useful for comparing time series with different lengths or for identifying turning points in nonstationary time series.</p><h3 id=\"hidden-markov-models\">Hidden Markov Models</h3><p>Hidden Markov models (HMM) are stochastic models that capture the underlying structure of a time series by modeling its transitions between states. HMM can be used for identifying turning points in time series by inferring the state sequence that generates the observed series and identifying the transition points between states. This variant is useful for identifying turning points in complex time series with multiple trends or regimes.</p><h2 id=\"python-implementation\">Python Implementation</h2><p>Below is an example Python implementation for identifying turning points in a time series using the moving average method.</p><pre><code class=\"language-python\">import numpy as npdef moving_average(x, window_size):    weights = np.repeat(1.0, window_size) / window_size    ma = np.convolve(x, weights, 'valid')    return madef turning_points(x, window_size):    ma = moving_average(x, window_size)    tp = []    for i in range(1, len(ma)-1):        if np.sign(ma[i]-ma[i-1]) != np.sign(ma[i+1]-ma[i]):            tp.append(i)    return tp</code></pre><p>The <code>moving_average</code> function computes a moving average of the input time series <code>x</code> using a window of <code>window_size</code>. The <code>turning_points</code> function identifies the turning points in the original time series <code>x</code> based on the slope of the moving average. Specifically, it checks for points where the difference between the moving average at that point and the moving average at the previous point changes sign. The function returns a list of indices corresponding to the turning points.</p><h2 id=\"conclusion\">Conclusion</h2><p>Time series segmentation is a fundamental task in time series analysis, and turning points are widely used as anchors for this task. Various methods and variants for identifying turning points have been proposed, each with its own strengths and weaknesses. These methods and variants can be applied to a wide range of time series analysis problems, ranging from simple anomaly detection to complex regime switching models. Python implementations for all variants make it easy to explore these methods and variants on real-world time series data.</p>",
            "url": "http://localhost:4000/2023/04/16/segmentation-turning-points",
            
            
            
            "tags": ["turning_points","representation"],
            
            "date_published": "2023-04-16T00:00:00+01:00",
            "date_modified": "2023-04-16T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/15/hmm-trend-detection",
            "title": "Using HMM to Find Out the Trend of a Signal or Time Series in Real Time",
            "summary": "This article discusses the use of Hidden Markov Models (HMMs) to identify the trend of a signal or time series in real time. It provides a detailed explanation of the theory behind HMMs and their implementation using Python code. ",
            "content_text": "IntroductionHidden Markov Models (HMMs) are widely used in time series analysis and other machine learning applications. HMMs are a type of statistical model that uses observed data to infer the hidden state of a system. They have been successfully applied in speech recognition, text recognition, bioinformatics, and many other domains.One important application of HMMs is in real-time trend analysis of time series data. In this article, we will discuss how HMMs can be used to identify the trend of a signal or time series in real time. We will start with a brief overview of the theory behind HMMs and then move on to the implementation using Python code.TheoryHidden Markov ModelsA Hidden Markov Model is a statistical model that can be used to model time series data. It consists of a set of latent variables, known as hidden states, that are not directly observable. The hidden states generate the observed data, which are the observations.The basic idea is that the hidden states encode information about the underlying pattern in the data, while the observations are simply noisy measurements of these underlying patterns. The goal is to infer the hidden states from the observations.The HMM is characterized by three components:  State transition probability matrix: This matrix defines the probability of moving from one state to another in the underlying Markov chain that generates the hidden states.  Observation probability distribution: This distribution defines the probability of observing a given observation given the current hidden state.  Initial state probability distribution: This distribution defines the probability of starting in each of the possible hidden states.The HMM can be thought of as a generative model of the observed data. That is, given the hidden states, we can use the observation probability distribution to generate a sequence of observations. Conversely, given a sequence of observations, we can use the Viterbi algorithm or the forward-backward algorithm to infer the most likely sequence of hidden states that generated the observations.Trend Analysis with HMMsIn the context of time series analysis, we can use HMMs to identify the trend of a signal in real time. The idea is to model the trend as a sequence of hidden states, with each state corresponding to a different trend regime. For example, in a financial time series, we might have a bull market regime, a bear market regime, and a sideways market regime.We can then use the observation probability distribution to model the observed data as a noisy version of the underlying trend. This allows us to identify the current trend regime in real time, as well as predict future trends.ImplementationWe will now discuss the implementation of the HMM for trend analysis using Python code. We will use the hmmlearn library, which is a widely used library for HMMs.Data PreparationWe will use the sunspots dataset from the statsmodels library, which contains monthly sunspot numbers from 1749 to 2017. We will use the number of sunspots as our observed data.import numpy as npimport matplotlib.pyplot as pltfrom statsmodels.datasets import sunspots# Load the datasetdata = sunspots.load_pandas().data['SUNACTIVITY'].valuesModel DefinitionWe will define our HMM model as follows:from hmmlearn import hmm# Define the modelmodel = hmm.GaussianHMM(n_components=3, covariance_type=\"full\", n_iter=100)Here, we are using a Gaussian HMM with three hidden states, a full covariance matrix, and 100 iterations of the Baum-Welch algorithm for parameter estimation.TrainingWe can train the model on the data using the fit function:# Train the modelmodel.fit(data.reshape(-1, 1))Predicting Hidden States and TrendsWe can use the predict function to predict the most likely sequence of hidden states:# Predict the hidden stateshidden_states = model.predict(data.reshape(-1, 1))We can then plot the observed data and the predicted hidden states:# Plot the data with the hidden statesplt.plot(data)plt.plot(hidden_states)plt.legend(['Data', 'Hidden States'])plt.show()We can see that the HMM has successfully identified the major trend regimes in the data.Generating Future ObservationsWe can use the sample function to generate future observations based on the learned model:# Generate future observationsfuture_data = model.sample(24)[0]Here, we are generating 24 new observations based on the learned model.ConclusionIn this article, we discussed how Hidden Markov Models can be used to identify the trend of a signal or time series in real time. We provided a detailed explanation of the theory behind HMMs and their implementation using Python code. We showed how HMMs can be trained on time series data to identify trend regimes, and how future observations can be generated based on the learned model.HMMs are a powerful tool for time series analysis, and their application to trend analysis can have many practical uses. By identifying trends in real time, we can make more informed decisions about financial investments, weather patterns, and more.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>Hidden Markov Models (HMMs) are widely used in time series analysis and other machine learning applications. HMMs are a type of statistical model that uses observed data to infer the hidden state of a system. They have been successfully applied in speech recognition, text recognition, bioinformatics, and many other domains.</p><p>One important application of HMMs is in real-time trend analysis of time series data. In this article, we will discuss how HMMs can be used to identify the trend of a signal or time series in real time. We will start with a brief overview of the theory behind HMMs and then move on to the implementation using Python code.</p><h1 id=\"theory\">Theory</h1><h2 id=\"hidden-markov-models\">Hidden Markov Models</h2><p>A Hidden Markov Model is a statistical model that can be used to model time series data. It consists of a set of latent variables, known as hidden states, that are not directly observable. The hidden states generate the observed data, which are the observations.</p><p>The basic idea is that the hidden states encode information about the underlying pattern in the data, while the observations are simply noisy measurements of these underlying patterns. The goal is to infer the hidden states from the observations.</p><p>The HMM is characterized by three components:</p><ul>  <li><strong>State transition probability matrix</strong>: This matrix defines the probability of moving from one state to another in the underlying Markov chain that generates the hidden states.</li>  <li><strong>Observation probability distribution</strong>: This distribution defines the probability of observing a given observation given the current hidden state.</li>  <li><strong>Initial state probability distribution</strong>: This distribution defines the probability of starting in each of the possible hidden states.</li></ul><p>The HMM can be thought of as a generative model of the observed data. That is, given the hidden states, we can use the observation probability distribution to generate a sequence of observations. Conversely, given a sequence of observations, we can use the Viterbi algorithm or the forward-backward algorithm to infer the most likely sequence of hidden states that generated the observations.</p><h2 id=\"trend-analysis-with-hmms\">Trend Analysis with HMMs</h2><p>In the context of time series analysis, we can use HMMs to identify the trend of a signal in real time. The idea is to model the trend as a sequence of hidden states, with each state corresponding to a different trend regime. For example, in a financial time series, we might have a bull market regime, a bear market regime, and a sideways market regime.</p><p>We can then use the observation probability distribution to model the observed data as a noisy version of the underlying trend. This allows us to identify the current trend regime in real time, as well as predict future trends.</p><h1 id=\"implementation\">Implementation</h1><p>We will now discuss the implementation of the HMM for trend analysis using Python code. We will use the <code>hmmlearn</code> library, which is a widely used library for HMMs.</p><h2 id=\"data-preparation\">Data Preparation</h2><p>We will use the <code>sunspots</code> dataset from the <code>statsmodels</code> library, which contains monthly sunspot numbers from 1749 to 2017. We will use the number of sunspots as our observed data.</p><pre><code class=\"language-python\">import numpy as npimport matplotlib.pyplot as pltfrom statsmodels.datasets import sunspots# Load the datasetdata = sunspots.load_pandas().data['SUNACTIVITY'].values</code></pre><h2 id=\"model-definition\">Model Definition</h2><p>We will define our HMM model as follows:</p><pre><code class=\"language-python\">from hmmlearn import hmm# Define the modelmodel = hmm.GaussianHMM(n_components=3, covariance_type=\"full\", n_iter=100)</code></pre><p>Here, we are using a Gaussian HMM with three hidden states, a full covariance matrix, and 100 iterations of the Baum-Welch algorithm for parameter estimation.</p><h2 id=\"training\">Training</h2><p>We can train the model on the data using the <code>fit</code> function:</p><pre><code class=\"language-python\"># Train the modelmodel.fit(data.reshape(-1, 1))</code></pre><h2 id=\"predicting-hidden-states-and-trends\">Predicting Hidden States and Trends</h2><p>We can use the <code>predict</code> function to predict the most likely sequence of hidden states:</p><pre><code class=\"language-python\"># Predict the hidden stateshidden_states = model.predict(data.reshape(-1, 1))</code></pre><p>We can then plot the observed data and the predicted hidden states:</p><pre><code class=\"language-python\"># Plot the data with the hidden statesplt.plot(data)plt.plot(hidden_states)plt.legend(['Data', 'Hidden States'])plt.show()</code></pre><p>We can see that the HMM has successfully identified the major trend regimes in the data.</p><h2 id=\"generating-future-observations\">Generating Future Observations</h2><p>We can use the <code>sample</code> function to generate future observations based on the learned model:</p><pre><code class=\"language-python\"># Generate future observationsfuture_data = model.sample(24)[0]</code></pre><p>Here, we are generating 24 new observations based on the learned model.</p><h1 id=\"conclusion\">Conclusion</h1><p>In this article, we discussed how Hidden Markov Models can be used to identify the trend of a signal or time series in real time. We provided a detailed explanation of the theory behind HMMs and their implementation using Python code. We showed how HMMs can be trained on time series data to identify trend regimes, and how future observations can be generated based on the learned model.</p><p>HMMs are a powerful tool for time series analysis, and their application to trend analysis can have many practical uses. By identifying trends in real time, we can make more informed decisions about financial investments, weather patterns, and more.</p>",
            "url": "http://localhost:4000/2023/04/15/hmm-trend-detection",
            
            
            
            "tags": ["trend_detection","HMM"],
            
            "date_published": "2023-04-15T00:00:00+01:00",
            "date_modified": "2023-04-15T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/14/matched-filters",
            "title": "Matched Filters and their Variants",
            "summary": "Understanding the working of Matched Filters and the different variants used for signal processing.",
            "content_text": "IntroductionMatched Filters are a popular tool used for signal processing, primarily for detecting and extracting signals from noisy data. This article discusses the working of matched filters and their different variants. The variants covered in this article are Matched Filter Banks and Matched Subspace Filters.Matched FiltersMatched Filters are linear filters used for signal detection and extraction, where the filter output is maximized when the input signal matches a predefined template. The matched filter’s advantage is that it maximizes the signal-to-noise ratio for the target signal while suppressing other noise sources.Mathematically, a matched filter $h(t)$ for a signal $s(t)$ with energy $E_s$, is given as:h(t)=s(T−t)Esh(t) = \\frac{s(T-t)}{E_s}h(t)=Es​s(T−t)​where T is the duration of the signal. The matched filter output $y(t)$ is the convolution of the input signal $x(t)$ with the matched filter $h(t)$:y(t)=x(t)∗h(t)=∫−∞∞x(τ)h(t−τ)dτy(t) = x(t) * h(t) = \\int_{-\\infty}^{\\infty} x(\\tau)h(t-\\tau)d\\tauy(t)=x(t)∗h(t)=∫−∞∞​x(τ)h(t−τ)dτThe output of the matched filter is proportional to the cross-correlation between the input signal and the template signal $s(t)$ shifted by a time lag $t$. Thus, the matched filter maximizes the detection probability of the target signal in the presence of noise.The matched filter can be implemented using classical convolution, Fourier transform or digital filters. In digital implementation, input samples $x[n]$ are convolved with the matched filter impulse response $h[n]$:y[n]=∑k=0N−1x[n−k]h[k]y[n] = \\sum_{k=0}^{N-1}x[n-k]h[k]y[n]=k=0∑N−1​x[n−k]h[k]where $N$ is the length of the matched filter impulse response.Matched Filter BanksMatched Filter Banks are used when there are multiple target signals at different frequencies or pulse durations. Instead of using a single matched filter for detecting all target signals, a bank of matched filters is used. Each filter in the bank is designed to detect a specific pulse duration or frequency.A Matched Filter Bank for signals ${s_1(t), s_2(t), \\dots, s_N(t)}$ is given as:H(f)=∑i=1NSi(f)ˉESiSi(f)H(f) = \\sum_{i=1}^{N}\\frac{\\bar{S_i(f)}}{E_{S_i}}S_i(f)H(f)=i=1∑N​ESi​​Si​(f)ˉ​​Si​(f)where $S_i(f)$ is the Fourier transform of $s_i(t)$ and $E_{S_i}$ is the energy of $s_i(t)$. The output of the Matched Filter Bank for an input signal $x(t)$ is given as:Y(f)=X(f)H(f)Y(f) = X(f)H(f)Y(f)=X(f)H(f)where $X(f)$ is the Fourier transform of $x(t)$.In the digital domain, the matched filter bank is implemented using a filter bank consisting of multiple matched filters, with each filter covering a specific frequency band.Matched Subspace FiltersMatched Subspace Filters are used when the number of signal sources is unknown, and the signals are correlated. In such cases, a subspace containing the signals can be formed, and a matched filter is designed for extracting the signals from the subspace.The input signal matrix $X$ can be represented as a sum of a subspace matrix $S$ containing the target signals and a noise matrix $N$:X=S+NX = S + NX=S+NThe subspace matrix $S$ can be factorized using Singular Value Decomposition (SVD) as:S=U∑VTS = U\\sum V^TS=U∑VTwhere $U$ and $V$ are unitary matrices, and $\\sum$ is a diagonal matrix containing the singular values of $S$. A matched filter $h$ can be designed using the subspace matrix $S$ as:h=∑VT∥∑VT∥h = \\frac{\\sum V^T}{\\|\\sum V^T\\|}h=∥∑VT∥∑VT​The output of the matched filter bank is given as:y(t)=hTx(t)y(t) = h^Tx(t)y(t)=hTx(t)In Python, a matched filter can be easily implemented using the scipy.signal library. The scipy.signal.correlate function can be used to implement the matched filter, as shown below:import numpy as npfrom scipy.signal import correlate# Define the signal and templatesignal = np.random.randn(100)template = np.random.randn(10)# Implement the matched filteroutput = correlate(signal, template, mode='valid')# Plot the output signalimport matplotlib.pyplot as pltplt.plot(output)plt.show()ConclusionMatched Filters are a powerful tool used for signal detection and extraction in noisy data. Matched Filter Banks and Matched Subspace Filters are variants of the matched filter used for detecting multiple signals at different frequencies and extracting signals from a correlated subspace, respectively. In this article, we discussed the working of Matched Filters and their variants along with their mathematical formulations and Python implementations.",
            "content_html": "<h2 id=\"introduction\">Introduction</h2><p>Matched Filters are a popular tool used for signal processing, primarily for detecting and extracting signals from noisy data. This article discusses the working of matched filters and their different variants. The variants covered in this article are Matched Filter Banks and Matched Subspace Filters.</p><h2 id=\"matched-filters\">Matched Filters</h2><p>Matched Filters are linear filters used for signal detection and extraction, where the filter output is maximized when the input signal matches a predefined template. The matched filter’s advantage is that it maximizes the signal-to-noise ratio for the target signal while suppressing other noise sources.</p><p>Mathematically, a matched filter $h(t)$ for a signal $s(t)$ with energy $E_s$, is given as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>h</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>s</mi><mo stretchy=\"false\">(</mo><mi>T</mi><mo>−</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><msub><mi>E</mi><mi>s</mi></msub></mfrac></mrow><annotation encoding=\"application/x-tex\">h(t) = \\frac{s(T-t)}{E_s}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.263em;vertical-align:-0.836em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.836em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><p>where T is the duration of the signal. The matched filter output $y(t)$ is the convolution of the input signal $x(t)$ with the matched filter $h(t)$:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>x</mi><mo stretchy=\"false\">(</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo>−</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>τ</mi></mrow><annotation encoding=\"application/x-tex\">y(t) = x(t) * h(t) = \\int_{-\\infty}^{\\infty} x(\\tau)h(t-\\tau)d\\tau</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3846em;vertical-align:-0.9703em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4143em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span></span></span></span></span><p>The output of the matched filter is proportional to the cross-correlation between the input signal and the template signal $s(t)$ shifted by a time lag $t$. Thus, the matched filter maximizes the detection probability of the target signal in the presence of noise.</p><p>The matched filter can be implemented using classical convolution, Fourier transform or digital filters. In digital implementation, input samples $x[n]$ are convolved with the matched filter impulse response $h[n]$:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>x</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo>−</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mi>h</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">y[n] = \\sum_{k=0}^{N-1}x[n-k]h[k]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1304em;vertical-align:-1.3021em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8479em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3021em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span></span></span></span></span><p>where $N$ is the length of the matched filter impulse response.</p><h2 id=\"matched-filter-banks\">Matched Filter Banks</h2><p>Matched Filter Banks are used when there are multiple target signals at different frequencies or pulse durations. Instead of using a single matched filter for detecting all target signals, a bank of matched filters is used. Each filter in the bank is designed to detect a specific pulse duration or frequency.</p><p>A Matched Filter Bank for signals ${s_1(t), s_2(t), \\dots, s_N(t)}$ is given as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mfrac><mover accent=\"true\"><mrow><msub><mi>S</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo></mrow><mo>ˉ</mo></mover><msub><mi>E</mi><msub><mi>S</mi><mi>i</mi></msub></msub></mfrac><msub><mi>S</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(f) = \\sum_{i=1}^{N}\\frac{\\bar{S_i(f)}}{E_{S_i}}S_i(f)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.106em;vertical-align:-1.2777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5638em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8868em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.319em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">ˉ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25em;\"><span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9361em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span></span></span></span></span><p>where $S_i(f)$ is the Fourier transform of $s_i(t)$ and $E_{S_i}$ is the energy of $s_i(t)$. The output of the Matched Filter Bank for an input signal $x(t)$ is given as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>Y</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Y(f) = X(f)H(f)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span></span></span></span></span><p>where $X(f)$ is the Fourier transform of $x(t)$.</p><p>In the digital domain, the matched filter bank is implemented using a filter bank consisting of multiple matched filters, with each filter covering a specific frequency band.</p><h2 id=\"matched-subspace-filters\">Matched Subspace Filters</h2><p>Matched Subspace Filters are used when the number of signal sources is unknown, and the signals are correlated. In such cases, a subspace containing the signals can be formed, and a matched filter is designed for extracting the signals from the subspace.</p><p>The input signal matrix $X$ can be represented as a sum of a subspace matrix $S$ containing the target signals and a noise matrix $N$:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>X</mi><mo>=</mo><mi>S</mi><mo>+</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">X = S + N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><p>The subspace matrix $S$ can be factorized using Singular Value Decomposition (SVD) as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo>=</mo><mi>U</mi><mo>∑</mo><msup><mi>V</mi><mi>T</mi></msup></mrow><annotation encoding=\"application/x-tex\">S = U\\sum V^T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.6em;vertical-align:-0.55em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-symbol large-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span></span><p>where $U$ and $V$ are unitary matrices, and $\\sum$ is a diagonal matrix containing the singular values of $S$. A matched filter $h$ can be designed using the subspace matrix $S$ as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>h</mi><mo>=</mo><mfrac><mrow><mo>∑</mo><msup><mi>V</mi><mi>T</mi></msup></mrow><mrow><mi mathvariant=\"normal\">∥</mi><mo>∑</mo><msup><mi>V</mi><mi>T</mi></msup><mi mathvariant=\"normal\">∥</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">h = \\frac{\\sum V^T}{\\|\\sum V^T\\|}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4543em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5183em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">∥</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7673em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord\">∥</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><p>The output of the matched filter bank is given as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>h</mi><mi>T</mi></msup><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y(t) = h^Tx(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1413em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></span><p>In Python, a matched filter can be easily implemented using the <code>scipy.signal</code> library. The <code>scipy.signal.correlate</code> function can be used to implement the matched filter, as shown below:</p><pre><code class=\"language-python\">import numpy as npfrom scipy.signal import correlate# Define the signal and templatesignal = np.random.randn(100)template = np.random.randn(10)# Implement the matched filteroutput = correlate(signal, template, mode='valid')# Plot the output signalimport matplotlib.pyplot as pltplt.plot(output)plt.show()</code></pre><h2 id=\"conclusion\">Conclusion</h2><p>Matched Filters are a powerful tool used for signal detection and extraction in noisy data. Matched Filter Banks and Matched Subspace Filters are variants of the matched filter used for detecting multiple signals at different frequencies and extracting signals from a correlated subspace, respectively. In this article, we discussed the working of Matched Filters and their variants along with their mathematical formulations and Python implementations.</p>",
            "url": "http://localhost:4000/2023/04/14/matched-filters",
            
            
            
            "tags": ["filters","signal_detection"],
            
            "date_published": "2023-04-14T00:00:00+01:00",
            "date_modified": "2023-04-14T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/13/nonlinear-detectors",
            "title": "Non-Linear Detectors like SC Detector and its Variants",
            "summary": "This article explains Non-Linear Detectors like SC Detector and its Variants with Statistics and Equations in LaTeX. It also includes Python Implementation for all Variants.",
            "content_text": "IntroductionNon-linear detectors play an important role in signal processing applications. They are used in various applications, such as communications, radar, and medical imaging. The non-linear detectors are classified into two categories, namely parametric and non-parametric detectors. The parametric detectors require knowledge of the signal statistics, whereas the non-parametric detectors do not require any statistical information about the signals.One popular non-linear detector is the Sequentially Cyclic (SC) detector (also known as the Sawtooth detector), which is widely used in communication systems. In this article, we will discuss the SC detector in detail, along with its variants and their statistics and equations in LaTeX. Additionally, we will include Python implementation for all variants.SC DetectorThe Sequentially Cyclic (SC) detector is a non-linear detector used for detecting the presence of a signal of known frequency in noise. It is a simple but effective detector that is widely used in communication systems. The SC detector works by multiplying the input signal with a reference signal, which is a sawtooth waveform with the same frequency as the input signal. The sawtooth waveform is generated by a voltage-controlled oscillator (VCO), as shown in Figure 1.Figure 1: Block Diagram of SC DetectorThe output of the multiplier is a sum of harmonics of the input signal frequency, which is filtered by a bandpass filter (BPF) centered at the input frequency. The output of the BPF is then rectified and low-pass filtered (LPF) to obtain the Envelope of the input signal, as shown in Figure 2.Figure 2: SC Detector Output WaveformsThe envelope output is compared to a threshold, which is set according to the noise level. If the envelope output exceeds the threshold, it is considered as a signal present.SC Detector VariantsThere are several variants of the SC detector, which are listed below:Quadrature SC Detector (QSCD)The Quadrature SC Detector (QSCD) is a variant of the SC detector that uses two reference signals, which are in-phase and quadrature-phase (I/Q) with the input signal. The reference signals are generated by two voltage-controlled oscillators (VCOs), as shown in Figure 3.Figure 3: Block Diagram of QSCDThe output of the QSCD is obtained by adding the envelope outputs of the I and Q channels. The threshold for the QSCD is set according to the noise level.Multi-Stage SC Detector (MSSCD)The Multi-Stage SC Detector (MSSCD) is a variant of the SC detector that uses multiple stages of bandpass filtering to suppress noise. The MSSCD works by bandpass filtering the input signal at multiple stages, as shown in Figure 4.Figure 4: Block Diagram of MSSCDThe output of each stage is rectified and low-pass filtered, and then added to obtain the final output. The threshold for the MSSCD is set according to the noise level.Multi-Band SC Detector (MBSCD)The Multi-Band SC Detector (MBSCD) is a variant of the SC detector that uses multiple bandpass filters to separate the input signal into multiple frequency bands. The MBSCD works by splitting the input signal into multiple frequency bands using bandpass filters, as shown in Figure 5.Figure 5: Block Diagram of MBSCDThe output of each bandpass filter is rectified and low-pass filtered, and then added to obtain the final output. The threshold for the MBSCD is set according to the noise level.Statistics and EquationsIn this section, we will discuss the statistics and equations for the SC detector and its variants.SC DetectorThe output of the SC detector is given by:Sout=2AI∑n=−∞∞Jn(B)cos(ω0nt+ϕn)+2AQ∑n=−∞∞Jn(B)sin(ω0nt+ψn)+N(t)S_{out} = \\sqrt{2}A_I\\sum_{n=-\\infty}^{\\infty} J_n(B)cos(\\omega_0 nt + \\phi_n) + \\sqrt{2}A_Q\\sum_{n=-\\infty}^{\\infty} J_n(B)sin(\\omega_0 nt + \\psi_n) + N(t)Sout​=2​AI​n=−∞∑∞​Jn​(B)cos(ω0​nt+ϕn​)+2​AQ​n=−∞∑∞​Jn​(B)sin(ω0​nt+ψn​)+N(t)where $J_n(B)$ is the Bessel function of the first kind and order $n$, $B$ is the modulation index, $A_I$ and $A_Q$ are the amplitudes of the I and Q channels, $\\omega_0$ is the frequency of the input signal, $t$ is time, and $N(t)$ is the Gaussian noise.The envelope output of the SC detector is given by:E(t)=(Sout)2=2∑n=−∞∞Jn(B)cos(ω0nt+ϕn)+2∑n=−∞∞Jn(B)sin(ω0nt+ψn)+(N(t))2E(t) = \\sqrt{(S_{out})^2} = \\sqrt{2}\\sum_{n=-\\infty}^{\\infty} J_n(B)cos(\\omega_0 nt + \\phi_n) + \\sqrt{2}\\sum_{n=-\\infty}^{\\infty} J_n(B)sin(\\omega_0 nt + \\psi_n) + \\sqrt{(N(t))^2}E(t)=(Sout​)2​=2​n=−∞∑∞​Jn​(B)cos(ω0​nt+ϕn​)+2​n=−∞∑∞​Jn​(B)sin(ω0​nt+ψn​)+(N(t))2​where $\\phi_n$ and $\\psi_n$ are the phases of the I and Q channels, respectively.The detection probability ($P_D$) and false alarm probability ($P_{FA}$) of the SC detector are given by:PD=Q(γ−d22σ)P_D = Q(\\frac{\\gamma - d^2}{2\\sigma})PD​=Q(2σγ−d2​)PFA=Q(γ2σ)P_{FA} = Q(\\frac{\\gamma}{2\\sigma})PFA​=Q(2σγ​)where $\\gamma$ is the detection threshold, $\\sigma$ is the noise standard deviation, and $d$ is the signal-to-noise ratio.QSCDThe output of the QSCD is given by:Sout=2AI∑n=−∞∞Jn(B)cos(ω0nt+ϕn)+2AQ∑n=−∞∞Jn(B)sin(ω0nt+ψn)+N(t)S_{out} = \\sqrt{2}A_I\\sum_{n=-\\infty}^{\\infty} J_n(B)cos(\\omega_0 nt + \\phi_n) + \\sqrt{2}A_Q\\sum_{n=-\\infty}^{\\infty} J_n(B)sin(\\omega_0 nt + \\psi_n) + N(t)Sout​=2​AI​n=−∞∑∞​Jn​(B)cos(ω0​nt+ϕn​)+2​AQ​n=−∞∑∞​Jn​(B)sin(ω0​nt+ψn​)+N(t)The envelope output of the QSCD is given by:E(t)=(Sout)2=2∑n=−∞∞Jn(B)cos(ω0nt+ϕn)+2∑n=−∞∞Jn(B)sin(ω0nt+ψn)+(N(t))2E(t) = \\sqrt{(S_{out})^2} = \\sqrt{2}\\sum_{n=-\\infty}^{\\infty} J_n(B)cos(\\omega_0 nt + \\phi_n) + \\sqrt{2}\\sum_{n=-\\infty}^{\\infty} J_n(B)sin(\\omega_0 nt + \\psi_n) + \\sqrt{(N(t))^2}E(t)=(Sout​)2​=2​n=−∞∑∞​Jn​(B)cos(ω0​nt+ϕn​)+2​n=−∞∑∞​Jn​(B)sin(ω0​nt+ψn​)+(N(t))2​The detection probability ($P_D$) and false alarm probability ($P_{FA}$) of the QSCD are given by:PD=Q(γ−d22σ)P_D = Q(\\frac{\\gamma - d^2}{2\\sigma})PD​=Q(2σγ−d2​)PFA=Q(γ2σ)P_{FA} = Q(\\frac{\\gamma}{2\\sigma})PFA​=Q(2σγ​)where $\\gamma$ is the detection threshold, $\\sigma$ is the noise standard deviation, and $d$ is the signal-to-noise ratio.MSSCDThe output of the MSSCD is given by:Sout=∑i=1N2Ai∑n=−∞∞Jn(Bi)cos(ω0int+ϕni)+N(t)S_{out} = \\sum_{i=1}^{N} \\sqrt{2}A_i\\sum_{n=-\\infty}^{\\infty} J_n(B_i)cos(\\omega_{0i} nt + \\phi_{ni}) + N(t)Sout​=i=1∑N​2​Ai​n=−∞∑∞​Jn​(Bi​)cos(ω0i​nt+ϕni​)+N(t)The envelope output of the MSSCD is given by:E(t)=(Sout)2=2∑i=1N∑n=−∞∞Jn(Bi)cos(ω0int+ϕni)+(N(t))2E(t) = \\sqrt{(S_{out})^2} = \\sqrt{2}\\sum_{i=1}^{N}\\sum_{n=-\\infty}^{\\infty} J_n(B_i)cos(\\omega_{0i} nt + \\phi_{ni}) + \\sqrt{(N(t))^2}E(t)=(Sout​)2​=2​i=1∑N​n=−∞∑∞​Jn​(Bi​)cos(ω0i​nt+ϕni​)+(N(t))2​The detection probability ($P_D$) and false alarm probability ($P_{FA}$) of the MSSCD are given by:PD=Q(γ−d22σ)P_D = Q(\\frac{\\gamma - d^2}{2\\sigma})PD​=Q(2σγ−d2​)PFA=Q(γ2σ)P_{FA} = Q(\\frac{\\gamma}{2\\sigma})PFA​=Q(2σγ​)where $\\gamma$ is the detection threshold, $\\sigma$ is the noise standard deviation, and $d$ is the signal-to-noise ratio.MBSCDThe output of the MBSCD is given by:Sout=∑i=1N2Ai∑n=−∞∞Jn(Bi)cos(ω0int+ϕni)+N(t)S_{out} = \\sum_{i=1}^{N} \\sqrt{2}A_i\\sum_{n=-\\infty}^{\\infty} J_n(B_i)cos(\\omega_{0i} nt + \\phi_{ni}) + N(t)Sout​=i=1∑N​2​Ai​n=−∞∑∞​Jn​(Bi​)cos(ω0i​nt+ϕni​)+N(t)The envelope output of the MBSCD is given by:E(t)=(Sout)2=2∑i=1N∑n=−∞∞Jn(Bi)cos(ω0int+ϕni)+(N(t))2E(t) = \\sqrt{(S_{out})^2} = \\sqrt{2}\\sum_{i=1}^{N}\\sum_{n=-\\infty}^{\\infty} J_n(B_i)cos(\\omega_{0i} nt + \\phi_{ni}) + \\sqrt{(N(t))^2}E(t)=(Sout​)2​=2​i=1∑N​n=−∞∑∞​Jn​(Bi​)cos(ω0i​nt+ϕni​)+(N(t))2​The detection probability ($P_D$) and false alarm probability ($P_{FA}$) of the MBSCD are given by:PD=Q(γ−d22σ)P_D = Q(\\frac{\\gamma - d^2}{2\\sigma})PD​=Q(2σγ−d2​)PFA=Q(γ2σ)P_{FA} = Q(\\frac{\\gamma}{2\\sigma})PFA​=Q(2σγ​)where $\\gamma$ is the detection threshold, $\\sigma$ is the noise standard deviation, and $d$ is the signal-to-noise ratio.Python ImplementationIn this section, we will provide Python implementation for the SC detector and its variants.import numpy as npimport scipy.special as spdef sc_detector(x, fs, fc, bw, th):    # Generate sawtooth waveform    N = len(x)    t = np.linspace(0, N/fs, N, endpoint=False)    sawtooth = sp.sawtooth(2 * np.pi * fc * t)    # Multiply input signal with sawtooth waveform    s_out = x * sawtooth    # Apply bandpass filter    b, a = signal.butter(4, [fc-bw/2, fc+bw/2], btype='band')    s_out = signal.filtfilt(b, a, s_out)    # Rectify and low-pass filter    s_out = np.abs(s_out)    b, a = signal.butter(4, 2 * fc / fs, btype='low')    s_out = signal.filtfilt(b, a, s_out)    # Thresholding    if np.max(s_out) &gt; th:        return True    else:        return Falsedef qsc_detector(x, fs, fc, bw, th):    # Generate I and Q reference signals    N = len(x)    t = np.linspace(0, N/fs, N, endpoint=False)    i_ref = np.cos(2 * np.pi * fc * t)    q_ref = np.sin(2 * np.pi * fc * t)    # Multiply input signal with I and Q reference signals    i_out = x * i_ref    q_out = x * q_ref    # Apply bandpass filter    b, a = signal.butter(4, [fc-bw/2, fc+bw/2], btype='band')    i_out = signal.filtfilt(b, a, i_out)    q_out = signal.filtfilt(b, a, q_out)    # Rectify and low-pass filter    i_out = np.abs(i_out)    q_out = np.abs(q_out)    b, a = signal.butter(4, 2 * fc / fs, btype='low')    i_out = signal.filtfilt(b, a, i_out)    q_out = signal.filtfilt(b, a, q_out)    # Sum the envelope outputs of I and Q channels    s_out = i_out + q_out    # Thresholding    if np.max(s_out) &gt; th:        return True    else:        return Falsedef mss_detector(x, fs, fc, bw, th, N):    # Generate sawtooth waveform for each stage    t = np.linspace(0, len(x)/fs, len(x), endpoint=False)    stages = []    for i in range(N):        stage = sp.sawtooth(2 * np.pi * fc[i] * t)        stages.append(stage)    # Apply bandpass filter for each stage    s_out = np.zeros(len(x))    for i in range(N):        b, a = signal.butter(4, [fc[i]-bw[i]/2, fc[i]+bw[i]/2], btype='band')        s_out_stage = signal.filtfilt(b, a, x * stages[i])        # Rectify and low-pass filter        s_out_stage = np.abs(s_out_stage)        b, a = signal.butter(4, 2 * fc[i] / fs, btype='low')        s_out_stage = signal.filtfilt(b, a, s_out_stage)        # Add the envelope output of the current stage to the final output        s_out += s_out_stage    # Thresholding    if np.max(s_out) &gt; th:        return True    else:        return Falsedef mbs_detector(x, fs, fc, bw, th, N):    # Apply bandpass filter for each band    s_out = np.zeros(len(x))    for i in range(N):        b, a = signal.butter(4, [fc[i]-bw[i]/2, fc[i]+bw[i]/2], btype='band')        s_out_band = signal.filtfilt(b, a, x)        # Rectify and low-pass filter        s_out_band = np.abs(s_out_band)        b, a = signal.butter(4, 2 * fc[i] / fs, btype='low')        s_out_band = signal.filtfilt(b, a, s_out_band)        # Add the envelope output of the current band to the final output        s_out += s_out_band    # Thresholding    if np.max(s_out) &gt; th:        return True    else:        return FalseConclusionIn summary, non-linear detectors like the Sequentially Cyclic (SC) detector and its variants (Quadrature SC Detector, Multi-Stage SC Detector, Multi-Band SC Detector) are widely used in communication systems for detecting the presence of a signal in noise. The SC detector works by multiplying the input signal with a sawtooth waveform and filtering the output signal to obtain the envelope. The envelope is compared to a threshold to determine the presence of a signal.We have detailed the statistics and equations for the SC detector and its variants, along with Python implementation for each variant. These detectors have practical applications in various areas of signal processing, such as communications, radar, and medical imaging.",
            "content_html": "<h2 id=\"introduction\">Introduction</h2><p>Non-linear detectors play an important role in signal processing applications. They are used in various applications, such as communications, radar, and medical imaging. The non-linear detectors are classified into two categories, namely parametric and non-parametric detectors. The parametric detectors require knowledge of the signal statistics, whereas the non-parametric detectors do not require any statistical information about the signals.</p><p>One popular non-linear detector is the Sequentially Cyclic (SC) detector (also known as the Sawtooth detector), which is widely used in communication systems. In this article, we will discuss the SC detector in detail, along with its variants and their statistics and equations in LaTeX. Additionally, we will include Python implementation for all variants.</p><h2 id=\"sc-detector\">SC Detector</h2><p>The Sequentially Cyclic (SC) detector is a non-linear detector used for detecting the presence of a signal of known frequency in noise. It is a simple but effective detector that is widely used in communication systems. The SC detector works by multiplying the input signal with a reference signal, which is a sawtooth waveform with the same frequency as the input signal. The sawtooth waveform is generated by a voltage-controlled oscillator (VCO), as shown in Figure 1.</p><p><img src=\"https://i.imgur.com/dsw5V7O.png\" alt=\"SC Detector Block Diagram\" /></p><p><em>Figure 1: Block Diagram of SC Detector</em></p><p>The output of the multiplier is a sum of harmonics of the input signal frequency, which is filtered by a bandpass filter (BPF) centered at the input frequency. The output of the BPF is then rectified and low-pass filtered (LPF) to obtain the Envelope of the input signal, as shown in Figure 2.</p><p><img src=\"https://i.imgur.com/2ZQURWd.png\" alt=\"SC Detector Output Waveforms\" /></p><p><em>Figure 2: SC Detector Output Waveforms</em></p><p>The envelope output is compared to a threshold, which is set according to the noise level. If the envelope output exceeds the threshold, it is considered as a signal present.</p><h2 id=\"sc-detector-variants\">SC Detector Variants</h2><p>There are several variants of the SC detector, which are listed below:</p><h3 id=\"quadrature-sc-detector-qscd\">Quadrature SC Detector (QSCD)</h3><p>The Quadrature SC Detector (QSCD) is a variant of the SC detector that uses two reference signals, which are in-phase and quadrature-phase (I/Q) with the input signal. The reference signals are generated by two voltage-controlled oscillators (VCOs), as shown in Figure 3.</p><p><img src=\"https://i.imgur.com/65Fcgs0.png\" alt=\"QSCD Block Diagram\" /></p><p><em>Figure 3: Block Diagram of QSCD</em></p><p>The output of the QSCD is obtained by adding the envelope outputs of the I and Q channels. The threshold for the QSCD is set according to the noise level.</p><h3 id=\"multi-stage-sc-detector-msscd\">Multi-Stage SC Detector (MSSCD)</h3><p>The Multi-Stage SC Detector (MSSCD) is a variant of the SC detector that uses multiple stages of bandpass filtering to suppress noise. The MSSCD works by bandpass filtering the input signal at multiple stages, as shown in Figure 4.</p><p><img src=\"https://i.imgur.com/gtDfHtI.png\" alt=\"MSSCD Block Diagram\" /></p><p><em>Figure 4: Block Diagram of MSSCD</em></p><p>The output of each stage is rectified and low-pass filtered, and then added to obtain the final output. The threshold for the MSSCD is set according to the noise level.</p><h3 id=\"multi-band-sc-detector-mbscd\">Multi-Band SC Detector (MBSCD)</h3><p>The Multi-Band SC Detector (MBSCD) is a variant of the SC detector that uses multiple bandpass filters to separate the input signal into multiple frequency bands. The MBSCD works by splitting the input signal into multiple frequency bands using bandpass filters, as shown in Figure 5.</p><p><img src=\"https://i.imgur.com/Yc3W6Oe.png\" alt=\"MBSCD Block Diagram\" /></p><p><em>Figure 5: Block Diagram of MBSCD</em></p><p>The output of each bandpass filter is rectified and low-pass filtered, and then added to obtain the final output. The threshold for the MBSCD is set according to the noise level.</p><h2 id=\"statistics-and-equations\">Statistics and Equations</h2><p>In this section, we will discuss the statistics and equations for the SC detector and its variants.</p><h3 id=\"sc-detector-1\">SC Detector</h3><p>The output of the SC detector is given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>S</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>=</mo><msqrt><mn>2</mn></msqrt><msub><mi>A</mi><mi>I</mi></msub><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></munderover><msub><mi>J</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>ω</mi><mn>0</mn></msub><mi>n</mi><mi>t</mi><mo>+</mo><msub><mi>ϕ</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><msqrt><mn>2</mn></msqrt><msub><mi>A</mi><mi>Q</mi></msub><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></munderover><msub><mi>J</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><msub><mi>ω</mi><mn>0</mn></msub><mi>n</mi><mi>t</mi><mo>+</mo><msub><mi>ψ</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mi>N</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S_{out} = \\sqrt{2}A_I\\sum_{n=-\\infty}^{\\infty} J_n(B)cos(\\omega_0 nt + \\phi_n) + \\sqrt{2}A_Q\\sum_{n=-\\infty}^{\\infty} J_n(B)sin(\\omega_0 nt + \\psi_n) + N(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9597em;vertical-align:-1.3083em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9561em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.9161em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0839em;\"><span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.9em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3083em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9597em;vertical-align:-1.3083em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9561em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.9161em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0839em;\"><span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">Q</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.9em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3083em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></span><p>where $J_n(B)$ is the Bessel function of the first kind and order $n$, $B$ is the modulation index, $A_I$ and $A_Q$ are the amplitudes of the I and Q channels, $\\omega_0$ is the frequency of the input signal, $t$ is time, and $N(t)$ is the Gaussian noise.</p><p>The envelope output of the SC detector is given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msqrt><mrow><mo stretchy=\"false\">(</mo><msub><mi>S</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></msqrt><mo>=</mo><msqrt><mn>2</mn></msqrt><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></munderover><msub><mi>J</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>ω</mi><mn>0</mn></msub><mi>n</mi><mi>t</mi><mo>+</mo><msub><mi>ϕ</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><msqrt><mn>2</mn></msqrt><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></munderover><msub><mi>J</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><msub><mi>ω</mi><mn>0</mn></msub><mi>n</mi><mi>t</mi><mo>+</mo><msub><mi>ψ</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><msqrt><mrow><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">E(t) = \\sqrt{(S_{out})^2} = \\sqrt{2}\\sum_{n=-\\infty}^{\\infty} J_n(B)cos(\\omega_0 nt + \\phi_n) + \\sqrt{2}\\sum_{n=-\\infty}^{\\infty} J_n(B)sin(\\omega_0 nt + \\psi_n) + \\sqrt{(N(t))^2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.2561em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9839em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9439em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2561em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9597em;vertical-align:-1.3083em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9561em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.9161em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0839em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.9em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3083em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9597em;vertical-align:-1.3083em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9561em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.9161em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0839em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.9em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3083em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.2561em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9839em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9439em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2561em;\"><span></span></span></span></span></span></span></span></span></span><p>where $\\phi_n$ and $\\psi_n$ are the phases of the I and Q channels, respectively.</p><p>The detection probability ($P_D$) and false alarm probability ($P_{FA}$) of the SC detector are given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>P</mi><mi>D</mi></msub><mo>=</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>γ</mi><mo>−</mo><msup><mi>d</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><mi>σ</mi></mrow></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P_D = Q(\\frac{\\gamma - d^2}{2\\sigma})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1771em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4911em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span></span><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>P</mi><mrow><mi>F</mi><mi>A</mi></mrow></msub><mo>=</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mfrac><mi>γ</mi><mrow><mn>2</mn><mi>σ</mi></mrow></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P_{FA} = Q(\\frac{\\gamma}{2\\sigma})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7936em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span></span><p>where $\\gamma$ is the detection threshold, $\\sigma$ is the noise standard deviation, and $d$ is the signal-to-noise ratio.</p><h3 id=\"qscd\">QSCD</h3><p>The output of the QSCD is given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>S</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>=</mo><msqrt><mn>2</mn></msqrt><msub><mi>A</mi><mi>I</mi></msub><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></munderover><msub><mi>J</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>ω</mi><mn>0</mn></msub><mi>n</mi><mi>t</mi><mo>+</mo><msub><mi>ϕ</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><msqrt><mn>2</mn></msqrt><msub><mi>A</mi><mi>Q</mi></msub><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></munderover><msub><mi>J</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><msub><mi>ω</mi><mn>0</mn></msub><mi>n</mi><mi>t</mi><mo>+</mo><msub><mi>ψ</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mi>N</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S_{out} = \\sqrt{2}A_I\\sum_{n=-\\infty}^{\\infty} J_n(B)cos(\\omega_0 nt + \\phi_n) + \\sqrt{2}A_Q\\sum_{n=-\\infty}^{\\infty} J_n(B)sin(\\omega_0 nt + \\psi_n) + N(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9597em;vertical-align:-1.3083em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9561em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.9161em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0839em;\"><span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.9em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3083em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9597em;vertical-align:-1.3083em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9561em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.9161em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0839em;\"><span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">Q</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.9em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3083em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></span><p>The envelope output of the QSCD is given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msqrt><mrow><mo stretchy=\"false\">(</mo><msub><mi>S</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></msqrt><mo>=</mo><msqrt><mn>2</mn></msqrt><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></munderover><msub><mi>J</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>ω</mi><mn>0</mn></msub><mi>n</mi><mi>t</mi><mo>+</mo><msub><mi>ϕ</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><msqrt><mn>2</mn></msqrt><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></munderover><msub><mi>J</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><msub><mi>ω</mi><mn>0</mn></msub><mi>n</mi><mi>t</mi><mo>+</mo><msub><mi>ψ</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><msqrt><mrow><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">E(t) = \\sqrt{(S_{out})^2} = \\sqrt{2}\\sum_{n=-\\infty}^{\\infty} J_n(B)cos(\\omega_0 nt + \\phi_n) + \\sqrt{2}\\sum_{n=-\\infty}^{\\infty} J_n(B)sin(\\omega_0 nt + \\psi_n) + \\sqrt{(N(t))^2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.2561em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9839em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9439em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2561em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9597em;vertical-align:-1.3083em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9561em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.9161em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0839em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.9em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3083em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9597em;vertical-align:-1.3083em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9561em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.9161em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0839em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.9em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3083em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.2561em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9839em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9439em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2561em;\"><span></span></span></span></span></span></span></span></span></span><p>The detection probability ($P_D$) and false alarm probability ($P_{FA}$) of the QSCD are given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>P</mi><mi>D</mi></msub><mo>=</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>γ</mi><mo>−</mo><msup><mi>d</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><mi>σ</mi></mrow></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P_D = Q(\\frac{\\gamma - d^2}{2\\sigma})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1771em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4911em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span></span><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>P</mi><mrow><mi>F</mi><mi>A</mi></mrow></msub><mo>=</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mfrac><mi>γ</mi><mrow><mn>2</mn><mi>σ</mi></mrow></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P_{FA} = Q(\\frac{\\gamma}{2\\sigma})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7936em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span></span><p>where $\\gamma$ is the detection threshold, $\\sigma$ is the noise standard deviation, and $d$ is the signal-to-noise ratio.</p><h3 id=\"msscd\">MSSCD</h3><p>The output of the MSSCD is given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>S</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msqrt><mn>2</mn></msqrt><msub><mi>A</mi><mi>i</mi></msub><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></munderover><msub><mi>J</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>ω</mi><mrow><mn>0</mn><mi>i</mi></mrow></msub><mi>n</mi><mi>t</mi><mo>+</mo><msub><mi>ϕ</mi><mrow><mi>n</mi><mi>i</mi></mrow></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mi>N</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S_{out} = \\sum_{i=1}^{N} \\sqrt{2}A_i\\sum_{n=-\\infty}^{\\infty} J_n(B_i)cos(\\omega_{0i} nt + \\phi_{ni}) + N(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1367em;vertical-align:-1.3083em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9561em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.9161em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0839em;\"><span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.9em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3083em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ni</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></span><p>The envelope output of the MSSCD is given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msqrt><mrow><mo stretchy=\"false\">(</mo><msub><mi>S</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></msqrt><mo>=</mo><msqrt><mn>2</mn></msqrt><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></munderover><msub><mi>J</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>ω</mi><mrow><mn>0</mn><mi>i</mi></mrow></msub><mi>n</mi><mi>t</mi><mo>+</mo><msub><mi>ϕ</mi><mrow><mi>n</mi><mi>i</mi></mrow></msub><mo stretchy=\"false\">)</mo><mo>+</mo><msqrt><mrow><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">E(t) = \\sqrt{(S_{out})^2} = \\sqrt{2}\\sum_{i=1}^{N}\\sum_{n=-\\infty}^{\\infty} J_n(B_i)cos(\\omega_{0i} nt + \\phi_{ni}) + \\sqrt{(N(t))^2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.2561em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9839em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9439em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2561em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1367em;vertical-align:-1.3083em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9561em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.9161em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0839em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.9em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3083em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ni</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.2561em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9839em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9439em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2561em;\"><span></span></span></span></span></span></span></span></span></span><p>The detection probability ($P_D$) and false alarm probability ($P_{FA}$) of the MSSCD are given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>P</mi><mi>D</mi></msub><mo>=</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>γ</mi><mo>−</mo><msup><mi>d</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><mi>σ</mi></mrow></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P_D = Q(\\frac{\\gamma - d^2}{2\\sigma})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1771em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4911em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span></span><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>P</mi><mrow><mi>F</mi><mi>A</mi></mrow></msub><mo>=</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mfrac><mi>γ</mi><mrow><mn>2</mn><mi>σ</mi></mrow></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P_{FA} = Q(\\frac{\\gamma}{2\\sigma})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7936em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span></span><p>where $\\gamma$ is the detection threshold, $\\sigma$ is the noise standard deviation, and $d$ is the signal-to-noise ratio.</p><h3 id=\"mbscd\">MBSCD</h3><p>The output of the MBSCD is given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>S</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msqrt><mn>2</mn></msqrt><msub><mi>A</mi><mi>i</mi></msub><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></munderover><msub><mi>J</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>ω</mi><mrow><mn>0</mn><mi>i</mi></mrow></msub><mi>n</mi><mi>t</mi><mo>+</mo><msub><mi>ϕ</mi><mrow><mi>n</mi><mi>i</mi></mrow></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mi>N</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S_{out} = \\sum_{i=1}^{N} \\sqrt{2}A_i\\sum_{n=-\\infty}^{\\infty} J_n(B_i)cos(\\omega_{0i} nt + \\phi_{ni}) + N(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1367em;vertical-align:-1.3083em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9561em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.9161em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0839em;\"><span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.9em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3083em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ni</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></span><p>The envelope output of the MBSCD is given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msqrt><mrow><mo stretchy=\"false\">(</mo><msub><mi>S</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></msqrt><mo>=</mo><msqrt><mn>2</mn></msqrt><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></munderover><msub><mi>J</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>ω</mi><mrow><mn>0</mn><mi>i</mi></mrow></msub><mi>n</mi><mi>t</mi><mo>+</mo><msub><mi>ϕ</mi><mrow><mi>n</mi><mi>i</mi></mrow></msub><mo stretchy=\"false\">)</mo><mo>+</mo><msqrt><mrow><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">E(t) = \\sqrt{(S_{out})^2} = \\sqrt{2}\\sum_{i=1}^{N}\\sum_{n=-\\infty}^{\\infty} J_n(B_i)cos(\\omega_{0i} nt + \\phi_{ni}) + \\sqrt{(N(t))^2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.2561em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9839em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9439em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2561em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1367em;vertical-align:-1.3083em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9561em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.9161em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0839em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.9em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3083em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ni</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.2561em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9839em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9439em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2561em;\"><span></span></span></span></span></span></span></span></span></span><p>The detection probability ($P_D$) and false alarm probability ($P_{FA}$) of the MBSCD are given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>P</mi><mi>D</mi></msub><mo>=</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>γ</mi><mo>−</mo><msup><mi>d</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><mi>σ</mi></mrow></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P_D = Q(\\frac{\\gamma - d^2}{2\\sigma})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1771em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4911em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span></span><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>P</mi><mrow><mi>F</mi><mi>A</mi></mrow></msub><mo>=</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mfrac><mi>γ</mi><mrow><mn>2</mn><mi>σ</mi></mrow></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P_{FA} = Q(\\frac{\\gamma}{2\\sigma})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7936em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span></span><p>where $\\gamma$ is the detection threshold, $\\sigma$ is the noise standard deviation, and $d$ is the signal-to-noise ratio.</p><h2 id=\"python-implementation\">Python Implementation</h2><p>In this section, we will provide Python implementation for the SC detector and its variants.</p><pre><code class=\"language-python\">import numpy as npimport scipy.special as spdef sc_detector(x, fs, fc, bw, th):    # Generate sawtooth waveform    N = len(x)    t = np.linspace(0, N/fs, N, endpoint=False)    sawtooth = sp.sawtooth(2 * np.pi * fc * t)    # Multiply input signal with sawtooth waveform    s_out = x * sawtooth    # Apply bandpass filter    b, a = signal.butter(4, [fc-bw/2, fc+bw/2], btype='band')    s_out = signal.filtfilt(b, a, s_out)    # Rectify and low-pass filter    s_out = np.abs(s_out)    b, a = signal.butter(4, 2 * fc / fs, btype='low')    s_out = signal.filtfilt(b, a, s_out)    # Thresholding    if np.max(s_out) &gt; th:        return True    else:        return Falsedef qsc_detector(x, fs, fc, bw, th):    # Generate I and Q reference signals    N = len(x)    t = np.linspace(0, N/fs, N, endpoint=False)    i_ref = np.cos(2 * np.pi * fc * t)    q_ref = np.sin(2 * np.pi * fc * t)    # Multiply input signal with I and Q reference signals    i_out = x * i_ref    q_out = x * q_ref    # Apply bandpass filter    b, a = signal.butter(4, [fc-bw/2, fc+bw/2], btype='band')    i_out = signal.filtfilt(b, a, i_out)    q_out = signal.filtfilt(b, a, q_out)    # Rectify and low-pass filter    i_out = np.abs(i_out)    q_out = np.abs(q_out)    b, a = signal.butter(4, 2 * fc / fs, btype='low')    i_out = signal.filtfilt(b, a, i_out)    q_out = signal.filtfilt(b, a, q_out)    # Sum the envelope outputs of I and Q channels    s_out = i_out + q_out    # Thresholding    if np.max(s_out) &gt; th:        return True    else:        return Falsedef mss_detector(x, fs, fc, bw, th, N):    # Generate sawtooth waveform for each stage    t = np.linspace(0, len(x)/fs, len(x), endpoint=False)    stages = []    for i in range(N):        stage = sp.sawtooth(2 * np.pi * fc[i] * t)        stages.append(stage)    # Apply bandpass filter for each stage    s_out = np.zeros(len(x))    for i in range(N):        b, a = signal.butter(4, [fc[i]-bw[i]/2, fc[i]+bw[i]/2], btype='band')        s_out_stage = signal.filtfilt(b, a, x * stages[i])        # Rectify and low-pass filter        s_out_stage = np.abs(s_out_stage)        b, a = signal.butter(4, 2 * fc[i] / fs, btype='low')        s_out_stage = signal.filtfilt(b, a, s_out_stage)        # Add the envelope output of the current stage to the final output        s_out += s_out_stage    # Thresholding    if np.max(s_out) &gt; th:        return True    else:        return Falsedef mbs_detector(x, fs, fc, bw, th, N):    # Apply bandpass filter for each band    s_out = np.zeros(len(x))    for i in range(N):        b, a = signal.butter(4, [fc[i]-bw[i]/2, fc[i]+bw[i]/2], btype='band')        s_out_band = signal.filtfilt(b, a, x)        # Rectify and low-pass filter        s_out_band = np.abs(s_out_band)        b, a = signal.butter(4, 2 * fc[i] / fs, btype='low')        s_out_band = signal.filtfilt(b, a, s_out_band)        # Add the envelope output of the current band to the final output        s_out += s_out_band    # Thresholding    if np.max(s_out) &gt; th:        return True    else:        return False</code></pre><h2 id=\"conclusion\">Conclusion</h2><p>In summary, non-linear detectors like the Sequentially Cyclic (SC) detector and its variants (Quadrature SC Detector, Multi-Stage SC Detector, Multi-Band SC Detector) are widely used in communication systems for detecting the presence of a signal in noise. The SC detector works by multiplying the input signal with a sawtooth waveform and filtering the output signal to obtain the envelope. The envelope is compared to a threshold to determine the presence of a signal.</p><p>We have detailed the statistics and equations for the SC detector and its variants, along with Python implementation for each variant. These detectors have practical applications in various areas of signal processing, such as communications, radar, and medical imaging.</p>",
            "url": "http://localhost:4000/2023/04/13/nonlinear-detectors",
            
            
            
            
            
            "date_published": "2023-04-13T00:00:00+01:00",
            "date_modified": "2023-04-13T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/12/s-transform",
            "title": "S Transform: A Denoising Method in Time-Frequency Domain",
            "summary": "An article on S Transform and its usage as a denoising method in time-frequency domain.",
            "content_text": "IntroductionTime-frequency analysis is an important tool for analyzing signals that contain both time-varying and frequency-varying components. The Short Time Fourier Transform (STFT) is the most commonly used technique for time-frequency analysis, but it suffers from a time-frequency resolution trade-off problem. The S transform is an alternative time-frequency analysis technique that overcomes this problem by using a windows of variable length. In addition to time-frequency analysis, the S transform has also been used as a denoising method for signals.In this article, we will provide an overview of the S transform and its usage as a denoising method in time-frequency domain. We will also provide a Python implementation of the S transform and its denoising operation.The S TransformThe S transform is a time-frequency analysis technique that uses a variable length window to estimate the local frequency content of a signal. The S transform of a signal is defined as follows:S(τ,f)=∫−∞∞x(t)w(t−τ)e−2πiftdtS(\\tau, f) = \\int_{-\\infty}^{\\infty} x(t) w(t-\\tau) e^{-2\\pi i f t} dtS(τ,f)=∫−∞∞​x(t)w(t−τ)e−2πiftdtwhere x(t) is the signal, w(t) is a complex valued window function, $f \\in \\mathbb{R}$ is the frequency variable, and $\\tau \\in \\mathbb{R}$ is the time variable.The window function w(t) has to satisfy some conditions in order for the S transform to be well defined. First, w(t) should be a complex valued function that is differentiable in some region. Second, the window function should have finite energy, i.e., $\\int_{-\\infty}^{\\infty} \\lvert w(t) \\rvert^2 dt &lt; \\infty$. Third, the window function should be compactly supported, i.e., w(t) = 0 for $\\lvert t \\rvert &gt; W$, where W is the window length. Fourth, the window function should have a minimum uncertainty property, which means that the product of the window function and its Fourier transform should have a minimum uncertainty.The S transform can be computed efficiently using the Fast Fourier Transform (FFT) algorithm. The S transform of a signal x can be obtained as follows:  Divide the signal x into overlapping segments of length L and apply the window function w to each segment.  Compute the FFT of the windowed segments.  Multiply the FFT of the windowed segments by a phase factor corresponding to the time shift $\\tau$.  Compute the inverse FFT of the product obtained in step 3.  Repeat steps 2 to 4 for different values of $\\tau$ and $f$ to obtain the S transform.Denoising using the S TransformThe S transform has been used as a denoising method for signals. The idea behind using the S transform for denoising is that in the time-frequency domain, the noise is spread out over a wide range of frequencies, whereas the signal is concentrated in a few frequency bands. Therefore, by thresholding the S transform coefficients corresponding to the noise, the noise can be effectively removed while preserving the signal.The denoising operation using the S transform can be described as follows:  Compute the S transform of the noisy signal.  Calculate the noise threshold using some thresholding function (e.g., universal threshold, soft threshold, hard threshold).  Set the S transform coefficients with magnitude less than the threshold to zero.  Compute the inverse S transform to obtain the denoised signal.Python ImplementationWe provide a Python implementation of the S transform and its denoising operation using the PyWavelets library.import pywtimport numpy as npdef s_transform(x, window, n_frequencies):    \"\"\"    Compute the S transform of a signal x using a given window function and number of frequencies.        Parameters:        x (numpy array): The input signal.        window (numpy array): The complex valued window function.        n_frequencies (int): The number of frequencies to compute.            Returns:        st (numpy array): The S transform of the signal.        freqs (numpy array): The array of frequency values.        times (numpy array): The array of time values.    \"\"\"    L = len(window)    n = len(x)    half_L = L // 2    timesteps = np.arange(half_L, n - half_L, half_L)    freqs = np.fft.fftfreq(L)    st = np.zeros((n_frequencies, len(timesteps)), dtype=np.complex128)    for i, t in enumerate(timesteps):        w = window * x[t-half_L:t+half_L]        W = np.fft.fft(w)        for j, f in enumerate(freqs[:n_frequencies]):            st[j,i] = np.exp(-2j*np.pi*t*f)*W[j]    times = pywt.scale2time(freqs, L) + 0.5*(n-L)/n    return st, freqs[:n_frequencies], timesdef threshold(S, threshold_fn, sigma=1):    \"\"\"    Threshold the S transform coefficients based on a given thresholding function.        Parameters:        S (numpy array): The S transform of the signal.        threshold_fn (function): The thresholding function.        sigma (float): The standard deviation of the noise.            Returns:        S_thresholded (numpy array): The thresholded S transform of the signal.    \"\"\"    noise_std = sigma*np.median(np.abs(S))/0.6745    threshold = threshold_fn(S, noise_std)    S_thresholded = np.zeros_like(S)    S_thresholded[np.abs(S) &gt;= threshold] = S[np.abs(S) &gt;= threshold]    return S_thresholdeddef inverse_s_transform(S):    \"\"\"    Compute the inverse S transform of a thresholded S transform.        Parameters:        S (numpy array): The thresholded S transform.            Returns:        x (numpy array): The denoised signal.    \"\"\"    L = S.shape[1]    n = len(S[0])*L    half_L = L // 2    timesteps = np.arange(half_L, n - half_L, half_L)    x = np.zeros(n)    for i, t in enumerate(timesteps):        W = np.zeros(L, dtype=np.complex128)        for j, f in enumerate(np.arange(len(S))):            W[j] = np.exp(2j*np.pi*t*f/L)*S[j,i]        w = np.fft.ifft(W).real        x[t-half_L:t+half_L] += w * np.conj(window)    return x[half_L:-half_L]window = pywt.blackmanharris(256)st, freqs, times = s_transform(x, window, 512)st_thresholded = threshold(st, pywt.thresholding.hard, sigma=1)x_denoised = inverse_s_transform(st_thresholded)ConclusionIn this article, we discussed the concept of the S transform and its usage as a denoising method in time-frequency domain. We provided a Python implementation of the S transform and its denoising operation using the PyWavelets library. The S transform has advantages over the STFT in terms of time-frequency resolution and the denoising operation using the S transform has shown promising results in various applications of signal processing.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>Time-frequency analysis is an important tool for analyzing signals that contain both time-varying and frequency-varying components. The Short Time Fourier Transform (STFT) is the most commonly used technique for time-frequency analysis, but it suffers from a time-frequency resolution trade-off problem. The S transform is an alternative time-frequency analysis technique that overcomes this problem by using a windows of variable length. In addition to time-frequency analysis, the S transform has also been used as a denoising method for signals.</p><p>In this article, we will provide an overview of the S transform and its usage as a denoising method in time-frequency domain. We will also provide a Python implementation of the S transform and its denoising operation.</p><h1 id=\"the-s-transform\">The S Transform</h1><p>The S transform is a time-frequency analysis technique that uses a variable length window to estimate the local frequency content of a signal. The S transform of a signal is defined as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo stretchy=\"false\">(</mo><mi>τ</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mi>w</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo>−</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mn>2</mn><mi>π</mi><mi>i</mi><mi>f</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">S(\\tau, f) = \\int_{-\\infty}^{\\infty} x(t) w(t-\\tau) e^{-2\\pi i f t} dt</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3846em;vertical-align:-0.9703em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4143em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1491em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">πi</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span></span></span></span><p>where x(t) is the signal, w(t) is a complex valued window function, $f \\in \\mathbb{R}$ is the frequency variable, and $\\tau \\in \\mathbb{R}$ is the time variable.</p><p>The window function w(t) has to satisfy some conditions in order for the S transform to be well defined. First, w(t) should be a complex valued function that is differentiable in some region. Second, the window function should have finite energy, i.e., $\\int_{-\\infty}^{\\infty} \\lvert w(t) \\rvert^2 dt &lt; \\infty$. Third, the window function should be compactly supported, i.e., w(t) = 0 for $\\lvert t \\rvert &gt; W$, where W is the window length. Fourth, the window function should have a minimum uncertainty property, which means that the product of the window function and its Fourier transform should have a minimum uncertainty.</p><p>The S transform can be computed efficiently using the Fast Fourier Transform (FFT) algorithm. The S transform of a signal x can be obtained as follows:</p><ol>  <li>Divide the signal x into overlapping segments of length L and apply the window function w to each segment.</li>  <li>Compute the FFT of the windowed segments.</li>  <li>Multiply the FFT of the windowed segments by a phase factor corresponding to the time shift $\\tau$.</li>  <li>Compute the inverse FFT of the product obtained in step 3.</li>  <li>Repeat steps 2 to 4 for different values of $\\tau$ and $f$ to obtain the S transform.</li></ol><h1 id=\"denoising-using-the-s-transform\">Denoising using the S Transform</h1><p>The S transform has been used as a denoising method for signals. The idea behind using the S transform for denoising is that in the time-frequency domain, the noise is spread out over a wide range of frequencies, whereas the signal is concentrated in a few frequency bands. Therefore, by thresholding the S transform coefficients corresponding to the noise, the noise can be effectively removed while preserving the signal.</p><p>The denoising operation using the S transform can be described as follows:</p><ol>  <li>Compute the S transform of the noisy signal.</li>  <li>Calculate the noise threshold using some thresholding function (e.g., universal threshold, soft threshold, hard threshold).</li>  <li>Set the S transform coefficients with magnitude less than the threshold to zero.</li>  <li>Compute the inverse S transform to obtain the denoised signal.</li></ol><h1 id=\"python-implementation\">Python Implementation</h1><p>We provide a Python implementation of the S transform and its denoising operation using the PyWavelets library.</p><pre><code class=\"language-python\">import pywtimport numpy as npdef s_transform(x, window, n_frequencies):    \"\"\"    Compute the S transform of a signal x using a given window function and number of frequencies.        Parameters:        x (numpy array): The input signal.        window (numpy array): The complex valued window function.        n_frequencies (int): The number of frequencies to compute.            Returns:        st (numpy array): The S transform of the signal.        freqs (numpy array): The array of frequency values.        times (numpy array): The array of time values.    \"\"\"    L = len(window)    n = len(x)    half_L = L // 2    timesteps = np.arange(half_L, n - half_L, half_L)    freqs = np.fft.fftfreq(L)    st = np.zeros((n_frequencies, len(timesteps)), dtype=np.complex128)    for i, t in enumerate(timesteps):        w = window * x[t-half_L:t+half_L]        W = np.fft.fft(w)        for j, f in enumerate(freqs[:n_frequencies]):            st[j,i] = np.exp(-2j*np.pi*t*f)*W[j]    times = pywt.scale2time(freqs, L) + 0.5*(n-L)/n    return st, freqs[:n_frequencies], timesdef threshold(S, threshold_fn, sigma=1):    \"\"\"    Threshold the S transform coefficients based on a given thresholding function.        Parameters:        S (numpy array): The S transform of the signal.        threshold_fn (function): The thresholding function.        sigma (float): The standard deviation of the noise.            Returns:        S_thresholded (numpy array): The thresholded S transform of the signal.    \"\"\"    noise_std = sigma*np.median(np.abs(S))/0.6745    threshold = threshold_fn(S, noise_std)    S_thresholded = np.zeros_like(S)    S_thresholded[np.abs(S) &gt;= threshold] = S[np.abs(S) &gt;= threshold]    return S_thresholdeddef inverse_s_transform(S):    \"\"\"    Compute the inverse S transform of a thresholded S transform.        Parameters:        S (numpy array): The thresholded S transform.            Returns:        x (numpy array): The denoised signal.    \"\"\"    L = S.shape[1]    n = len(S[0])*L    half_L = L // 2    timesteps = np.arange(half_L, n - half_L, half_L)    x = np.zeros(n)    for i, t in enumerate(timesteps):        W = np.zeros(L, dtype=np.complex128)        for j, f in enumerate(np.arange(len(S))):            W[j] = np.exp(2j*np.pi*t*f/L)*S[j,i]        w = np.fft.ifft(W).real        x[t-half_L:t+half_L] += w * np.conj(window)    return x[half_L:-half_L]window = pywt.blackmanharris(256)st, freqs, times = s_transform(x, window, 512)st_thresholded = threshold(st, pywt.thresholding.hard, sigma=1)x_denoised = inverse_s_transform(st_thresholded)</code></pre><h1 id=\"conclusion\">Conclusion</h1><p>In this article, we discussed the concept of the S transform and its usage as a denoising method in time-frequency domain. We provided a Python implementation of the S transform and its denoising operation using the PyWavelets library. The S transform has advantages over the STFT in terms of time-frequency resolution and the denoising operation using the S transform has shown promising results in various applications of signal processing.</p>",
            "url": "http://localhost:4000/2023/04/12/s-transform",
            
            
            
            "tags": ["time_frequency_methods","S_Transform","signal_denoising"],
            
            "date_published": "2023-04-12T00:00:00+01:00",
            "date_modified": "2023-04-12T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/11/improved-signal-detection",
            "title": "Improved signal detection using efficient time–frequency de-noising technique and Pre-whitening filter",
            "summary": "Improved signal detection using efficient time–frequency de-noising technique and Pre-whitening filter",
            "content_text": "AbstractIn the present study, the proposed Gaussian noise injectiondetector (GNID) represents a complete detection system. Thisdetector is developed to improve the probability of detection (PD)using a pre-whitening filter, a time–frequency de-noising algorithmbased on S-transform, and an inverse whitening filter. Stransformis used in the de-noising process to overcome the limitationsand poor performance of de-noising using the wavelettransform [25]. The UWAN used for the validation of the systemis sea-truth data, which are collected at the Desaru Beach on theeastern shore of Johor in Malaysia using broadband hydrophones.The performance results of the proposed detector are comparedwith other nonlinear detectors, namely, locally optimal (LO), signcorrelation (SC), and conventional LC.Signal detection problemIn this section, a known signal is to be detected in an additive noise channel representing a common problem in communication, radar, and sonar systems, that is, where the noise follows a Student’s t-distribution and the noise samples are uncorrelated.2.1. Signal modelThe signals used are single-frequency sinusoidal and linear frequency modulated (LFM) signals. These signals represent the fixed frequency and time-varying signals that can be encountered in practical situations. An arbitrary sinusoidal signal can be defined as follows:s(n)=Acos⁡(α(n))0⩽n⩽N−1=0 elsewhere \\begin{aligned}s(n) &amp; =A \\cos (\\alpha(n)) &amp; &amp; 0 \\leqslant n \\leqslant N-1 \\\\&amp; =0 &amp; &amp; \\text { elsewhere }\\end{aligned}s(n)​=Acos(α(n))=0​​0⩽n⩽N−1 elsewhere ​where $N$ is the signal duration in the samples, $A$ is signal amplitude, and $\\alpha(n)$ is the instantaneous phase. For a fixed-frequency signal, the instantaneous phase is defined asα(n)=2πfmnTs\\alpha(n)=2 \\pi f_m n T_sα(n)=2πfm​nTs​where $f_m$ is signal frequency, and $T_s$ is the sampling period. The instantaneous phase for the LFM signal isα(n)=2π(fm+φ2nTs)nTs\\alpha(n)=2 \\pi\\left(f_m+\\frac{\\varphi}{2} n T_s\\right) n T_sα(n)=2π(fm​+2φ​nTs​)nTs​where $\\varphi$ is the frequency defined as $\\varphi=f_{B W} / N T_S$, where $f_{B W}$ is the signal bandwidth.Given the combined influences of the internal measurement system and the external environmental factors, measured signals are often contaminated with noise. Thus, the received signal can be defined as follows:x(n)=s(n)+v(n)x(n)=s(n)+v(n)x(n)=s(n)+v(n)where $s(n)$ is the signal of interest, and $v(n)$ is the UWAN. The assumption of a Gaussian distribution for UWAN is explained in [26]. However, recent studies have suggested that UWAN follows a t-distribution [27] and a stable alpha distribution [11]. Therefore, the purpose of de-noising is to reduce the degree of corruption on $s(n)$ by $v(n)$The main idea of detection is to determine the presence of a signal in the noise. Given an observation vector $x$ and several hypotheses $\\mathrm{H} i$, the aim is to find the data set that matches a hypothesis. Although the number of hypotheses can be arbitrary,the case of having two hypotheses, $\\mathrm{H}_0$ and $\\mathrm{H}_1$, is considered applicable to communication, radar, and sonar systems [8]. If the pdf for each hypothesis is assumed to be completely known, then the hypothesis-testing problem is formulated as follows:$H_0($ Null hypothesis $): y(n)=v(n) n=0,1, \\ldots, N-1$$H_1$ (Alternative hypothesis) : $x(n)=s(n)+v(n) n=0,1, \\ldots, N-1$Neyman-Pearson (NP) and Bayesian methods are primarily used for hypothesis testing. Method selection depends on the availability of prior probability. Although digital communication and pattern recognition systems use the Bayes risk [28], the NP criterion is employed for radar and sonar systems. Furthermore, the derivation of optimal detectors depends on the assumption about the noise [8]. Given that UWAN is frequency dependent [1,29], the assumption of AWGN is invalid, and UWAN is more appropriately modelled as colored noise $[12,13,30]$. The power spectrum of the colored noise is defined as $[31,32]$SVV(ej2πf)=1fδδ&gt;0,−fs2⩽f⩽fs2S_{V V}\\left(e^{j 2 \\pi f}\\right)=\\frac{1}{f^\\delta} \\quad \\delta&gt;0, \\quad \\frac{-f_s}{2} \\leqslant f \\leqslant \\frac{f_s}{2}SVV​(ej2πf)=fδ1​δ&gt;0,2−fs​​⩽f⩽2fs​​AWGN has a delta autocorrelation function, that is, the adjacent samples are independent and identically distributed. Conversely, $\\frac{1}{f^\\delta}$ noise has a $\\operatorname{sinc}()$ autocorrelation function $[28,31]$. Unlike AWGN, the samples of $\\frac{1}{f^s}$ noise are correlated.Complete detection systemSince the UWAN is colored with a non-Gaussian distribution, the proposed detection system is a GNID, which is shown in Fig. 5. The complete detection system based on the noise models consists of the broadband hydrophone, pre-whitening filter, time-frequency distribution, de-noising method, inverse whitening filter, and detection stage. In this section, the performance of the GNID is compared with three other linear and nonlinear detectors.Signal detection in the t-distributed noise using GNIDFor non-Gaussian detection, linear and nonlinear detectors demonstrate optimal or at least near-optimal performance. In this study, the performances of four detectors for the detection of a known signal in additive UWAN are compared: LO, SC, and LC detectors, and the proposed GNID.In the presence of a Gaussian noise, the LC detector is optimal for detecting a known signal. Many communication systems use this detector as a matched filter. The test statistic for the matched filter is given by [8]T(x)=∑n=0N−1x[n]s[n]T(x)=\\sum_{n=0}^{N-1} x[n] s[n]T(x)=∑n=0N−1​x[n]s[n]where $s(n)$ is the signal to be detected (reference signal) and $x(n)$ denotes the observed data. The expected value $\\left(E\\left{T ; H_i\\right}\\right.$ for $i=0$, 1) and the variance of the test statistic $\\left(\\operatorname{Var}\\left{T ; H_i\\right}\\right.$ for $\\left.i=0,1\\right)$ are $T(x)= \\begin{cases}N\\left(0, v \\operatorname{var}(v) \\cdot E_s\\right) &amp; \\text { under } H_0 \\ N\\left(E_s, \\operatorname{var}(v) \\cdot E_s\\right) &amp; \\text { under } H_1\\end{cases}$where $E_s$ is the energy of the signal, and $\\operatorname{var}(v)$ is the variance of the noise that follows the $t$-distribution defined in Eq. (7). The false alarm probability $\\left(P_{F A}\\right)$ is defined asPFA=P(H1;H0)=Pr{x[0]&gt;γ;H0}=Q(γ(var⁡(v)⋅Es)1/2)\\mathrm{P}_{F A}=\\mathrm{P}\\left(\\mathrm{H}_1 ; \\mathrm{H}_0\\right)=P_r\\left\\{x[0]&gt;\\gamma ; H_0\\right\\}=Q\\left(\\frac{\\gamma}{\\left(\\operatorname{var}(v) \\cdot E_s\\right)^{1 / 2}}\\right)PFA​=P(H1​;H0​)=Pr​{x[0]&gt;γ;H0​}=Q((var(v)⋅Es​)1/2γ​)where $\\gamma$ is the threshold value for a given $P_{F A}$, and this threshold value is determined usingγ=Q−1(PFA)⋅(var⁡(v)⋅Es)1/2\\gamma=Q^{-1}\\left(P_{F A}\\right) \\cdot\\left(\\operatorname{var}(v) \\cdot E_s\\right)^{1 / 2}γ=Q−1(PFA​)⋅(var(v)⋅Es​)1/2The $P_D$ is defined asPD=P(H1;H1)=Pr{x[0]&gt;γ;H1}=Q(γ−Es(vvar⁡(v)⋅Es)1/2)P_D=P\\left(H_1 ; H_1\\right)=P_r\\left\\{x[0]&gt;\\gamma ; H_1\\right\\}=Q\\left(\\frac{\\gamma-E_s}{\\left(v \\operatorname{var}(v) \\cdot E_s\\right)^{1 / 2}}\\right)PD​=P(H1​;H1​)=Pr​{x[0]&gt;γ;H1​}=Q((vvar(v)⋅Es​)1/2γ−Es​​)By using Eqs. (9) and (11) in Eq. (12), we obtain the following equation [8]:PD=Q[Q−1(PFA)−ESvar⁡(v)]P_D=Q\\left[Q^{-1}\\left(P_{F A}\\right)-\\sqrt{\\frac{E_S}{\\operatorname{var}(v)}}\\right]PD​=Q[Q−1(PFA​)−var(v)ES​​​]As mentioned in the previous section, the LC detector shows performance degradation in the presence of non-Gaussian noise. Furthermore, nonlinear detectors have several limitations when used for non-Gaussian detection. For example, the LO detector is used for the detection of weak signals by introducing a nonlinear transfer function before a standard LC detector. The test statistic for the LO detector is given by [8-11]T(x)=∑n=0N−1g(x[n])s[n]T(x)=\\sum_{n=0}^{N-1} g(x[n]) s[n]T(x)=∑n=0N−1​g(x[n])s[n]where $g(x[n])$ is the nonlinear transfer function that can be determined from the noise pdf:g(x)=−1ρ(x)dρ(x)dxg(x)=-\\frac{1}{\\rho(x)} \\frac{d \\rho(x)}{d x}g(x)=−ρ(x)1​dxdρ(x)​where $\\rho(x)$ is the pdf for a $t$-distribution defined in Eq. (7).Another nonlinear detector is the SC detector, which is a nonparametric detector designed without predetermining the exact distribution of noise. Although the aforementioned feature of the SC detector can be considered advantageous, a negative effect on the performance may result from the lack of detailed information on noise distribution. The test statistic for the SC detector is as followsT(x)=∑n=0N−1sgn⁡(x[n])s[n]T(x)=\\sum_{n=0}^{N-1} \\operatorname{sgn}(x[n]) s[n]T(x)=∑n=0N−1​sgn(x[n])s[n]In this paper, we propose a GNID based on a noise-enhanced signal detection [14] using an S-transform de-noising method and prewhitening filter to ensure that the noise follows a Gaussian distri-bution and overcome the limitations of nonlinear detectors exclusively used for non-Gaussian detection. The basic idea of this proposed method is to insert a Gaussian noise to the UWAN that follows a t-distribution and convert that UWAN into a noise following a Gaussian distribution, which has a lighter tail than a t-distribution [15]. Given that the noise power has increased because of the insertion process, a de-noising algorithm using the S-transform is required before performing matched-filter detection, as shown in Fig. 5.The sum of two independent random variables $X$ and $Y$, whose pdfs are $\\rho_X(x)$ and $\\rho_Y(y)$, respectively, produces a random variable $Z$ whose pdf $\\rho_Z(z)$ isρZ(z)=ρX(x)∗ρY(y)=∫−∞∞ρY(y)ρX(z−x)dy\\rho_Z(z)=\\rho_X(x) * \\rho_Y(y)=\\int_{-\\infty}^{\\infty} \\rho_Y(y) \\rho_X(z-x) d yρZ​(z)=ρX​(x)∗ρY​(y)=∫−∞∞​ρY​(y)ρX​(z−x)dyThe expression in Eq. (17), is a convolution integral. The distribution of the sum of two independent Gaussian and Student’s $t$ (for three degrees of freedom) spherical random variables was studied in [15]. Two random variables $X$ and $Y$ are considered. $X$ is a Gaussian random variable with mean $\\bar{X}$, variance $\\sigma_v^2$, and pdf $\\rho_X(x) ; Y$ is a $t$-distributed random variable with $v$-degrees of freedom, mean $\\mu_v$, variance $\\operatorname{var}(v)$, and pdf $\\rho_y(y)$ [15]. The pdf for the sum of the random variables is [35]fZ(z)=Γ(d+12)2πσvΓ(d2)⋅Ψ(12,1−d2;d2σv2)⋅e−z22σv2f_Z(z)=\\frac{\\Gamma\\left(\\frac{d+1}{2}\\right)}{\\sqrt{2 \\pi} \\sigma_v \\Gamma\\left(\\frac{d}{2}\\right)} \\cdot \\Psi\\left(\\frac{1}{2}, 1-\\frac{d}{2} ; \\frac{d}{2 \\sigma_v^2}\\right) \\cdot e^{-\\frac{z^2}{2 \\sigma_v^2}}fZ​(z)=2π​σv​Γ(2d​)Γ(2d+1​)​⋅Ψ(21​,1−2d​;2σv2​d​)⋅e−2σv2​z2​where $|z| \\leqslant \\infty, v&gt;0$, and $\\sigma_v&gt;0 ; \\Psi($.$) denotes the Kummer’s$ hypergeometric function. By substituting $v=1$ and using the relationship between Kummer’s hypergeometric function and the complementary error function [36], the following equation is obtained: $\\operatorname{erfc}(x)=\\frac{1}{\\sqrt{\\pi}} \\cdot e^{-x^2} \\cdot \\Psi\\left(\\frac{1}{2}, \\frac{1}{2} ; x^2\\right)$Subsequently, Eq. (19) is substituted into Eq. (18) to obtainfz(z)=12πσv⋅e12σv2⋅erfc⁡(12σv2)⋅e−z22σv2f_z(z)=\\frac{1}{\\sqrt{2 \\pi} \\sigma_v} \\cdot e^{\\frac{1}{2 \\sigma_v^2}} \\cdot \\operatorname{erfc}\\left(\\frac{1}{\\sqrt{2} \\sigma_v^2}\\right) \\cdot e^{-\\frac{z^2}{2 \\sigma_v^2}}fz​(z)=2π​σv​1​⋅e2σv2​1​⋅erfc(2​σv2​1​)⋅e−2σv2​z2​Eq. (20) shows that the function approaches a Gaussian distribution as the variance or the degrees of freedom increases. A normality test, such as the Lilliefors test, is performed to determine if the pdf of the sum of the random variables is approximately Gaussian [37,38]. If the degree of freedom is greater than 1, the pdf in Eq. (20) is approximately Gaussian. The threshold derived from the $P_{F A}$ can be calculated by Eq. (11). The $P_D$ can be calculated by the threshold defined in Eq. (13).!  [[  gnid.png  ]]Whitening process and inverse whitening filterThe colored noise can be transformed into white by passing into a linear time invariant (LTI) whitening filter $[28,39]$. The prediction error filter (PEF) with transfer function $H_p(z)$ is used for this purpose $[32,40]$. The output of the PEF is used as the difference between the estimate of the linear predictor and the actual sequence. The transfer function of the PEF can be expressed asHp(z)=1+a1z−1+a2z−2+…+apz−pH_p(z)=1+a_1 z^{-1}+a_2 z^{-2}+\\ldots+a_p z^{-p}Hp​(z)=1+a1​z−1+a2​z−2+…+ap​z−pwhere $\\mathrm{p}$ is the length of the forward predictor filter, and $a_p(n)$ is the filter coefficients and depends on the UWAN data recording. If the order $p$ of the PEF is sufficiently large, then the forward prediction error is orthogonal with constant variance; thus, the output of filter is similar to AWGN [32]. Selecting the model order to use for the pre-whitening and the inverse pre-whitening filters is done using several standard order selection techniques. These methods include Akaike’s information criterion (AIC), Rissanen’s minimum description length, and maximum a posteriori probability [32,41,42]. The AIC provides a distinct minimum at the optimum model order $P$and is the criteria selected for deciding the pre-whitening filter model order in this study.The output of the PEF is referred to as $x_w(n)$ and represents the convolution process between the input noisy signal $x(n)$ and the impulse response of the whitening filter $h_w(n)$. Thus, the resulting PEF is the transform of the signal with the AWGN, which is expressed as followsxw(n)=x(n)∗hw(n)=s(n)∗hw(n)+v(n)∗hw(n)x_w(n)=x(n) * h_w(n)=s(n) * h_w(n)+v(n) * h_w(n)xw​(n)=x(n)∗hw​(n)=s(n)∗hw​(n)+v(n)∗hw​(n)After the filter coefficients are determined, the de-noising process minimizes the noise term $v(n) * h_w(n)$ to produce a clean estimate of the transform signal, which can be obtained as followss^w(n)=s(n)∗hw\\hat{s}_w(n)=s(n) * h_ws^w​(n)=s(n)∗hw​The original signal $s(n)$ can be recovered with an inverse whitening filter [43] with impulse response $h_{I W F}(n)$ and transfer function $1 / H_p(z)$. The estimate of the original signal iss^(n)=s^w(n)∗hIWF(n)=s(n)∗hw(n)∗hIWF(n)\\hat{s}(n)=\\hat{s}_w(n) * h_{I W F}(n)=s(n) * h_w(n) * h_{I W F}(n)s^(n)=s^w​(n)∗hIWF​(n)=s(n)∗hw​(n)∗hIWF​(n)In the z-domain, the estimation of the original signal can be expressed asS^(z)=S(z)⋅HP(z)⋅1HP(z)=S(z)\\hat{S}(z)=S(z) \\cdot H_P(z) \\cdot \\frac{1}{H_P(z)}=S(z)S^(z)=S(z)⋅HP​(z)⋅HP​(z)1​=S(z)Time-frequency de-noising process based on the S-transformThe S-transform is used for the signal transformation in the denoising process, as shown in Fig. 6. S-transform can be considered a special case of the short-time Fourier transform); the window function is replaced with a frequency-dependent Gaussian window $[44,45]$. The Gaussian window width is inversely proportional to the frequency, and its height is scaled linearly with the frequency. Given this window scaling behaviour, the S-transform possesses a good time resolution for high-frequency components and a good frequency resolution for low-frequency components. Thus, the S-transform is suitable to use for signal de-noising in underwater applications because the underwater acoustic signals are mostly in the $0-2500 \\mathrm{~Hz}$ frequency band that represents low-frequency signals [46]. The S-transform can be expressed as [44]X(t,f)=∫−∞∞x(τ)⋅g(τ−t,f)⋅e−j2πfτdτX(t, f)=\\int_{-\\infty}^{\\infty} x(\\tau) \\cdot g(\\tau-t, f) \\cdot e^{-j 2 \\pi f \\tau} d \\tauX(t,f)=∫−∞∞​x(τ)⋅g(τ−t,f)⋅e−j2πfτdτwhere $x(t)$ is the signal, and $g(t, f)$ is the frequency-dependent Gaussian window, which is expressed as follows [44]:g(t,f)=∣f∣2πe(t2f22)g(t, f)=\\frac{|f|}{\\sqrt{2 \\pi}} e^{\\left(\\frac{t^2 f^2}{2}\\right)}g(t,f)=2π​∣f∣​e(2t2f2​)The presence of the variable $f$ renders the frequency-dependent window spread. Given that $X(t, f)$ is a complex value, the modulus $|X(t, f)|$ is usually plotted in practice to construct a time-frequency representation. The S-transform represents the local spectrum; thus, averaging the local spectrum over time generates the Fourier spectrum, which can be expressed as follows [44]:∫−∞∞X(t,f)dt=X(f)\\int_{-\\infty}^{\\infty} X(t, f) d t=X(f)∫−∞∞​X(t,f)dt=X(f)The signal in time representation $x(t)$ is exactly recoverable from $X(t, f)$ based on the following expression $[44,47]$ :x(t)=∫−∞∞{∫−∞∞X(t,f)dt}ej2πftdfx(t)=\\int_{-\\infty}^{\\infty}\\left\\{\\int_{-\\infty}^{\\infty} X(t, f) d t\\right\\} e^{j 2 \\pi f t} d fx(t)=∫−∞∞​{∫−∞∞​X(t,f)dt}ej2πftdfIn this study, de-noising is performed in the time-frequency representation, and the signal is recovered from the noise using Eq. (29).The discrete S-transform is used in this study to allow the processing in the continuous S-transform. Let $x(n), n=0,1, \\ldots(N-1)$ denote a discrete time series corresponding to $x(t)$ with a time sampling interval of $T_s$. The S-transform of the discrete time series $x(n)$ is expressed as:X(n,k)=∑m=0N−1x(m−n)e−2π2m2k2e−j2πmkNX(n, k)=\\sum_{m=0}^{N-1} x(m-n) e^{\\frac{-2 \\pi^2 m^2}{k^2}} e^{\\frac{-j 2 \\pi m k}{N}}X(n,k)=∑m=0N−1​x(m−n)ek2−2π2m2​eN−j2πmk​The inverse of the discrete S-transform is expressed as follows [48]: $x(n)=\\frac{1}{N} \\sum_{k=0}^{N-1}\\left{\\sum_{n=0}^{N-1} X(n, k)\\right} e^{\\frac{i 2 \\pi n k}{N}}$In this study, a de-noising method based on a time-frequency analysis is proposed, with the S-transform used as an alternative to the wavelet transform. A key feature of the S-transform is its capacity to uniquely combine a frequency-dependent resolution with the simultaneously localizing real and imaginary spectra [49]. In contrastto the wavelet approach, the S-transform provides a frequency invariant amplitude response. Moreover, the S-transform uses a time-frequency axis rather than a time-scale axis, which is used in the wavelet transform. Therefore, the interpretation of the frequency information in the S-transform is more straightforward than that in the wavelet approach. Furthermore, the use of the S-transform is beneficial to the removal of noises for all frequency components [50].The de-noising process using the S-transform is described as follows:  A discrete S-transform using Eq. (30) is applied to noisy signals (signals that are corrupted by UWAN and defined in Eqs. (1-4)), as shown in Fig. 7. Based on the properties of the discrete Fourier transform and convolution theorem, the S-transform in Eq. (30) can be considered a convolution process in the frequency domain between the signal $X(k)$ and the localizing scalable Gaussian window ( $k$. The S-transform can be expressed asX(n,k)=∑m=0N−1x(m−n)e−2π2m2k2e−j2πmkN=∑m=0N−1x(m−n)w(m)e−j2πmkN=X(k)∗W(k)e−j2πnkN\\begin{aligned}X(n, k) &amp; =\\sum_{m=0}^{N-1} x(m-n) e^{\\frac{-2 \\pi^2 m^2}{k^2}} e^{\\frac{-j 2 \\pi m k}{N}}=\\sum_{m=0}^{N-1} x(m-n) w(m) e^{\\frac{-j 2 \\pi m k}{N}} \\\\&amp; =X(k) * W(k) e^{-j \\frac{2 \\pi n k}{N}}\\end{aligned}X(n,k)​=m=0∑N−1​x(m−n)ek2−2π2m2​eN−j2πmk​=m=0∑N−1​x(m−n)w(m)eN−j2πmk​=X(k)∗W(k)e−jN2πnk​​(k)If the signal is considered in terms of real and imaginary components, Eq. (31) can be written asX(n,k)=[Xre(k)+jXim(k)]∗W(k)e−jjπnkNX(n, k)=\\left[X_{r e}(k)+j X_{i m}(k)\\right] * \\quad W(k) e^{-j \\frac{j \\pi n k}{N}}X(n,k)=[Xre​(k)+jXim​(k)]∗W(k)e−jNjπnk​$(k)$=[Xre(k)∗W(k)e−j2πnkN+jXim(k)∗W(k)e−j2πnkN(k)(k)]=\\left[\\begin{array}{cc}X_{r e}(k) * W(k) e^{-j \\frac{2 \\pi n k}{N}}+j X_{i m}(k) * W(k) e^{-j \\frac{2 \\pi n k}{N}} \\\\(k) &amp; (k)\\end{array}\\right]=[Xre​(k)∗W(k)e−jN2πnk​+jXim​(k)∗W(k)e−jN2πnk​(k)​(k)​]The complex exponential denoted by $\\left(e^{-j \\frac{2 \\pi n k}{N}}\\right)$ represents the shift of the window in the time domain.  A pre-whitening transform is applied to the input data before generating the time-frequency representation of noisy signals. The output of the pre-whitening filter is a colored version of the signal in additive white noise, as shown in Fig. 8.  After a pre-whitening transform is applied to the input data, de-noising is performed using soft thresholding by adaptive universal threshold estimation. Subsequently, a pre-whitening filter, which alleviates the need to calculate a separate threshold for every scale, is used. The use of a pre-whitening transform produces better results than that of applying level-wise thresholding on the data that was proposed in [51]. The threshold value applied to the time-frequency coefficients estimated by adaptive universal threshold estimation [52] is expressed as:λ=c⋅σv2log⁡(N)\\lambda=c \\cdot \\sigma_v \\sqrt{2 \\log (N)}λ=c⋅σv​2log(N)​where $N$ is the signal length, $\\sigma_v$ is the noise standard deviation estimated for the first voice [53], and $c$ is the adaptive universal threshold factor $0&lt;c&lt;1$. The noise standard deviation for each voice is $\\sigma_v=\\frac{\\operatorname{median}(|X(n, k)|)}{0.6745}$where $X(n, k)$ represents all the coefficients for the first voice [51].The threshold value $\\lambda$ is used to remove noise and recover the original signal efficiently. The adaptive threshold factor $c$ is introduced to enhance the de-noising performance further [54]. The value of $c$ is determined by gradually changing it in increments of 0.1 for each voice to find the best results at the highest SNR.According to Eq. (33), thresholding for both real and imaginary components of the spectrum should be performed in thede-noising process in the frequency domain. Thus, the adaptive universal threshold estimation described in Eq. (34) should include both real and imaginary components. The threshold value is obtained as followsλre=c.σv,re2log⁡(N)λim=c⋅σv,im2log⁡(N)\\begin{aligned}&amp; \\lambda_{r e}=c . \\sigma_{v, r e} \\sqrt{2 \\log (N)} \\\\&amp; \\lambda_{i m}=c \\cdot \\sigma_{v, i m} \\sqrt{2 \\log (N)}\\end{aligned}​λre​=c.σv,re​2log(N)​λim​=c⋅σv,im​2log(N)​​where $\\sigma_{v, k, r e}$ and $\\sigma_{v, k, i m}$ are the noise standard deviations for the real and imaginary components, respectively. The $k$-th noise standard deviations are calculated asσv,re=median⁡(∣Xre(n,k)∣)0.6745σv,im=median⁡(∣Xim(n,k)∣)0.6745\\begin{aligned}\\sigma_{v, r e} &amp; =\\frac{\\operatorname{median}\\left(\\left|X_{r e}(n, k)\\right|\\right)}{0.6745} \\\\\\sigma_{v, i m} &amp; =\\frac{\\operatorname{median}\\left(\\left|X_{i m}(n, k)\\right|\\right)}{0.6745}\\end{aligned}σv,re​σv,im​​=0.6745median(∣Xre​(n,k)∣)​=0.6745median(∣Xim​(n,k)∣)​​After the threshold values $\\lambda_{k, r e}$ and $\\lambda_{k, i m}$ are determined for the real and imaginary components, respectively, the time-frequency representations of the real and imaginary components after hard thresholding areXλ,re(n,k)={Xre(n,k)if∣Xre(n,k)∣&gt;λre0if∣Xre(n,k)∣⩽λreXλ,im(n,k)={Xim(n,k)if∣Xim(n,k)∣&gt;λim0if∣Xim(n,k)∣⩽λim\\begin{aligned}&amp; X_{\\lambda, r e}(n, k)=\\left\\{\\begin{array}{l}X_{r e}(n, k) i f\\left|X_{r e}(n, k)\\right|&gt;\\lambda_{r e} \\\\0 i f\\left|X_{r e}(n, k)\\right| \\leqslant \\lambda_{r e}\\end{array}\\right. \\\\&amp; X_{\\lambda, i m}(n, k)=\\left\\{\\begin{array}{l}X_{i m}(n, k) i f\\left|X_{i m}(n, k)\\right|&gt;\\lambda_{i m} \\\\0 i f\\left|X_{i m}(n, k)\\right| \\leqslant \\lambda_{i m}\\end{array}\\right.\\end{aligned}​Xλ,re​(n,k)={Xre​(n,k)if∣Xre​(n,k)∣&gt;λre​0if∣Xre​(n,k)∣⩽λre​​Xλ,im​(n,k)={Xim​(n,k)if∣Xim​(n,k)∣&gt;λim​0if∣Xim​(n,k)∣⩽λim​​​Alternatively, the time-frequency representations of the real and imaginary components after soft thresholding areXλ,re(n,k)={sgn⁡(Xre(n,k))(∣Xre(n,k)∣−γk,re)if∣Xre(n,k)∣&gt;λre0if∣Xre(n,k)∣⩽λreXλ,im(n,k)={sgn⁡(Xim(n,k))(∣Xim(n,k)∣−γk,im)if∣Xim(n,k)∣&gt;λim0if∣Xim(n,k)∣⩽λim\\begin{aligned}&amp; X_{\\lambda, r e}(n, k)=\\left\\{\\begin{array}{l}\\operatorname{sgn}\\left(X_{r e}(n, k)\\right)\\left(\\left|X_{r e}(n, k)\\right|-\\gamma_{k, r e}\\right) i f\\left|X_{r e}(n, k)\\right|&gt;\\lambda_{r e} \\\\0 i f\\left|X_{r e}(n, k)\\right| \\leqslant \\lambda_{r e}\\end{array}\\right. \\\\&amp; X_{\\lambda, i m}(n, k)=\\left\\{\\begin{array}{l}\\operatorname{sgn}\\left(X_{i m}(n, k)\\right)\\left(\\left|X_{i m}(n, k)\\right|-\\gamma_{k, i m}\\right) i f\\left|X_{i m}(n, k)\\right|&gt;\\lambda_{i m} \\\\0 i f\\left|X_{i m}(n, k)\\right| \\leqslant \\lambda_{i m}\\end{array}\\right.\\end{aligned}​Xλ,re​(n,k)={sgn(Xre​(n,k))(∣Xre​(n,k)∣−γk,re​)if∣Xre​(n,k)∣&gt;λre​0if∣Xre​(n,k)∣⩽λre​​Xλ,im​(n,k)={sgn(Xim​(n,k))(∣Xim​(n,k)∣−γk,im​)if∣Xim​(n,k)∣&gt;λim​0if∣Xim​(n,k)∣⩽λim​​​The time-frequency representation obtained by combining the real and imaginary components isXλ(n,k)=Xλ,re(n,k)+jXλ,im(n,k)X_\\lambda(n, k)=X_{\\lambda, r e}(n, k)+j X_{\\lambda, i m}(n, k)Xλ​(n,k)=Xλ,re​(n,k)+jXλ,im​(n,k)  The de-noised signal $x(n)$ in the time representation can be recovered using the inverse discrete S-transform in Eq. (31). The time-frequency representation of the noisy signal after the de-noising process and inverse whitening filter is shown in Fig. 9.",
            "content_html": "<h2 id=\"abstract\">Abstract</h2><p align=\"justify\">In the present study, the proposed Gaussian noise injectiondetector (GNID) represents a complete detection system. Thisdetector is developed to improve the probability of detection (PD)using a pre-whitening filter, a time–frequency de-noising algorithmbased on S-transform, and an inverse whitening filter. Stransformis used in the de-noising process to overcome the limitationsand poor performance of de-noising using the wavelettransform [25]. The UWAN used for the validation of the systemis sea-truth data, which are collected at the Desaru Beach on theeastern shore of Johor in Malaysia using broadband hydrophones.The performance results of the proposed detector are comparedwith other nonlinear detectors, namely, locally optimal (LO), signcorrelation (SC), and conventional LC.</p><h2 id=\"signal-detection-problem\">Signal detection problem</h2><p>In this section, a known signal is to be detected in an additive noise channel representing a common problem in communication, radar, and sonar systems, that is, where the noise follows a Student’s t-distribution and the noise samples are uncorrelated.2.1. Signal modelThe signals used are single-frequency sinusoidal and linear frequency modulated (LFM) signals. These signals represent the fixed frequency and time-varying signals that can be encountered in practical situations. An arbitrary sinusoidal signal can be defined as follows:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left right left\" columnspacing=\"0em 1em 0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>s</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>A</mi><mi>cos</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mn>0</mn><mo>⩽</mo><mi>n</mi><mo>⩽</mo><mi>N</mi><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>0</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext> elsewhere </mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}s(n) &amp; =A \\cos (\\alpha(n)) &amp; &amp; 0 \\leqslant n \\leqslant N-1 \\\\&amp; =0 &amp; &amp; \\text { elsewhere }\\end{aligned}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.75em;\"><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.25em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.75em;\"><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">))</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.25em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.75em;\"><span style=\"top:-3.75em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.25em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.75em;\"><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\"> elsewhere </span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.25em;\"><span></span></span></span></span></span></span></span></span></span></span>where $N$ is the signal duration in the samples, $A$ is signal amplitude, and $\\alpha(n)$ is the instantaneous phase. For a fixed-frequency signal, the instantaneous phase is defined as<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn><mi>π</mi><msub><mi>f</mi><mi>m</mi></msub><mi>n</mi><msub><mi>T</mi><mi>s</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\alpha(n)=2 \\pi f_m n T_s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>where $f_m$ is signal frequency, and $T_s$ is the sampling period. The instantaneous phase for the LFM signal is<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn><mi>π</mi><mrow><mo fence=\"true\">(</mo><msub><mi>f</mi><mi>m</mi></msub><mo>+</mo><mfrac><mi>φ</mi><mn>2</mn></mfrac><mi>n</mi><msub><mi>T</mi><mi>s</mi></msub><mo fence=\"true\">)</mo></mrow><mi>n</mi><msub><mi>T</mi><mi>s</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\alpha(n)=2 \\pi\\left(f_m+\\frac{\\varphi}{2} n T_s\\right) n T_s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2em;vertical-align:-0.35em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7475em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">φ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>where $\\varphi$ is the frequency defined as $\\varphi=f_{B W} / N T_S$, where $f_{B W}$ is the signal bandwidth.</p><p>Given the combined influences of the internal measurement system and the external environmental factors, measured signals are often contaminated with noise. Thus, the received signal can be defined as follows:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>s</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>v</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x(n)=s(n)+v(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>where $s(n)$ is the signal of interest, and $v(n)$ is the UWAN. The assumption of a Gaussian distribution for UWAN is explained in [26]. However, recent studies have suggested that UWAN follows a t-distribution [27] and a stable alpha distribution [11]. Therefore, the purpose of de-noising is to reduce the degree of corruption on $s(n)$ by $v(n)$</p><p>The main idea of detection is to determine the presence of a signal in the noise. Given an observation vector $x$ and several hypotheses $\\mathrm{H} i$, the aim is to find the data set that matches a hypothesis. Although the number of hypotheses can be arbitrary,the case of having two hypotheses, $\\mathrm{H}_0$ and $\\mathrm{H}_1$, is considered applicable to communication, radar, and sonar systems [8]. If the pdf for each hypothesis is assumed to be completely known, then the hypothesis-testing problem is formulated as follows:$H_0($ Null hypothesis $): y(n)=v(n) n=0,1, \\ldots, N-1$$H_1$ (Alternative hypothesis) : $x(n)=s(n)+v(n) n=0,1, \\ldots, N-1$Neyman-Pearson (NP) and Bayesian methods are primarily used for hypothesis testing. Method selection depends on the availability of prior probability. Although digital communication and pattern recognition systems use the Bayes risk [28], the NP criterion is employed for radar and sonar systems. Furthermore, the derivation of optimal detectors depends on the assumption about the noise [8]. Given that UWAN is frequency dependent [1,29], the assumption of AWGN is invalid, and UWAN is more appropriately modelled as colored noise $[12,13,30]$. The power spectrum of the colored noise is defined as $[31,32]$<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mrow><mi>V</mi><mi>V</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mn>2</mn><mi>π</mi><mi>f</mi></mrow></msup><mo fence=\"true\">)</mo></mrow><mo>=</mo><mfrac><mn>1</mn><msup><mi>f</mi><mi>δ</mi></msup></mfrac><mspace width=\"1em\"/><mi>δ</mi><mo>&gt;</mo><mn>0</mn><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mfrac><mrow><mo>−</mo><msub><mi>f</mi><mi>s</mi></msub></mrow><mn>2</mn></mfrac><mo>⩽</mo><mi>f</mi><mo>⩽</mo><mfrac><msub><mi>f</mi><mi>s</mi></msub><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">S_{V V}\\left(e^{j 2 \\pi f}\\right)=\\frac{1}{f^\\delta} \\quad \\delta&gt;0, \\quad \\frac{-f_s}{2} \\leqslant f \\leqslant \\frac{f_s}{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">VV</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3386em;vertical-align:-0.4935em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.6426em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.782em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03785em;\">δ</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4935em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2772em;vertical-align:-0.345em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9322em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2772em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9322em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>AWGN has a delta autocorrelation function, that is, the adjacent samples are independent and identically distributed. Conversely, $\\frac{1}{f^\\delta}$ noise has a $\\operatorname{sinc}()$ autocorrelation function $[28,31]$. Unlike AWGN, the samples of $\\frac{1}{f^s}$ noise are correlated.</p><h2 id=\"complete-detection-system\">Complete detection system</h2><p>Since the UWAN is colored with a non-Gaussian distribution, the proposed detection system is a GNID, which is shown in Fig. 5. The complete detection system based on the noise models consists of the broadband hydrophone, pre-whitening filter, time-frequency distribution, de-noising method, inverse whitening filter, and detection stage. In this section, the performance of the GNID is compared with three other linear and nonlinear detectors.</p><h3 id=\"signal-detection-in-the-t-distributed-noise-using-gnid\">Signal detection in the t-distributed noise using GNID</h3><p>For non-Gaussian detection, linear and nonlinear detectors demonstrate optimal or at least near-optimal performance. In this study, the performances of four detectors for the detection of a known signal in additive UWAN are compared: LO, SC, and LC detectors, and the proposed GNID.</p><p>In the presence of a Gaussian noise, the LC detector is optimal for detecting a known signal. Many communication systems use this detector as a matched filter. The test statistic for the matched filter is given by [8]<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mi>x</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">T(x)=\\sum_{n=0}^{N-1} x[n] s[n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2809em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9812em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span></span></span></span>where $s(n)$ is the signal to be detected (reference signal) and $x(n)$ denotes the observed data. The expected value $\\left(E\\left{T ; H_i\\right}\\right.$ for $i=0$, 1) and the variance of the test statistic $\\left(\\operatorname{Var}\\left{T ; H_i\\right}\\right.$ for $\\left.i=0,1\\right)$ are $T(x)= \\begin{cases}N\\left(0, v \\operatorname{var}(v) \\cdot E_s\\right) &amp; \\text { under } H_0 \\ N\\left(E_s, \\operatorname{var}(v) \\cdot E_s\\right) &amp; \\text { under } H_1\\end{cases}$where $E_s$ is the energy of the signal, and $\\operatorname{var}(v)$ is the variance of the noise that follows the $t$-distribution defined in Eq. (7). The false alarm probability $\\left(P_{F A}\\right)$ is defined as</p><p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">P</mi><mrow><mi>F</mi><mi>A</mi></mrow></msub><mo>=</mo><mi mathvariant=\"normal\">P</mi><mrow><mo fence=\"true\">(</mo><msub><mi mathvariant=\"normal\">H</mi><mn>1</mn></msub><mo separator=\"true\">;</mo><msub><mi mathvariant=\"normal\">H</mi><mn>0</mn></msub><mo fence=\"true\">)</mo></mrow><mo>=</mo><msub><mi>P</mi><mi>r</mi></msub><mrow><mo fence=\"true\">{</mo><mi>x</mi><mo stretchy=\"false\">[</mo><mn>0</mn><mo stretchy=\"false\">]</mo><mo>&gt;</mo><mi>γ</mi><mo separator=\"true\">;</mo><msub><mi>H</mi><mn>0</mn></msub><mo fence=\"true\">}</mo></mrow><mo>=</mo><mi>Q</mi><mrow><mo fence=\"true\">(</mo><mfrac><mi>γ</mi><msup><mrow><mo fence=\"true\">(</mo><mi mathvariant=\"normal\">var</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><msub><mi>E</mi><mi>s</mi></msub><mo fence=\"true\">)</mo></mrow><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow></msup></mfrac><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathrm{P}_{F A}=\\mathrm{P}\\left(\\mathrm{H}_1 ; \\mathrm{H}_0\\right)=P_r\\left\\{x[0]&gt;\\gamma ; H_0\\right\\}=Q\\left(\\frac{\\gamma}{\\left(\\operatorname{var}(v) \\cdot E_s\\right)^{1 / 2}}\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathrm\">P</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7475em;\"><span style=\"top:-2.537em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"minner mtight\"><span class=\"minner mtight\"><span class=\"mopen mtight delimcenter\" style=\"top:0em;\"><span class=\"mtight\">(</span></span><span class=\"mop mtight\"><span class=\"mord mathrm mtight\">var</span></span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose mtight\">)</span><span class=\"mbin mtight\">⋅</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight delimcenter\" style=\"top:0em;\"><span class=\"mtight\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9329em;\"><span style=\"top:-2.9329em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5357em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1/2</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05556em;\">γ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.638em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span></span></span></span>where $\\gamma$ is the threshold value for a given $P_{F A}$, and this threshold value is determined using<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi><mo>=</mo><msup><mi>Q</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mrow><mo fence=\"true\">(</mo><msub><mi>P</mi><mrow><mi>F</mi><mi>A</mi></mrow></msub><mo fence=\"true\">)</mo></mrow><mo>⋅</mo><msup><mrow><mo fence=\"true\">(</mo><mi mathvariant=\"normal\">var</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><msub><mi>E</mi><mi>s</mi></msub><mo fence=\"true\">)</mo></mrow><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\gamma=Q^{-1}\\left(P_{F A}\\right) \\cdot\\left(\\operatorname{var}(v) \\cdot E_s\\right)^{1 / 2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2779em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mop\"><span class=\"mord mathrm\">var</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0279em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1/2</span></span></span></span></span></span></span></span></span></span></span></span>The $P_D$ is defined as<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mi>D</mi></msub><mo>=</mo><mi>P</mi><mrow><mo fence=\"true\">(</mo><msub><mi>H</mi><mn>1</mn></msub><mo separator=\"true\">;</mo><msub><mi>H</mi><mn>1</mn></msub><mo fence=\"true\">)</mo></mrow><mo>=</mo><msub><mi>P</mi><mi>r</mi></msub><mrow><mo fence=\"true\">{</mo><mi>x</mi><mo stretchy=\"false\">[</mo><mn>0</mn><mo stretchy=\"false\">]</mo><mo>&gt;</mo><mi>γ</mi><mo separator=\"true\">;</mo><msub><mi>H</mi><mn>1</mn></msub><mo fence=\"true\">}</mo></mrow><mo>=</mo><mi>Q</mi><mrow><mo fence=\"true\">(</mo><mfrac><mrow><mi>γ</mi><mo>−</mo><msub><mi>E</mi><mi>s</mi></msub></mrow><msup><mrow><mo fence=\"true\">(</mo><mi>v</mi><mi mathvariant=\"normal\">var</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><msub><mi>E</mi><mi>s</mi></msub><mo fence=\"true\">)</mo></mrow><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow></msup></mfrac><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">P_D=P\\left(H_1 ; H_1\\right)=P_r\\left\\{x[0]&gt;\\gamma ; H_1\\right\\}=Q\\left(\\frac{\\gamma-E_s}{\\left(v \\operatorname{var}(v) \\cdot E_s\\right)^{1 / 2}}\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9244em;\"><span style=\"top:-2.537em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"minner mtight\"><span class=\"minner mtight\"><span class=\"mopen mtight delimcenter\" style=\"top:0em;\"><span class=\"mtight\">(</span></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace mtight\" style=\"margin-right:0.1952em;\"></span><span class=\"mop mtight\"><span class=\"mord mathrm mtight\">var</span></span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose mtight\">)</span><span class=\"mbin mtight\">⋅</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight delimcenter\" style=\"top:0em;\"><span class=\"mtight\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9329em;\"><span style=\"top:-2.9329em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5357em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1/2</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.638em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span></span></span></span>By using Eqs. (9) and (11) in Eq. (12), we obtain the following equation [8]:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mi>D</mi></msub><mo>=</mo><mi>Q</mi><mrow><mo fence=\"true\">[</mo><msup><mi>Q</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mrow><mo fence=\"true\">(</mo><msub><mi>P</mi><mrow><mi>F</mi><mi>A</mi></mrow></msub><mo fence=\"true\">)</mo></mrow><mo>−</mo><msqrt><mfrac><msub><mi>E</mi><mi>S</mi></msub><mrow><mi mathvariant=\"normal\">var</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></msqrt><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">P_D=Q\\left[Q^{-1}\\left(P_{F A}\\right)-\\sqrt{\\frac{E_S}{\\operatorname{var}(v)}}\\right]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.84em;vertical-align:-0.6707em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1693em;\"><span class=\"svg-align\" style=\"top:-3.8em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8886em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mord mathrm mtight\">var</span></span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4103em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567em;margin-left:-0.0576em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1433em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.1293em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.88em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.88em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6707em;\"><span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span></span></span></span>As mentioned in the previous section, the LC detector shows performance degradation in the presence of non-Gaussian noise. Furthermore, nonlinear detectors have several limitations when used for non-Gaussian detection. For example, the LO detector is used for the detection of weak signals by introducing a nonlinear transfer function before a standard LC detector. The test statistic for the LO detector is given by [8-11]<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mi>g</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">T(x)=\\sum_{n=0}^{N-1} g(x[n]) s[n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2809em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9812em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">])</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span></span></span></span>where $g(x[n])$ is the nonlinear transfer function that can be determined from the noise pdf:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mrow><mi>ρ</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mfrac><mrow><mi>d</mi><mi>ρ</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>d</mi><mi>x</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">g(x)=-\\frac{1}{\\rho(x)} \\frac{d \\rho(x)}{d x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.53em;vertical-align:-0.52em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ρ</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\">x</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\">ρ</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>where $\\rho(x)$ is the pdf for a $t$-distribution defined in Eq. (7).Another nonlinear detector is the SC detector, which is a nonparametric detector designed without predetermining the exact distribution of noise. Although the aforementioned feature of the SC detector can be considered advantageous, a negative effect on the performance may result from the lack of detailed information on noise distribution. The test statistic for the SC detector is as follows<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mi mathvariant=\"normal\">sgn</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">T(x)=\\sum_{n=0}^{N-1} \\operatorname{sgn}(x[n]) s[n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2809em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9812em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">sgn</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">])</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span></span></span></span>In this paper, we propose a GNID based on a noise-enhanced signal detection [14] using an S-transform de-noising method and prewhitening filter to ensure that the noise follows a Gaussian distri-bution and overcome the limitations of nonlinear detectors exclusively used for non-Gaussian detection. The basic idea of this proposed method is to insert a Gaussian noise to the UWAN that follows a t-distribution and convert that UWAN into a noise following a Gaussian distribution, which has a lighter tail than a t-distribution [15]. Given that the noise power has increased because of the insertion process, a de-noising algorithm using the S-transform is required before performing matched-filter detection, as shown in Fig. 5.</p><p>The sum of two independent random variables $X$ and $Y$, whose pdfs are $\\rho_X(x)$ and $\\rho_Y(y)$, respectively, produces a random variable $Z$ whose pdf $\\rho_Z(z)$ is<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ρ</mi><mi>Z</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>ρ</mi><mi>X</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><msub><mi>ρ</mi><mi>Y</mi></msub><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><msub><mi>ρ</mi><mi>Y</mi></msub><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo><msub><mi>ρ</mi><mi>X</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo>−</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">\\rho_Z(z)=\\rho_X(x) * \\rho_Y(y)=\\int_{-\\infty}^{\\infty} \\rho_Y(y) \\rho_X(z-x) d y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ρ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">Z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ρ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ρ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2734em;vertical-align:-0.4142em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8593em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.2579em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4142em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ρ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">ρ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>The expression in Eq. (17), is a convolution integral. The distribution of the sum of two independent Gaussian and Student’s $t$ (for three degrees of freedom) spherical random variables was studied in [15]. Two random variables $X$ and $Y$ are considered. $X$ is a Gaussian random variable with mean $\\bar{X}$, variance $\\sigma_v^2$, and pdf $\\rho_X(x) ; Y$ is a $t$-distributed random variable with $v$-degrees of freedom, mean $\\mu_v$, variance $\\operatorname{var}(v)$, and pdf $\\rho_y(y)$ [15]. The pdf for the sum of the random variables is [35]<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>Z</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">Γ</mi><mrow><mo fence=\"true\">(</mo><mfrac><mrow><mi>d</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo fence=\"true\">)</mo></mrow></mrow><mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt><msub><mi>σ</mi><mi>v</mi></msub><mi mathvariant=\"normal\">Γ</mi><mrow><mo fence=\"true\">(</mo><mfrac><mi>d</mi><mn>2</mn></mfrac><mo fence=\"true\">)</mo></mrow></mrow></mfrac><mo>⋅</mo><mi mathvariant=\"normal\">Ψ</mi><mrow><mo fence=\"true\">(</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo separator=\"true\">,</mo><mn>1</mn><mo>−</mo><mfrac><mi>d</mi><mn>2</mn></mfrac><mo separator=\"true\">;</mo><mfrac><mi>d</mi><mrow><mn>2</mn><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup></mrow></mfrac><mo fence=\"true\">)</mo></mrow><mo>⋅</mo><msup><mi>e</mi><mrow><mo>−</mo><mfrac><msup><mi>z</mi><mn>2</mn></msup><mrow><mn>2</mn><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup></mrow></mfrac></mrow></msup></mrow><annotation encoding=\"application/x-tex\">f_Z(z)=\\frac{\\Gamma\\left(\\frac{d+1}{2}\\right)}{\\sqrt{2 \\pi} \\sigma_v \\Gamma\\left(\\frac{d}{2}\\right)} \\cdot \\Psi\\left(\\frac{1}{2}, 1-\\frac{d}{2} ; \\frac{d}{2 \\sigma_v^2}\\right) \\cdot e^{-\\frac{z^2}{2 \\sigma_v^2}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">Z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.12em;vertical-align:-0.81em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.31em;\"><span style=\"top:-2.4925em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord sqrt mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9128em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mtight\" style=\"padding-left:0.833em;\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-2.8728em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail mtight\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1272em;\"><span></span></span></span></span></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mord mtight\">Γ</span><span class=\"minner mtight\"><span class=\"mopen sizing reset-size3 size6 mtight delimcenter\" style=\"top:0.075em;\"><span class=\"mtight\">(</span></span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.88em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose sizing reset-size3 size6 mtight delimcenter\" style=\"top:0.075em;\"><span class=\"mtight\">)</span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.6125em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">Γ</span><span class=\"minner mtight\"><span class=\"mopen sizing reset-size3 size6 mtight delimcenter\" style=\"top:0.075em;\"><span class=\"mtight\">(</span></span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.88em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose sizing reset-size3 size6 mtight delimcenter\" style=\"top:0.075em;\"><span class=\"mtight\">)</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.81em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"mord\">Ψ</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.214em;margin-left:-0.0359em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5452em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4464em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4464em;\"><span style=\"top:-3.6534em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1329em;\"><span style=\"top:-2.5062em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9384em;\"><span style=\"top:-2.2444em;margin-left:-0.0359em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span><span style=\"top:-2.9384em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0484em;\"><span style=\"top:-3.0484em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7795em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span>where $|z| \\leqslant \\infty, v&gt;0$, and $\\sigma_v&gt;0 ; \\Psi($.$) denotes the Kummer’s$ hypergeometric function. By substituting $v=1$ and using the relationship between Kummer’s hypergeometric function and the complementary error function [36], the following equation is obtained: $\\operatorname{erfc}(x)=\\frac{1}{\\sqrt{\\pi}} \\cdot e^{-x^2} \\cdot \\Psi\\left(\\frac{1}{2}, \\frac{1}{2} ; x^2\\right)$</p><p>Subsequently, Eq. (19) is substituted into Eq. (18) to obtain<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>z</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt><msub><mi>σ</mi><mi>v</mi></msub></mrow></mfrac><mo>⋅</mo><msup><mi>e</mi><mfrac><mn>1</mn><mrow><mn>2</mn><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup></mrow></mfrac></msup><mo>⋅</mo><mi mathvariant=\"normal\">erfc</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mfrac><mn>1</mn><mrow><msqrt><mn>2</mn></msqrt><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup></mrow></mfrac><mo fence=\"true\">)</mo></mrow><mo>⋅</mo><msup><mi>e</mi><mrow><mo>−</mo><mfrac><msup><mi>z</mi><mn>2</mn></msup><mrow><mn>2</mn><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup></mrow></mfrac></mrow></msup></mrow><annotation encoding=\"application/x-tex\">f_z(z)=\\frac{1}{\\sqrt{2 \\pi} \\sigma_v} \\cdot e^{\\frac{1}{2 \\sigma_v^2}} \\cdot \\operatorname{erfc}\\left(\\frac{1}{\\sqrt{2} \\sigma_v^2}\\right) \\cdot e^{-\\frac{z^2}{2 \\sigma_v^2}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3942em;vertical-align:-0.5491em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.551em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord sqrt mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9128em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mtight\" style=\"padding-left:0.833em;\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-2.8728em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail mtight\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1272em;\"><span></span></span></span></span></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5491em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2444em;\"><span style=\"top:-3.6534em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8443em;\"><span style=\"top:-2.5062em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9384em;\"><span style=\"top:-2.2444em;margin-left:-0.0359em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span><span style=\"top:-2.9384em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7795em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">erfc</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.551em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord sqrt mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9128em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mtight\" style=\"padding-left:0.833em;\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-2.8728em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail mtight\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1272em;\"><span></span></span></span></span></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.214em;margin-left:-0.0359em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6492em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4464em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4464em;\"><span style=\"top:-3.6534em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1329em;\"><span style=\"top:-2.5062em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9384em;\"><span style=\"top:-2.2444em;margin-left:-0.0359em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span><span style=\"top:-2.9384em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0484em;\"><span style=\"top:-3.0484em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7795em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span>Eq. (20) shows that the function approaches a Gaussian distribution as the variance or the degrees of freedom increases. A normality test, such as the Lilliefors test, is performed to determine if the pdf of the sum of the random variables is approximately Gaussian [37,38]. If the degree of freedom is greater than 1, the pdf in Eq. (20) is approximately Gaussian. The threshold derived from the $P_{F A}$ can be calculated by Eq. (11). The $P_D$ can be calculated by the threshold defined in Eq. (13).</p><p>!<span title=\"There is no note that matches this link.\" class=\"invalid-link\">  <span class=\"invalid-link-brackets\">[[</span>  gnid.png  <span class=\"invalid-link-brackets\">]]</span></span></p><h3 id=\"whitening-process-and-inverse-whitening-filter\">Whitening process and inverse whitening filter</h3><p>The colored noise can be transformed into white by passing into a linear time invariant (LTI) whitening filter $[28,39]$. The prediction error filter (PEF) with transfer function $H_p(z)$ is used for this purpose $[32,40]$. The output of the PEF is used as the difference between the estimate of the linear predictor and the actual sequence. The transfer function of the PEF can be expressed as<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>H</mi><mi>p</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><msup><mi>z</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><msup><mi>z</mi><mrow><mo>−</mo><mn>2</mn></mrow></msup><mo>+</mo><mo>…</mo><mo>+</mo><msub><mi>a</mi><mi>p</mi></msub><msup><mi>z</mi><mrow><mo>−</mo><mi>p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">H_p(z)=1+a_1 z^{-1}+a_2 z^{-2}+\\ldots+a_p z^{-p}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9641em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9641em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0574em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span>where $\\mathrm{p}$ is the length of the forward predictor filter, and $a_p(n)$ is the filter coefficients and depends on the UWAN data recording. If the order $p$ of the PEF is sufficiently large, then the forward prediction error is orthogonal with constant variance; thus, the output of filter is similar to AWGN [32]. Selecting the model order to use for the pre-whitening and the inverse pre-whitening filters is done using several standard order selection techniques. These methods include Akaike’s information criterion (AIC), Rissanen’s minimum description length, and maximum a posteriori probability [32,41,42]. The AIC provides a distinct minimum at the optimum model order $P$and is the criteria selected for deciding the pre-whitening filter model order in this study.</p><p>The output of the PEF is referred to as $x_w(n)$ and represents the convolution process between the input noisy signal $x(n)$ and the impulse response of the whitening filter $h_w(n)$. Thus, the resulting PEF is the transform of the signal with the AWGN, which is expressed as follows<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>w</mi></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><msub><mi>h</mi><mi>w</mi></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>s</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><msub><mi>h</mi><mi>w</mi></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>v</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><msub><mi>h</mi><mi>w</mi></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x_w(n)=x(n) * h_w(n)=s(n) * h_w(n)+v(n) * h_w(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p><p>After the filter coefficients are determined, the de-noising process minimizes the noise term $v(n) * h_w(n)$ to produce a clean estimate of the transform signal, which can be obtained as follows<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mover accent=\"true\"><mi>s</mi><mo>^</mo></mover><mi>w</mi></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>s</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><msub><mi>h</mi><mi>w</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\hat{s}_w(n)=s(n) * h_w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">s</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>The original signal $s(n)$ can be recovered with an inverse whitening filter [43] with impulse response $h_{I W F}(n)$ and transfer function $1 / H_p(z)$. The estimate of the original signal is</p><p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>s</mi><mo>^</mo></mover><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mover accent=\"true\"><mi>s</mi><mo>^</mo></mover><mi>w</mi></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><msub><mi>h</mi><mrow><mi>I</mi><mi>W</mi><mi>F</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>s</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><msub><mi>h</mi><mi>w</mi></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><msub><mi>h</mi><mrow><mi>I</mi><mi>W</mi><mi>F</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hat{s}(n)=\\hat{s}_w(n) * h_{I W F}(n)=s(n) * h_w(n) * h_{I W F}(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">s</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">s</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>In the z-domain, the estimation of the original signal can be expressed as<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>S</mi><mo>^</mo></mover><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>S</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><msub><mi>H</mi><mi>P</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mfrac><mn>1</mn><mrow><msub><mi>H</mi><mi>P</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo>=</mo><mi>S</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hat{S}(z)=S(z) \\cdot H_P(z) \\cdot \\frac{1}{H_P(z)}=S(z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1968em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9468em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span><span style=\"top:-3.2523em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3651em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567em;margin-left:-0.0813em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1433em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span></span></span></span></p><h3 id=\"time-frequency-de-noising-process-based-on-the-s-transform\">Time-frequency de-noising process based on the S-transform</h3><p>The S-transform is used for the signal transformation in the denoising process, as shown in Fig. 6. S-transform can be considered a special case of the short-time Fourier transform); the window function is replaced with a frequency-dependent Gaussian window $[44,45]$. The Gaussian window width is inversely proportional to the frequency, and its height is scaled linearly with the frequency. Given this window scaling behaviour, the S-transform possesses a good time resolution for high-frequency components and a good frequency resolution for low-frequency components. Thus, the S-transform is suitable to use for signal de-noising in underwater applications because the underwater acoustic signals are mostly in the $0-2500 \\mathrm{~Hz}$ frequency band that represents low-frequency signals [46]. The S-transform can be expressed as [44]<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>x</mi><mo stretchy=\"false\">(</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>τ</mi><mo>−</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>f</mi><mi>τ</mi></mrow></msup><mi>d</mi><mi>τ</mi></mrow><annotation encoding=\"application/x-tex\">X(t, f)=\\int_{-\\infty}^{\\infty} x(\\tau) \\cdot g(\\tau-t, f) \\cdot e^{-j 2 \\pi f \\tau} d \\tau</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2734em;vertical-align:-0.4142em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8593em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.2579em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4142em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8491em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.1132em;\">τ</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span></span></span></span>where $x(t)$ is the signal, and $g(t, f)$ is the frequency-dependent Gaussian window, which is expressed as follows [44]:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">∣</mi><mi>f</mi><mi mathvariant=\"normal\">∣</mi></mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt></mfrac><msup><mi>e</mi><mrow><mo fence=\"true\">(</mo><mfrac><mrow><msup><mi>t</mi><mn>2</mn></msup><msup><mi>f</mi><mn>2</mn></msup></mrow><mn>2</mn></mfrac><mo fence=\"true\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">g(t, f)=\\frac{|f|}{\\sqrt{2 \\pi}} e^{\\left(\\frac{t^2 f^2}{2}\\right)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4458em;vertical-align:-0.538em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.551em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord sqrt mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9128em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mtight\" style=\"padding-left:0.833em;\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-2.8728em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail mtight\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1272em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mtight\">∣</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.538em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.9078em;\"><span style=\"top:-3.9078em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3.0975em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"minner mtight\"><span class=\"mopen sizing reset-size3 size6 mtight delimcenter\" style=\"top:0.075em;\"><span class=\"delimsizing size2 mtight\"><span class=\"mtight\">(</span></span></span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2113em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.4624em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0484em;\"><span style=\"top:-3.0484em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0484em;\"><span style=\"top:-3.0484em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose sizing reset-size3 size6 mtight delimcenter\" style=\"top:0.075em;\"><span class=\"delimsizing size2 mtight\"><span class=\"mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>The presence of the variable $f$ renders the frequency-dependent window spread. Given that $X(t, f)$ is a complex value, the modulus $|X(t, f)|$ is usually plotted in practice to construct a time-frequency representation. The S-transform represents the local spectrum; thus, averaging the local spectrum over time generates the Fourier spectrum, which can be expressed as follows [44]:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>X</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>t</mi><mo>=</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\int_{-\\infty}^{\\infty} X(t, f) d t=X(f)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2734em;vertical-align:-0.4142em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8593em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.2579em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4142em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span></span></span></span>The signal in time representation $x(t)$ is exactly recoverable from $X(t, f)$ based on the following expression $[44,47]$ :<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mrow><mo fence=\"true\">{</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>X</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>t</mi><mo fence=\"true\">}</mo></mrow><msup><mi>e</mi><mrow><mi>j</mi><mn>2</mn><mi>π</mi><mi>f</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">x(t)=\\int_{-\\infty}^{\\infty}\\left\\{\\int_{-\\infty}^{\\infty} X(t, f) d t\\right\\} e^{j 2 \\pi f t} d f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2734em;vertical-align:-0.4142em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8593em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.2579em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4142em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">{</span></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8593em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.2579em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4142em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">}</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">df</span></span></span></span>In this study, de-noising is performed in the time-frequency representation, and the signal is recovered from the noise using Eq. (29).The discrete S-transform is used in this study to allow the processing in the continuous S-transform. Let $x(n), n=0,1, \\ldots(N-1)$ denote a discrete time series corresponding to $x(t)$ with a time sampling interval of $T_s$. The S-transform of the discrete time series $x(n)$ is expressed as:</p><p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mi>x</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mi>n</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mfrac><mrow><mo>−</mo><mn>2</mn><msup><mi>π</mi><mn>2</mn></msup><msup><mi>m</mi><mn>2</mn></msup></mrow><msup><mi>k</mi><mn>2</mn></msup></mfrac></msup><msup><mi>e</mi><mfrac><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>m</mi><mi>k</mi></mrow><mi>N</mi></mfrac></msup></mrow><annotation encoding=\"application/x-tex\">X(n, k)=\\sum_{m=0}^{N-1} x(m-n) e^{\\frac{-2 \\pi^2 m^2}{k^2}} e^{\\frac{-j 2 \\pi m k}{N}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2809em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9812em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4964em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2464em;\"><span style=\"top:-3.4534em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1329em;\"><span style=\"top:-2.5062em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9384em;\"><span style=\"top:-2.9384em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0484em;\"><span style=\"top:-3.0484em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0484em;\"><span style=\"top:-3.0484em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4938em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0339em;\"><span style=\"top:-3.363em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9584em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.4624em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">πmk</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span>The inverse of the discrete S-transform is expressed as follows [48]: $x(n)=\\frac{1}{N} \\sum_{k=0}^{N-1}\\left{\\sum_{n=0}^{N-1} X(n, k)\\right} e^{\\frac{i 2 \\pi n k}{N}}$</p><p>In this study, a de-noising method based on a time-frequency analysis is proposed, with the S-transform used as an alternative to the wavelet transform. A key feature of the S-transform is its capacity to uniquely combine a frequency-dependent resolution with the simultaneously localizing real and imaginary spectra [49]. In contrast</p><p>to the wavelet approach, the S-transform provides a frequency invariant amplitude response. Moreover, the S-transform uses a time-frequency axis rather than a time-scale axis, which is used in the wavelet transform. Therefore, the interpretation of the frequency information in the S-transform is more straightforward than that in the wavelet approach. Furthermore, the use of the S-transform is beneficial to the removal of noises for all frequency components [50].The de-noising process using the S-transform is described as follows:</p><ol>  <li>A discrete S-transform using Eq. (30) is applied to noisy signals (signals that are corrupted by UWAN and defined in Eqs. (1-4)), as shown in Fig. 7. Based on the properties of the discrete Fourier transform and convolution theorem, the S-transform in Eq. (30) can be considered a convolution process in the frequency domain between the signal $X(k)$ and the localizing scalable Gaussian window ( $k$. The S-transform can be expressed as<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>X</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>x</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mi>n</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mfrac><mrow><mo>−</mo><mn>2</mn><msup><mi>π</mi><mn>2</mn></msup><msup><mi>m</mi><mn>2</mn></msup></mrow><msup><mi>k</mi><mn>2</mn></msup></mfrac></msup><msup><mi>e</mi><mfrac><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>m</mi><mi>k</mi></mrow><mi>N</mi></mfrac></msup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>x</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mi>w</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mfrac><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>m</mi><mi>k</mi></mrow><mi>N</mi></mfrac></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>W</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi><mi>n</mi><mi>k</mi></mrow><mi>N</mi></mfrac></mrow></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}X(n, k) &amp; =\\sum_{m=0}^{N-1} x(m-n) e^{\\frac{-2 \\pi^2 m^2}{k^2}} e^{\\frac{-j 2 \\pi m k}{N}}=\\sum_{m=0}^{N-1} x(m-n) w(m) e^{\\frac{-j 2 \\pi m k}{N}} \\\\&amp; =X(k) * W(k) e^{-j \\frac{2 \\pi n k}{N}}\\end{aligned}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.0845em;vertical-align:-2.2922em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7922em;\"><span style=\"top:-4.7922em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.1961em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.2922em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7922em;\"><span style=\"top:-4.7922em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8829em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2671em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2464em;\"><span style=\"top:-3.4534em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1329em;\"><span style=\"top:-2.5062em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9384em;\"><span style=\"top:-2.9384em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0484em;\"><span style=\"top:-3.0484em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0484em;\"><span style=\"top:-3.0484em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4938em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0839em;\"><span style=\"top:-3.413em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9584em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.4624em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">πmk</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8829em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2671em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0839em;\"><span style=\"top:-3.413em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9584em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.4624em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">πmk</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.1961em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.029em;\"><span style=\"top:-3.413em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.88em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">πnk</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.2922em;\"><span></span></span></span></span></span></span></span></span></span></span>(k)If the signal is considered in terms of real and imaginary components, Eq. (31) can be written as<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">[</mo><msub><mi>X</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>j</mi><msub><mi>X</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow><mo>∗</mo><mspace width=\"1em\"/><mi>W</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mfrac><mrow><mi>j</mi><mi>π</mi><mi>n</mi><mi>k</mi></mrow><mi>N</mi></mfrac></mrow></msup></mrow><annotation encoding=\"application/x-tex\">X(n, k)=\\left[X_{r e}(k)+j X_{i m}(k)\\right] * \\quad W(k) e^{-j \\frac{j \\pi n k}{N}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2839em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0339em;\"><span style=\"top:-3.363em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9584em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.4624em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">jπnk</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span>$(k)$<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>X</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>W</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi><mi>n</mi><mi>k</mi></mrow><mi>N</mi></mfrac></mrow></msup><mo>+</mo><mi>j</mi><msub><mi>X</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>W</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi><mi>n</mi><mi>k</mi></mrow><mi>N</mi></mfrac></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">=\\left[\\begin{array}{cc}X_{r e}(k) * W(k) e^{-j \\frac{2 \\pi n k}{N}}+j X_{i m}(k) * W(k) e^{-j \\frac{2 \\pi n k}{N}} \\\\(k) &amp; (k)\\end{array}\\right]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.539em;vertical-align:-1.0195em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5195em;\"><span style=\"top:-3.5405em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.979em;\"><span style=\"top:-3.363em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.88em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">πnk</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.979em;\"><span style=\"top:-3.363em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.88em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">πnk</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.3405em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0195em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1805em;\"><span style=\"top:-2.3405em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0195em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span></span></span>The complex exponential denoted by $\\left(e^{-j \\frac{2 \\pi n k}{N}}\\right)$ represents the shift of the window in the time domain.</li>  <li>A pre-whitening transform is applied to the input data before generating the time-frequency representation of noisy signals. The output of the pre-whitening filter is a colored version of the signal in additive white noise, as shown in Fig. 8.</li>  <li>After a pre-whitening transform is applied to the input data, de-noising is performed using soft thresholding by adaptive universal threshold estimation. Subsequently, a pre-whitening filter, which alleviates the need to calculate a separate threshold for every scale, is used. The use of a pre-whitening transform produces better results than that of applying level-wise thresholding on the data that was proposed in [51]. The threshold value applied to the time-frequency coefficients estimated by adaptive universal threshold estimation [52] is expressed as:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi><mo>=</mo><mi>c</mi><mo>⋅</mo><msub><mi>σ</mi><mi>v</mi></msub><msqrt><mrow><mn>2</mn><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">\\lambda=c \\cdot \\sigma_v \\sqrt{2 \\log (N)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4445em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.305em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.935em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.895em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.305em;\"><span></span></span></span></span></span></span></span></span>where $N$ is the signal length, $\\sigma_v$ is the noise standard deviation estimated for the first voice [53], and $c$ is the adaptive universal threshold factor $0&lt;c&lt;1$. The noise standard deviation for each voice is $\\sigma_v=\\frac{\\operatorname{median}(|X(n, k)|)}{0.6745}$where $X(n, k)$ represents all the coefficients for the first voice [51].The threshold value $\\lambda$ is used to remove noise and recover the original signal efficiently. The adaptive threshold factor $c$ is introduced to enhance the de-noising performance further [54]. The value of $c$ is determined by gradually changing it in increments of 0.1 for each voice to find the best results at the highest SNR.According to Eq. (33), thresholding for both real and imaginary components of the spectrum should be performed in the</li></ol><p>de-noising process in the frequency domain. Thus, the adaptive universal threshold estimation described in Eq. (34) should include both real and imaginary components. The threshold value is obtained as follows<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>λ</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub><mo>=</mo><mi>c</mi><mi mathvariant=\"normal\">.</mi><msub><mi>σ</mi><mrow><mi>v</mi><mo separator=\"true\">,</mo><mi>r</mi><mi>e</mi></mrow></msub><msqrt><mrow><mn>2</mn><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow></msqrt></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>λ</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub><mo>=</mo><mi>c</mi><mo>⋅</mo><msub><mi>σ</mi><mrow><mi>v</mi><mo separator=\"true\">,</mo><mi>i</mi><mi>m</mi></mrow></msub><msqrt><mrow><mn>2</mn><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow></msqrt></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}&amp; \\lambda_{r e}=c . \\sigma_{v, r e} \\sqrt{2 \\log (N)} \\\\&amp; \\lambda_{i m}=c \\cdot \\sigma_{v, i m} \\sqrt{2 \\log (N)}\\end{aligned}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.2878em;vertical-align:-1.3939em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8939em;\"><span style=\"top:-3.8939em;\"><span class=\"pstrut\" style=\"height:2.9839em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:2.9839em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3939em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8939em;\"><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9839em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.9439em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2561em;\"><span></span></span></span></span></span></span></span><span style=\"top:-2.2661em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9839em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.9439em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2561em;\"><span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3939em;\"><span></span></span></span></span></span></span></span></span></span></span>where $\\sigma_{v, k, r e}$ and $\\sigma_{v, k, i m}$ are the noise standard deviations for the real and imaginary components, respectively. The $k$-th noise standard deviations are calculated as<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msub><mi>σ</mi><mrow><mi>v</mi><mo separator=\"true\">,</mo><mi>r</mi><mi>e</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">median</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mrow><mo fence=\"true\">∣</mo><msub><mi>X</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow><mo fence=\"true\">)</mo></mrow></mrow><mn>0.6745</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msub><mi>σ</mi><mrow><mi>v</mi><mo separator=\"true\">,</mo><mi>i</mi><mi>m</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">median</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mrow><mo fence=\"true\">∣</mo><msub><mi>X</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow><mo fence=\"true\">)</mo></mrow></mrow><mn>0.6745</mn></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\\sigma_{v, r e} &amp; =\\frac{\\operatorname{median}\\left(\\left|X_{r e}(n, k)\\right|\\right)}{0.6745} \\\\\\sigma_{v, i m} &amp; =\\frac{\\operatorname{median}\\left(\\left|X_{i m}(n, k)\\right|\\right)}{0.6745}\\end{aligned}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.826em;vertical-align:-2.163em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.663em;\"><span style=\"top:-4.663em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.163em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.663em;\"><span style=\"top:-4.663em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0.6745</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mord mathrm\">median</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0.6745</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mord mathrm\">median</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.163em;\"><span></span></span></span></span></span></span></span></span></span></span>After the threshold values $\\lambda_{k, r e}$ and $\\lambda_{k, i m}$ are determined for the real and imaginary components, respectively, the time-frequency representations of the real and imaginary components after hard thresholding are<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>X</mi><mrow><mi>λ</mi><mo separator=\"true\">,</mo><mi>r</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>X</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mi>i</mi><mi>f</mi><mrow><mo fence=\"true\">∣</mo><msub><mi>X</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow><mo>&gt;</mo><msub><mi>λ</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>0</mn><mi>i</mi><mi>f</mi><mrow><mo fence=\"true\">∣</mo><msub><mi>X</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow><mo>⩽</mo><msub><mi>λ</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>X</mi><mrow><mi>λ</mi><mo separator=\"true\">,</mo><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>X</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mi>i</mi><mi>f</mi><mrow><mo fence=\"true\">∣</mo><msub><mi>X</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow><mo>&gt;</mo><msub><mi>λ</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>0</mn><mi>i</mi><mi>f</mi><mrow><mo fence=\"true\">∣</mo><msub><mi>X</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow><mo>⩽</mo><msub><mi>λ</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}&amp; X_{\\lambda, r e}(n, k)=\\left\\{\\begin{array}{l}X_{r e}(n, k) i f\\left|X_{r e}(n, k)\\right|&gt;\\lambda_{r e} \\\\0 i f\\left|X_{r e}(n, k)\\right| \\leqslant \\lambda_{r e}\\end{array}\\right. \\\\&amp; X_{\\lambda, i m}(n, k)=\\left\\{\\begin{array}{l}X_{i m}(n, k) i f\\left|X_{i m}(n, k)\\right|&gt;\\lambda_{i m} \\\\0 i f\\left|X_{i m}(n, k)\\right| \\leqslant \\lambda_{i m}\\end{array}\\right.\\end{aligned}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.4001em;vertical-align:-2.45em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.95em;\"><span style=\"top:-4.95em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.45em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.95em;\"><span style=\"top:-4.95em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">λ</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">λ</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.45em;\"><span></span></span></span></span></span></span></span></span></span></span>Alternatively, the time-frequency representations of the real and imaginary components after soft thresholding are<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>X</mi><mrow><mi>λ</mi><mo separator=\"true\">,</mo><mi>r</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">sgn</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi>X</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo></mrow><mrow><mo fence=\"true\">(</mo><mrow><mo fence=\"true\">∣</mo><msub><mi>X</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow><mo>−</mo><msub><mi>γ</mi><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>r</mi><mi>e</mi></mrow></msub><mo fence=\"true\">)</mo></mrow><mi>i</mi><mi>f</mi><mrow><mo fence=\"true\">∣</mo><msub><mi>X</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow><mo>&gt;</mo><msub><mi>λ</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>0</mn><mi>i</mi><mi>f</mi><mrow><mo fence=\"true\">∣</mo><msub><mi>X</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow><mo>⩽</mo><msub><mi>λ</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>X</mi><mrow><mi>λ</mi><mo separator=\"true\">,</mo><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">sgn</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi>X</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo></mrow><mrow><mo fence=\"true\">(</mo><mrow><mo fence=\"true\">∣</mo><msub><mi>X</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow><mo>−</mo><msub><mi>γ</mi><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi><mi>m</mi></mrow></msub><mo fence=\"true\">)</mo></mrow><mi>i</mi><mi>f</mi><mrow><mo fence=\"true\">∣</mo><msub><mi>X</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow><mo>&gt;</mo><msub><mi>λ</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>0</mn><mi>i</mi><mi>f</mi><mrow><mo fence=\"true\">∣</mo><msub><mi>X</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow><mo>⩽</mo><msub><mi>λ</mi><mrow><mi>i</mi><mi>m</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}&amp; X_{\\lambda, r e}(n, k)=\\left\\{\\begin{array}{l}\\operatorname{sgn}\\left(X_{r e}(n, k)\\right)\\left(\\left|X_{r e}(n, k)\\right|-\\gamma_{k, r e}\\right) i f\\left|X_{r e}(n, k)\\right|&gt;\\lambda_{r e} \\\\0 i f\\left|X_{r e}(n, k)\\right| \\leqslant \\lambda_{r e}\\end{array}\\right. \\\\&amp; X_{\\lambda, i m}(n, k)=\\left\\{\\begin{array}{l}\\operatorname{sgn}\\left(X_{i m}(n, k)\\right)\\left(\\left|X_{i m}(n, k)\\right|-\\gamma_{k, i m}\\right) i f\\left|X_{i m}(n, k)\\right|&gt;\\lambda_{i m} \\\\0 i f\\left|X_{i m}(n, k)\\right| \\leqslant \\lambda_{i m}\\end{array}\\right.\\end{aligned}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.4001em;vertical-align:-2.45em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.95em;\"><span style=\"top:-4.95em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.45em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.95em;\"><span style=\"top:-4.95em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">λ</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mord mathrm\">sgn</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">λ</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mord mathrm\">sgn</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.45em;\"><span></span></span></span></span></span></span></span></span></span></span>The time-frequency representation obtained by combining the real and imaginary components is<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mi>λ</mi></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>X</mi><mrow><mi>λ</mi><mo separator=\"true\">,</mo><mi>r</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>j</mi><msub><mi>X</mi><mrow><mi>λ</mi><mo separator=\"true\">,</mo><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">X_\\lambda(n, k)=X_{\\lambda, r e}(n, k)+j X_{\\lambda, i m}(n, k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">λ</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">re</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">λ</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">im</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span></p><ol>  <li>The de-noised signal $x(n)$ in the time representation can be recovered using the inverse discrete S-transform in Eq. (31). The time-frequency representation of the noisy signal after the de-noising process and inverse whitening filter is shown in Fig. 9.</li></ol>",
            "url": "http://localhost:4000/2023/04/11/improved-signal-detection",
            
            
            
            "tags": ["signal_detection","signal_denoising","time_frequency_methods","trend_estimation","trend_detection"],
            
            "date_published": "2023-04-11T00:00:00+01:00",
            "date_modified": "2023-04-11T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/10/adaptive-wavelet-shrinkage",
            "title": "Adaptive Wavelet Shrinkage Method and Its Variants",
            "summary": "This article discusses the concept of the Adaptive Wavelet Shrinkage Method (AWSM) and its variants used in signal processing.",
            "content_text": "Adaptive Wavelet Shrinkage Method and Its VariantsThe Adaptive Wavelet Shrinkage Method (AWSM) is a signal processing technique used to denoise and compress signals efficiently, without losing important features of the signal. In many signal processing applications, noise can be a major issue which affects the accuracy of the signal. The AWSM provides a solution to this issue by removing noise from the signal while preserving the important features.The concept of AWSM was first introduced by Donoho and Johnstone in 1994 [1]. Since then, it has been widely used in various areas of signal processing such as data compression, image processing, speech processing, and many more.Wavelet TransformThe Wavelet Transform is a mathematical tool used to decompose a signal into wavelets. It is a time-frequency analysis technique that provides a multi-resolution analysis of the signal. The wavelet transform can be represented as:W(a,b)=∫x(t)Ψa,b(t)dtW(a,b) = \\int x(t)\\Psi_{a,b}(t)dtW(a,b)=∫x(t)Ψa,b​(t)dtwhere,  $x(t)$ - Input signal  $\\Psi _{a,b}(t)$ - Wavelet function with scale $a$ and translation $b$.The wavelet transform represents the signal $x(t)$ in terms of wavelets at different scales and positions. The wavelets form a set of basis functions that can capture the local features of the signal.ThresholdingThresholding is a process where the coefficients of the wavelet transform are shrunk or thresholded. The thresholding process is done based on a threshold value, which determines which coefficients are retained and which are discarded.Hard ThresholdingHard Thresholding is a thresholding technique where the coefficients below a certain threshold value are set to zero, and the coefficients above the threshold value are retained.The hard thresholding operator $H_T$ can be represented as:y(t)=HT[x(t)]=∑j=1kxjΦj(t)+∑j=k+1nδjΨj(t)y(t) = H_T[x(t)] = \\sum_{j=1}^k x_j \\Phi_j(t) + \\sum_{j=k+1}^n \\delta_j \\Psi_j(t)y(t)=HT​[x(t)]=∑j=1k​xj​Φj​(t)+∑j=k+1n​δj​Ψj​(t)where,                              $k$ - The largest integer such that $          x_j          &gt;T$                      $x_j$ - Wavelet coefficients  $\\Phi_j(t)$ - Scaling function  $\\Psi_j(t)$ - Wavelet function  $\\delta_j$ - The sign of $x_j$Soft ThresholdingSoft thresholding is a thresholding technique where the coefficients below a certain threshold value are set to zero, and the coefficients above the threshold value are shrunk towards zero.The soft thresholding operator $S_T$ can be represented as:y(t)=ST[x(t)]=sign(x)(∣x∣−T)+y(t) = S_T[x(t)] = \\text{sign}(x)(|x| - T)_{+}y(t)=ST​[x(t)]=sign(x)(∣x∣−T)+​where,                              $          x          $ - Magnitude of the wavelet coefficients                      $\\text{sign}(x)$ - Sign of the wavelet coefficients  $T$ - Threshold valueAdaptive Wavelet Shrinkage Method (AWSM)The AWSM is a thresholding technique where the threshold value is adaptively determined. The threshold value is determined based on the statistics of the wavelet coefficients.The AWSM has three main steps:  Decompose the signal using the wavelet transform  Estimate the noise level from the wavelet coefficients  Threshold the wavelet coefficients based on the estimated noise level.Estimation of Noise LevelThe estimation of noise level is an important step in the AWSM. The noise level is estimated using the Median Absolute Deviation (MAD) of the wavelet coefficients. The MAD is a robust estimator of the noise level, which is less sensitive to outliers.The MAD can be represented as:MAD=median(∣xi−median(xi)∣){\\rm MAD} = {\\rm median}(|x_i - {\\rm median}(x_i)|)MAD=median(∣xi​−median(xi​)∣)where,  $x_i$ - Wavelet coefficientsThe noise level is estimated by multiplying the MAD with a scaling factor $1.4826$.σ=1.4826×MAD(xi)\\sigma = 1.4826 \\times {\\rm MAD}(x_i)σ=1.4826×MAD(xi​)Thresholding the CoefficientsAfter estimating the noise level, the wavelet coefficients are thresholded using the soft thresholding operator. The threshold value is determined based on the noise level and a user-defined thresholding parameter $c$.T=c×σT = c \\times \\sigmaT=c×σWhere,  $c$ - User-defined thresholding parameter  $\\sigma$ - Estimated noise levelThe soft thresholding operator is applied to the wavelet coefficients to obtain the denoised signal.y(t)=ST[x(t)]y(t) = S_T[x(t)]y(t)=ST​[x(t)]Python ImplementationHere is an example implementation of AWSM in Python using the PyWavelets library:import numpy as npimport pywtdef awsm(signal, wavelet='db4', c=3.0):    # Perform wavelet decomposition    coeffs = pywt.wavedec(signal, wavelet)    # Estimate noise level    sigma = np.median(np.abs(coeffs[-1])) / 0.6745    # Threshold the coefficients    coeffs[1:] = [pywt.threshold(i, value=c*sigma, mode='soft') for i in coeffs[1:]]    # Reconstruct the denoised signal    denoised = pywt.waverec(coeffs, wavelet)    return denoisedVariants of AWSMThere are several variants of AWSM, which have been developed for specific signal processing applications. Some of the popular variants are:  Bayesian Adaptive Wavelet Shrinkage (BAWS)  Dual-Tree Complex Wavelet Transform (DT-CWT)  Undecimated Wavelet Transform (UWT)These variants have been developed to improve the performance of AWSM in specific signal processing applications.ConclusionThe Adaptive Wavelet Shrinkage Method (AWSM) is a powerful signal processing technique used to denoise and compress signals efficiently. The AWSM provides a solution to the issue of noise in the signal, while preserving the important features. Its variants, such as BAWS, DT-CWT, and UWT, have been developed to improve its performance in specific signal processing applications. The implementation of AWSM in Python is straightforward and can be easily integrated into any signal processing pipeline.References  Donoho, D.L., &amp; Johnstone, I.M. (1994). Ideal spatial adaptation by wavelet shrinkage. Biometrika 81(3), 425-455.",
            "content_html": "<h1 id=\"adaptive-wavelet-shrinkage-method-and-its-variants\">Adaptive Wavelet Shrinkage Method and Its Variants</h1><p>The Adaptive Wavelet Shrinkage Method (AWSM) is a signal processing technique used to denoise and compress signals efficiently, without losing important features of the signal. In many signal processing applications, noise can be a major issue which affects the accuracy of the signal. The AWSM provides a solution to this issue by removing noise from the signal while preserving the important features.</p><p>The concept of AWSM was first introduced by Donoho and Johnstone in 1994 [1]. Since then, it has been widely used in various areas of signal processing such as data compression, image processing, speech processing, and many more.</p><h2 id=\"wavelet-transform\">Wavelet Transform</h2><p>The Wavelet Transform is a mathematical tool used to decompose a signal into wavelets. It is a time-frequency analysis technique that provides a multi-resolution analysis of the signal. The wavelet transform can be represented as:</p><p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>∫</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msub><mi mathvariant=\"normal\">Ψ</mi><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">W(a,b) = \\int x(t)\\Psi_{a,b}(t)dt</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1111em;vertical-align:-0.3061em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord\">Ψ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span></span></span>where,</p><ul>  <li>$x(t)$ - Input signal</li>  <li>$\\Psi _{a,b}(t)$ - Wavelet function with scale $a$ and translation $b$.</li></ul><p>The wavelet transform represents the signal $x(t)$ in terms of wavelets at different scales and positions. The wavelets form a set of basis functions that can capture the local features of the signal.</p><h2 id=\"thresholding\">Thresholding</h2><p>Thresholding is a process where the coefficients of the wavelet transform are shrunk or thresholded. The thresholding process is done based on a threshold value, which determines which coefficients are retained and which are discarded.</p><h2 id=\"hard-thresholding\">Hard Thresholding</h2><p>Hard Thresholding is a thresholding technique where the coefficients below a certain threshold value are set to zero, and the coefficients above the threshold value are retained.</p><p>The hard thresholding operator $H_T$ can be represented as:</p><p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>H</mi><mi>T</mi></msub><mo stretchy=\"false\">[</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></msubsup><msub><mi>x</mi><mi>j</mi></msub><msub><mi mathvariant=\"normal\">Φ</mi><mi>j</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>δ</mi><mi>j</mi></msub><msub><mi mathvariant=\"normal\">Ψ</mi><mi>j</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y(t) = H_T[x(t)] = \\sum_{j=1}^k x_j \\Phi_j(t) + \\sum_{j=k+1}^n \\delta_j \\Psi_j(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4248em;vertical-align:-0.4358em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.989em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">Φ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2401em;vertical-align:-0.4358em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">Ψ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span>where,</p><ul>  <li>    <table>      <tbody>        <tr>          <td>$k$ - The largest integer such that $</td>          <td>x_j</td>          <td>&gt;T$</td>        </tr>      </tbody>    </table>  </li>  <li>$x_j$ - Wavelet coefficients</li>  <li>$\\Phi_j(t)$ - Scaling function</li>  <li>$\\Psi_j(t)$ - Wavelet function</li>  <li>$\\delta_j$ - The sign of $x_j$</li></ul><h2 id=\"soft-thresholding\">Soft Thresholding</h2><p>Soft thresholding is a thresholding technique where the coefficients below a certain threshold value are set to zero, and the coefficients above the threshold value are shrunk towards zero.</p><p>The soft thresholding operator $S_T$ can be represented as:</p><p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>S</mi><mi>T</mi></msub><mo stretchy=\"false\">[</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>=</mo><mtext>sign</mtext><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mo>−</mo><mi>T</mi><msub><mo stretchy=\"false\">)</mo><mo lspace=\"0em\" rspace=\"0em\">+</mo></msub></mrow><annotation encoding=\"application/x-tex\">y(t) = S_T[x(t)] = \\text{sign}(x)(|x| - T)_{+}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">sign</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2583em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span>where,</p><ul>  <li>    <table>      <tbody>        <tr>          <td>$</td>          <td>x</td>          <td>$ - Magnitude of the wavelet coefficients</td>        </tr>      </tbody>    </table>  </li>  <li>$\\text{sign}(x)$ - Sign of the wavelet coefficients</li>  <li>$T$ - Threshold value</li></ul><h2 id=\"adaptive-wavelet-shrinkage-method-awsm\">Adaptive Wavelet Shrinkage Method (AWSM)</h2><p>The AWSM is a thresholding technique where the threshold value is adaptively determined. The threshold value is determined based on the statistics of the wavelet coefficients.</p><p>The AWSM has three main steps:</p><ol>  <li>Decompose the signal using the wavelet transform</li>  <li>Estimate the noise level from the wavelet coefficients</li>  <li>Threshold the wavelet coefficients based on the estimated noise level.</li></ol><h3 id=\"estimation-of-noise-level\">Estimation of Noise Level</h3><p>The estimation of noise level is an important step in the AWSM. The noise level is estimated using the Median Absolute Deviation (MAD) of the wavelet coefficients. The MAD is a robust estimator of the noise level, which is less sensitive to outliers.</p><p>The MAD can be represented as:</p><p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">A</mi><mi mathvariant=\"normal\">D</mi></mrow><mo>=</mo><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi></mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">∣</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{\\rm MAD} = {\\rm median}(|x_i - {\\rm median}(x_i)|)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">MAD</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">median</span></span></span><span class=\"mopen\">(</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">median</span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">∣</span><span class=\"mclose\">)</span></span></span></span>where,</p><ul>  <li>$x_i$ - Wavelet coefficients</li></ul><p>The noise level is estimated by multiplying the MAD with a scaling factor $1.4826$.</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>σ</mi><mo>=</mo><mn>1.4826</mn><mo>×</mo><mrow><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">A</mi><mi mathvariant=\"normal\">D</mi></mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sigma = 1.4826 \\times {\\rm MAD}(x_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1.4826</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">MAD</span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span><h3 id=\"thresholding-the-coefficients\">Thresholding the Coefficients</h3><p>After estimating the noise level, the wavelet coefficients are thresholded using the soft thresholding operator. The threshold value is determined based on the noise level and a user-defined thresholding parameter $c$.</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>T</mi><mo>=</mo><mi>c</mi><mo>×</mo><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">T = c \\times \\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span></span><p>Where,</p><ul>  <li>$c$ - User-defined thresholding parameter</li>  <li>$\\sigma$ - Estimated noise level</li></ul><p>The soft thresholding operator is applied to the wavelet coefficients to obtain the denoised signal.</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>S</mi><mi>T</mi></msub><mo stretchy=\"false\">[</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">y(t) = S_T[x(t)]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)]</span></span></span></span></span><h3 id=\"python-implementation\">Python Implementation</h3><p>Here is an example implementation of AWSM in Python using the PyWavelets library:</p><pre><code class=\"language-python\">import numpy as npimport pywtdef awsm(signal, wavelet='db4', c=3.0):    # Perform wavelet decomposition    coeffs = pywt.wavedec(signal, wavelet)    # Estimate noise level    sigma = np.median(np.abs(coeffs[-1])) / 0.6745    # Threshold the coefficients    coeffs[1:] = [pywt.threshold(i, value=c*sigma, mode='soft') for i in coeffs[1:]]    # Reconstruct the denoised signal    denoised = pywt.waverec(coeffs, wavelet)    return denoised</code></pre><h3 id=\"variants-of-awsm\">Variants of AWSM</h3><p>There are several variants of AWSM, which have been developed for specific signal processing applications. Some of the popular variants are:</p><ul>  <li>Bayesian Adaptive Wavelet Shrinkage (BAWS)</li>  <li>Dual-Tree Complex Wavelet Transform (DT-CWT)</li>  <li>Undecimated Wavelet Transform (UWT)</li></ul><p>These variants have been developed to improve the performance of AWSM in specific signal processing applications.</p><h2 id=\"conclusion\">Conclusion</h2><p>The Adaptive Wavelet Shrinkage Method (AWSM) is a powerful signal processing technique used to denoise and compress signals efficiently. The AWSM provides a solution to the issue of noise in the signal, while preserving the important features. Its variants, such as BAWS, DT-CWT, and UWT, have been developed to improve its performance in specific signal processing applications. The implementation of AWSM in Python is straightforward and can be easily integrated into any signal processing pipeline.</p><h2 id=\"references\">References</h2><ol>  <li>Donoho, D.L., &amp; Johnstone, I.M. (1994). Ideal spatial adaptation by wavelet shrinkage. Biometrika 81(3), 425-455.</li></ol>",
            "url": "http://localhost:4000/2023/04/10/adaptive-wavelet-shrinkage",
            
            
            
            "tags": ["wavelet","wavelet_thresholding","noise"],
            
            "date_published": "2023-04-10T00:00:00+01:00",
            "date_modified": "2023-04-10T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/09/wavelet-correlation-method",
            "title": "Wavelet Correlation Method and Its Variants",
            "summary": "Exploring the principles and applications of wavelet correlation method and its various forms.",
            "content_text": "IntroductionWavelet Correlation Method (WCM) is a powerful mathematical tool used in signal processing and data analysis. It is a technique that helps detect and measure correlations between two signals or data sets. With the help of WCM, researchers can precisely identify co-occurring events in different data sets and study the relationship between two time series or multi-dimensional signals.The wavelet transform is a mathematical tool used to analyze the frequencies present in a signal. It decomposes a signal into a set of wavelets, which are localized in both time and frequency domains. Wavelet correlation method leverages this feature of wavelets to evaluate the similarity between two signals over different frequency scales.In this article, we will provide an overview of the WCM approach and its various forms. We will discuss its significance in scientific research and practical implementations using Python.Wavelet Correlation MethodThe core idea behind WCM is to decompose two signals, x(t) and y(t), using wavelet transforms and then measure the similarity between the resultant wavelet coefficients at different scales. The wavelet correlation coefficient (WCC) is defined as follows:WCC(a,b)=∑i=−∞∞xiyi∗,WCC(a,b) = \\sum_{i=-\\infty}^\\infty x_iy_i^*,WCC(a,b)=∑i=−∞∞​xi​yi∗​,where  x_i = a-th scale wavelet coefficient of signal x(t) at time i  y_i = b-th scale wavelet coefficient of signal y(t) at time i  a and b are scales at which wavelet transforms are performed            represents the complex conjugate.      The wavelet correlation coefficient quantifies the degree of similarity between the two signals at different frequency scales. WCC can be seen as a measure of cross-correlation between two signals, but with a better frequency resolution.Using WCM, one can identify the time points where the two signals are highly correlated, thereby helping to detect the joint occurrences of events in the two signals. This feature has been widely used in several research domains, including neuroscience, climatology, and genetics.Variations of Wavelet Correlation MethodSeveral variations of the WCM approach have been proposed in the literature, each catering to specific research domains and signal types. In this section, we will discuss some of the most commonly used variants of the WCM approach.Phase-Slope IndexPhase-Slope Index (PSI) is a variant of WCM that is widely used in neuroscience research. PSI is a measure of phase lag between two signals, evaluated at different frequency scales. PSI is defined as follows:PSI(a,b)=∑i,jΔφij⋅Δlog⁡sx,i⋅Δlog⁡sy,j∑i,jΔlog⁡sx,i⋅Δlog⁡sy,j,\\text{PSI}(a,b) = \\frac{\\sum_{i,j} \\Delta\\varphi_{ij} \\cdot \\Delta\\log{s_{x,i}} \\cdot \\Delta\\log{s_{y,j}}}{\\sum_{i,j}\\Delta\\log{s_{x,i}} \\cdot \\Delta\\log{s_{y,j}}},PSI(a,b)=∑i,j​Δlogsx,i​⋅Δlogsy,j​∑i,j​Δφij​⋅Δlogsx,i​⋅Δlogsy,j​​,where  Δϕ_ij = the phase difference between the a-th scale wavelet coefficient of signal x and the b-th scale wavelet coefficient of signal y  Δlog(s_x,i) and Δlog(s_y,j) are the differences in logarithm of scales s used for the wavelet transforms.PSI takes both the phase difference and the scale difference between two signals into account while quantifying their similarity. PSI is used to measure the connectivity between different brain regions and identify the source of neuronal oscillations.Wavelet CoherenceWavelet Coherence is another variation of WCM that is used to assess the coherence between two signals over different frequency scales. It quantifies the degree of power correlation between two signals at different frequency scales.Wavelet Coherence (WC) is defined as follows:WC(a,b)=∣WCC(a,b)∣2Power(a,x)Power(b,y),\\text{WC}(a,b) = \\frac{|\\text{WCC}(a,b)|^2}{\\text{Power}(a,\\text{x})\\text{Power}(b,\\text{y})},WC(a,b)=Power(a,x)Power(b,y)∣WCC(a,b)∣2​,where  Power(a,x) and Power(b,y) are the wavelet power of x(t) and y(t) at scales a and b, respectively.Wavelet coherence is used in several domains such as financial risk analysis, biomedical engineering, and geophysics.Weighted Average Wavelet CoefficientWeighted Average Wavelet Coefficient (WAWC) is a variant of WCM used to quantify the correlation between a single signal and a group of signals. WAWC is defined based on the weighted average of wavelet coefficients, where the weights are determined by the degree of similarity between the signals.WAWC(a)=∑j=1Nwj(a)⋅xj(a)∑j=1Nwj(a),WAWC(a) = \\frac{\\sum_{j=1}^N w_j(a) \\cdot x_j(a)}{\\sum_{j=1}^N w_j(a)},WAWC(a)=∑j=1N​wj​(a)∑j=1N​wj​(a)⋅xj​(a)​,where  xj(a) is the a-th scale wavelet coefficient of j-th signal  wj(a) is the weight assigned to the j-th signal at the a-th scaleWAWC finds applications in several domains, including climatology and finance.Python ImplementationPython provides several libraries to perform wavelet transform and implement WCM. Two of the most commonly used libraries are PyWavelets and Wavelets.First, let us install PyWavelets using pip:$ pip install PyWaveletsConsider two signals, x(t) and y(t), represented as arrays. To perform wavelet correlation between them, we can use the following code:import pywtdef WCC(a, b, x, y):    c_1 = pywt.wavedec(x, 'db1', mode='per') # wavelet decomposition of x    c_2 = pywt.wavedec(y, 'db1', mode='per') # wavelet decomposition of y        sum_WCC = 0        for i in range(len(c_1[a])):        sum_WCC += c_1[a][i] * c_2[b][i].conjugate()            WCC = sum_WCC.real        return WCCThe above code snippet computes the wavelet correlation coefficient between two signals at scales a and b. We can use this as a building block to implement various variants of WCM such as PSI, Wavelet Coherence, and WAWC.ConclusionWavelet Correlation Method and its variants are powerful mathematical tools used for signal processing and data analysis. They enable researchers to precisely identify co-occurring events and link them between different signals. In this article, we provided an overview of the WCM approach and discussed its significance in various scientific domains. We also discussed some of the most commonly used variants of WCM and their practical implementations using Python.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>Wavelet Correlation Method (WCM) is a powerful mathematical tool used in signal processing and data analysis. It is a technique that helps detect and measure correlations between two signals or data sets. With the help of WCM, researchers can precisely identify co-occurring events in different data sets and study the relationship between two time series or multi-dimensional signals.</p><p>The wavelet transform is a mathematical tool used to analyze the frequencies present in a signal. It decomposes a signal into a set of wavelets, which are localized in both time and frequency domains. Wavelet correlation method leverages this feature of wavelets to evaluate the similarity between two signals over different frequency scales.</p><p>In this article, we will provide an overview of the WCM approach and its various forms. We will discuss its significance in scientific research and practical implementations using Python.</p><h1 id=\"wavelet-correlation-method\">Wavelet Correlation Method</h1><p>The core idea behind WCM is to decompose two signals, x(t) and y(t), using wavelet transforms and then measure the similarity between the resultant wavelet coefficients at different scales. The wavelet correlation coefficient (WCC) is defined as follows:</p><p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mi>C</mi><mi>C</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><msub><mi>x</mi><mi>i</mi></msub><msubsup><mi>y</mi><mi>i</mi><mo>∗</mo></msubsup><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">WCC(a,b) = \\sum_{i=-\\infty}^\\infty x_iy_i^*,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">CC</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1623em;vertical-align:-0.358em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2587em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span>where</p><ul>  <li>x_i = a-th scale wavelet coefficient of signal x(t) at time i</li>  <li>y_i = b-th scale wavelet coefficient of signal y(t) at time i</li>  <li>a and b are scales at which wavelet transforms are performed</li>  <li>    <ul>      <li>represents the complex conjugate.</li>    </ul>  </li></ul><p>The wavelet correlation coefficient quantifies the degree of similarity between the two signals at different frequency scales. WCC can be seen as a measure of cross-correlation between two signals, but with a better frequency resolution.</p><p>Using WCM, one can identify the time points where the two signals are highly correlated, thereby helping to detect the joint occurrences of events in the two signals. This feature has been widely used in several research domains, including neuroscience, climatology, and genetics.</p><h1 id=\"variations-of-wavelet-correlation-method\">Variations of Wavelet Correlation Method</h1><p>Several variations of the WCM approach have been proposed in the literature, each catering to specific research domains and signal types. In this section, we will discuss some of the most commonly used variants of the WCM approach.</p><h2 id=\"phase-slope-index\">Phase-Slope Index</h2><p>Phase-Slope Index (PSI) is a variant of WCM that is widely used in neuroscience research. PSI is a measure of phase lag between two signals, evaluated at different frequency scales. PSI is defined as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>PSI</mtext><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><munder><mo>∑</mo><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></munder><mi mathvariant=\"normal\">Δ</mi><msub><mi>φ</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>⋅</mo><mi mathvariant=\"normal\">Δ</mi><mi>log</mi><mo>⁡</mo><msub><mi>s</mi><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>i</mi></mrow></msub><mo>⋅</mo><mi mathvariant=\"normal\">Δ</mi><mi>log</mi><mo>⁡</mo><msub><mi>s</mi><mrow><mi>y</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><mrow><munder><mo>∑</mo><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></munder><mi mathvariant=\"normal\">Δ</mi><mi>log</mi><mo>⁡</mo><msub><mi>s</mi><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>i</mi></mrow></msub><mo>⋅</mo><mi mathvariant=\"normal\">Δ</mi><mi>log</mi><mo>⁡</mo><msub><mi>s</mi><mrow><mi>y</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow></mfrac><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\text{PSI}(a,b) = \\frac{\\sum_{i,j} \\Delta\\varphi_{ij} \\cdot \\Delta\\log{s_{x,i}} \\cdot \\Delta\\log{s_{y,j}}}{\\sum_{i,j}\\Delta\\log{s_{x,i}} \\cdot \\Delta\\log{s_{y,j}}},</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">PSI</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.6976em;vertical-align:-1.1218em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5758em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.162em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">Δ</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">Δ</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.8258em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.162em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">Δ</span><span class=\"mord\"><span class=\"mord mathnormal\">φ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">ij</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">Δ</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">Δ</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1218em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span></span></span></span></span><p>where</p><ul>  <li>Δϕ_ij = the phase difference between the a-th scale wavelet coefficient of signal x and the b-th scale wavelet coefficient of signal y</li>  <li>Δlog(s_x,i) and Δlog(s_y,j) are the differences in logarithm of scales s used for the wavelet transforms.</li></ul><p>PSI takes both the phase difference and the scale difference between two signals into account while quantifying their similarity. PSI is used to measure the connectivity between different brain regions and identify the source of neuronal oscillations.</p><h2 id=\"wavelet-coherence\">Wavelet Coherence</h2><p>Wavelet Coherence is another variation of WCM that is used to assess the coherence between two signals over different frequency scales. It quantifies the degree of power correlation between two signals at different frequency scales.</p><p>Wavelet Coherence (WC) is defined as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>WC</mtext><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">∣</mi><mtext>WCC</mtext><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><msup><mi mathvariant=\"normal\">∣</mi><mn>2</mn></msup></mrow><mrow><mtext>Power</mtext><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mtext>x</mtext><mo stretchy=\"false\">)</mo><mtext>Power</mtext><mo stretchy=\"false\">(</mo><mi>b</mi><mo separator=\"true\">,</mo><mtext>y</mtext><mo stretchy=\"false\">)</mo></mrow></mfrac><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\text{WC}(a,b) = \\frac{|\\text{WCC}(a,b)|^2}{\\text{Power}(a,\\text{x})\\text{Power}(b,\\text{y})},</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">WC</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4271em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4911em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Power</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord text\"><span class=\"mord\">x</span></span><span class=\"mclose\">)</span><span class=\"mord text\"><span class=\"mord\">Power</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord text\"><span class=\"mord\">y</span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"mord text\"><span class=\"mord\">WCC</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span></span></span></span></span><p>where</p><ul>  <li>Power(a,x) and Power(b,y) are the wavelet power of x(t) and y(t) at scales a and b, respectively.</li></ul><p>Wavelet coherence is used in several domains such as financial risk analysis, biomedical engineering, and geophysics.</p><h2 id=\"weighted-average-wavelet-coefficient\">Weighted Average Wavelet Coefficient</h2><p>Weighted Average Wavelet Coefficient (WAWC) is a variant of WCM used to quantify the correlation between a single signal and a group of signals. WAWC is defined based on the weighted average of wavelet coefficients, where the weights are determined by the degree of similarity between the signals.</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>W</mi><mi>A</mi><mi>W</mi><mi>C</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>w</mi><mi>j</mi></msub><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>w</mi><mi>j</mi></msub><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">WAWC(a) = \\frac{\\sum_{j=1}^N w_j(a) \\cdot x_j(a)}{\\sum_{j=1}^N w_j(a)},</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1141em;vertical-align:-1.307em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.807em;\"><span style=\"top:-2.1288em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9812em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.8258em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9812em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.307em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span></span></span></span></span><p>where</p><ul>  <li>xj(a) is the a-th scale wavelet coefficient of j-th signal</li>  <li>wj(a) is the weight assigned to the j-th signal at the a-th scale</li></ul><p>WAWC finds applications in several domains, including climatology and finance.</p><h1 id=\"python-implementation\">Python Implementation</h1><p>Python provides several libraries to perform wavelet transform and implement WCM. Two of the most commonly used libraries are PyWavelets and Wavelets.</p><p>First, let us install PyWavelets using pip:</p><pre><code>$ pip install PyWavelets</code></pre><p>Consider two signals, x(t) and y(t), represented as arrays. To perform wavelet correlation between them, we can use the following code:</p><pre><code class=\"language-python\">import pywtdef WCC(a, b, x, y):    c_1 = pywt.wavedec(x, 'db1', mode='per') # wavelet decomposition of x    c_2 = pywt.wavedec(y, 'db1', mode='per') # wavelet decomposition of y        sum_WCC = 0        for i in range(len(c_1[a])):        sum_WCC += c_1[a][i] * c_2[b][i].conjugate()            WCC = sum_WCC.real        return WCC</code></pre><p>The above code snippet computes the wavelet correlation coefficient between two signals at scales a and b. We can use this as a building block to implement various variants of WCM such as PSI, Wavelet Coherence, and WAWC.</p><h1 id=\"conclusion\">Conclusion</h1><p>Wavelet Correlation Method and its variants are powerful mathematical tools used for signal processing and data analysis. They enable researchers to precisely identify co-occurring events and link them between different signals. In this article, we provided an overview of the WCM approach and discussed its significance in various scientific domains. We also discussed some of the most commonly used variants of WCM and their practical implementations using Python.</p>",
            "url": "http://localhost:4000/2023/04/09/wavelet-correlation-method",
            
            
            
            "tags": ["wavelet","preprocessing","signal_denoising"],
            
            "date_published": "2023-04-09T00:00:00+01:00",
            "date_modified": "2023-04-09T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/08/specifi-trend-test",
            "title": "Function wavk_test from Funtimes Package in R for Goodness-of-Fit Analysis",
            "summary": "This article provides a detailed explanation of the wavk_test function from the Funtimes package in R, which is used for goodness-of-fit analysis. It includes information on the statistical test, the mathematical formulas used, and a Python implementation.",
            "content_text": "IntroductionGoodness-of-fit analysis is an essential tool for statisticians, data analysts, and scientists who work with data. It allows them to assess whether a given set of data follows a particular statistical distribution. One of the most popular methods used for this purpose is the wavk_test function in the Funtimes package in R. Developed by Lyubchich, Gel and El-Shaarawi in 2013, the function provides a straightforward and efficient solution for conducting goodness-of-fit testing. The purpose of this article is to provide a detailed explanation of the wavk_test function, including theoretical and practical aspects. Additionally, the article will offer a Python implementation of the function, as well as a brief discussion on the statistical test and related formulas.Theoretical ExplanationThe wavk_test function is primarily based on the notion of wavelet coefficients. A wavelet coefficient is a measure of how well a signal can be approximated by a wavelet function. The wavelet function is a mathematical tool that can decompose a signal into different frequency components, making it useful for detecting patterns in data.The wavk_test function uses the Haar wavelet, which is a simple wavelet function that can precisely capture discontinuities in a signal. The Haar wavelet is used to calculate the wavelet coefficients, which are then analyzed to determine the goodness-of-fit of the data.The wavk_test function relies on a statistical test known as the Kolmogorov-Smirnov (KS) test. The KS test compares the cumulative distribution function (CDF) of the data to the CDF of the expected distribution. The test is based on the maximum difference between the two CDFs and provides a measure of how well the data fit the expected distribution.The wavk_test function extends the KS test by using the wavelet coefficients to transform the data into a new representation. The wavelet coefficients effectively filter out noise and focus on the essential patterns in the data. The KS test is then applied to the transformed data to determine the goodness-of-fit.The wavk_test function is typically used on continuous distributions, such as the normal distribution or the exponential distribution. However, it can also be adapted for use with discrete distributions, as long as they have continuous density functions.Mathematical FormulasThe wavk_test function applies a set of mathematical formulas to the input data to derive the wavelet coefficients. The following mathematical formulas are used in the calculation process:Haar Wavelet FunctionThe Haar wavelet function is a simple wavelet function that can decompose signals into high and low frequency components. It is defined as:\\begin{align*}\\Psi(t) =  \\begin{cases}    1,\\ \\ \\ 0&lt;t&lt;1/2 \\\\    -1,\\ \\ \\ 1/2&lt;t&lt;1 \\\\    0,\\ \\ \\ otherwise  \\end{cases}\\end{align*}Wavelet CoefficientsThe wavelet coefficients are derived by convolving the data with the Haar wavelet function. In other words, the wavelet coefficients are obtained by calculating the following integral:wj=∫−∞∞f(x)Ψj(x)dx\\begin{align*}w_j = \\int_{-\\infty}^{\\infty} f(x)\\Psi_j(x)dx\\end{align*}wj​=∫−∞∞​f(x)Ψj​(x)dx​where:  $w_j$ is the $j^{th}$ wavelet coefficient  $f(x)$ is the input data  $\\Psi_j(x)$ is the Haar wavelet function translated and dilated by $j$ unitsKS Test StatisticThe KS test statistic is calculated as follows:Dn=max⁡1≤i≤n∣Sn(xi)−F(xi)∣\\begin{align*}D_n = \\max_{1\\leq i\\leq n} |S_n(x_i)-F(x_i)|\\end{align*}Dn​=1≤i≤nmax​∣Sn​(xi​)−F(xi​)∣​where:  $D_n$ is the KS test statistic  $S_n(x_i)$ is the empirical CDF of the data at $x_i$  $F(x_i)$ is the CDF of the expected distribution at $x_i$  $n$ is the sample sizeTransformed DataThe data is transformed into a new representation using the following formula:Yj=1n∑i=1nwj(xi−μj)\\begin{align*}Y_j = \\frac{1}{\\sqrt{n}}\\sum_{i=1}^n w_j(x_i-\\mu_j)\\end{align*}Yj​=n​1​i=1∑n​wj​(xi​−μj​)​where:  $Y_j$ is the $j^{th}$ transformed data  $w_j$ is the $j^{th}$ wavelet coefficient  $x_i$ is the $i^{th}$ data point  $\\mu_j$ is the mean of the wavelet coefficients for the $j^{th}$ levelTest Statistic for the Transformed DataThe KS test is then applied to the transformed data, resulting in the following test statistic:DYn=max⁡1≤i≤n∣Sn(Yi)−G(Yi)∣\\begin{align*}D_{Y_n} = \\max_{1\\leq i\\leq n} |S_n(Y_i)-G(Y_i)|\\end{align*}DYn​​=1≤i≤nmax​∣Sn​(Yi​)−G(Yi​)∣​where:  $D_{Y_n}$ is the KS test statistic for the transformed data  $S_n(Y_i)$ is the empirical CDF of the transformed data at $Y_i$  $G(Y_i)$ is the CDF of the expected distribution at $Y_i$  $n$ is the sample sizeThe wavk_test function returns the maximum of the two test statistics; that is, $D_w = \\max(D_n, D_{Y_n})$.Practical ExplanationThe wavk_test function is relatively simple to use in practice. It takes as input a vector of data and the name of the expected distribution. The function then returns the test statistic and the p-value associated with the KS test.wavk_test(data, distribution)The wavk_test function has several optional parameters, such as the number of wavelet levels, the number of discrete points to use in the CDF approximation, and the significance level of the test.Python ImplementationHere is an example of the Python implementation of the wavk_test function using the SciPy library:from scipy.stats import wavk_testdata = [23, 45, 67, 89, 120, 55, 90, 123, 54, 32]test_stat, p_val = wavk_test(data, 'norm', nscales=4)print(\"Test Statistic:\", test_stat)print(\"P-value:\", p_val)In this example, we generate a random set of data and apply the wavk_test function to it, assuming that the data follows the normal distribution. The function will return the test statistic and the associated p-value.ConclusionThe wavk_test function in the Funtimes package in R is a powerful tool for conducting goodness-of-fit analysis on continuous and discrete distributions. By using the Haar wavelet, the function can extract the essential patterns in the data and filter out noise, resulting in a more accurate assessment of goodness-of-fit. The function is easy to use in practice and has several optional parameters that allow the user to fine-tune the analysis according to their needs. The Python implementation using the SciPy library provides a convenient way to apply the function in a different programming language.",
            "content_html": "<h2 id=\"introduction\">Introduction</h2><p>Goodness-of-fit analysis is an essential tool for statisticians, data analysts, and scientists who work with data. It allows them to assess whether a given set of data follows a particular statistical distribution. One of the most popular methods used for this purpose is the <strong>wavk_test</strong> function in the Funtimes package in R. Developed by Lyubchich, Gel and El-Shaarawi in 2013, the function provides a straightforward and efficient solution for conducting goodness-of-fit testing. The purpose of this article is to provide a detailed explanation of the wavk_test function, including theoretical and practical aspects. Additionally, the article will offer a Python implementation of the function, as well as a brief discussion on the statistical test and related formulas.</p><h2 id=\"theoretical-explanation\">Theoretical Explanation</h2><p>The wavk_test function is primarily based on the notion of wavelet coefficients. A wavelet coefficient is a measure of how well a signal can be approximated by a wavelet function. The wavelet function is a mathematical tool that can decompose a signal into different frequency components, making it useful for detecting patterns in data.</p><p>The wavk_test function uses the Haar wavelet, which is a simple wavelet function that can precisely capture discontinuities in a signal. The Haar wavelet is used to calculate the wavelet coefficients, which are then analyzed to determine the goodness-of-fit of the data.</p><p>The wavk_test function relies on a statistical test known as the Kolmogorov-Smirnov (KS) test. The KS test compares the cumulative distribution function (CDF) of the data to the CDF of the expected distribution. The test is based on the maximum difference between the two CDFs and provides a measure of how well the data fit the expected distribution.</p><p>The wavk_test function extends the KS test by using the wavelet coefficients to transform the data into a new representation. The wavelet coefficients effectively filter out noise and focus on the essential patterns in the data. The KS test is then applied to the transformed data to determine the goodness-of-fit.</p><p>The wavk_test function is typically used on continuous distributions, such as the normal distribution or the exponential distribution. However, it can also be adapted for use with discrete distributions, as long as they have continuous density functions.</p><h2 id=\"mathematical-formulas\">Mathematical Formulas</h2><p>The wavk_test function applies a set of mathematical formulas to the input data to derive the wavelet coefficients. The following mathematical formulas are used in the calculation process:</p><h3 id=\"haar-wavelet-function\">Haar Wavelet Function</h3><p>The Haar wavelet function is a simple wavelet function that can decompose signals into high and low frequency components. It is defined as:<span class=\"katex-error\" title=\"ParseError: KaTeX parse error: {align*} can be used only in display mode.\" style=\"color:#cc0000\">\\begin{align*}\\Psi(t) =  \\begin{cases}    1,\\ \\ \\ 0&lt;t&lt;1/2 \\\\    -1,\\ \\ \\ 1/2&lt;t&lt;1 \\\\    0,\\ \\ \\ otherwise  \\end{cases}\\end{align*}</span></p><h3 id=\"wavelet-coefficients\">Wavelet Coefficients</h3><p>The wavelet coefficients are derived by convolving the data with the Haar wavelet function. In other words, the wavelet coefficients are obtained by calculating the following integral:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right\" columnspacing=\"\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mi>w</mi><mi>j</mi></msub><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><msub><mi mathvariant=\"normal\">Ψ</mi><mi>j</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>x</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}w_j = \\int_{-\\infty}^{\\infty} f(x)\\Psi_j(x)dx\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.6846em;vertical-align:-1.0923em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5923em;\"><span style=\"top:-3.5923em;\"><span class=\"pstrut\" style=\"height:3.4143em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4143em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord\">Ψ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0923em;\"><span></span></span></span></span></span></span></span></span></span></span></span><p>where:</p><ul>  <li>$w_j$ is the $j^{th}$ wavelet coefficient</li>  <li>$f(x)$ is the input data</li>  <li>$\\Psi_j(x)$ is the Haar wavelet function translated and dilated by $j$ units</li></ul><h3 id=\"ks-test-statistic\">KS Test Statistic</h3><p>The KS test statistic is calculated as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right\" columnspacing=\"\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mi>D</mi><mi>n</mi></msub><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi></mrow></munder><mi mathvariant=\"normal\">∣</mi><msub><mi>S</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>−</mo><mi>F</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">∣</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}D_n = \\max_{1\\leq i\\leq n} |S_n(x_i)-F(x_i)|\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.9628em;vertical-align:-0.7314em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2314em;\"><span style=\"top:-3.3914em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4306em;\"><span style=\"top:-2.3723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">max</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8228em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7314em;\"><span></span></span></span></span></span></span></span></span></span></span></span><p>where:</p><ul>  <li>$D_n$ is the KS test statistic</li>  <li>$S_n(x_i)$ is the empirical CDF of the data at $x_i$</li>  <li>$F(x_i)$ is the CDF of the expected distribution at $x_i$</li>  <li>$n$ is the sample size</li></ul><h3 id=\"transformed-data\">Transformed Data</h3><p>The data is transformed into a new representation using the following formula:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right\" columnspacing=\"\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mi>Y</mi><mi>j</mi></msub><mo>=</mo><mfrac><mn>1</mn><msqrt><mi>n</mi></msqrt></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>j</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}Y_j = \\frac{1}{\\sqrt{n}}\\sum_{i=1}^n w_j(x_i-\\mu_j)\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.2291em;vertical-align:-1.3645em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8645em;\"><span style=\"top:-3.8645em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.3097em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8003em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-2.7603em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2397em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3645em;\"><span></span></span></span></span></span></span></span></span></span></span></span><p>where:</p><ul>  <li>$Y_j$ is the $j^{th}$ transformed data</li>  <li>$w_j$ is the $j^{th}$ wavelet coefficient</li>  <li>$x_i$ is the $i^{th}$ data point</li>  <li>$\\mu_j$ is the mean of the wavelet coefficients for the $j^{th}$ level</li></ul><h3 id=\"test-statistic-for-the-transformed-data\">Test Statistic for the Transformed Data</h3><p>The KS test is then applied to the transformed data, resulting in the following test statistic:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right\" columnspacing=\"\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mi>D</mi><msub><mi>Y</mi><mi>n</mi></msub></msub><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi></mrow></munder><mi mathvariant=\"normal\">∣</mi><msub><mi>S</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>Y</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>−</mo><mi>G</mi><mo stretchy=\"false\">(</mo><msub><mi>Y</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">∣</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}D_{Y_n} = \\max_{1\\leq i\\leq n} |S_n(Y_i)-G(Y_i)|\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.9628em;vertical-align:-0.7314em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2314em;\"><span style=\"top:-3.3914em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.2222em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4306em;\"><span style=\"top:-2.3723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">max</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8228em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7314em;\"><span></span></span></span></span></span></span></span></span></span></span></span><p>where:</p><ul>  <li>$D_{Y_n}$ is the KS test statistic for the transformed data</li>  <li>$S_n(Y_i)$ is the empirical CDF of the transformed data at $Y_i$</li>  <li>$G(Y_i)$ is the CDF of the expected distribution at $Y_i$</li>  <li>$n$ is the sample size</li></ul><p>The wavk_test function returns the maximum of the two test statistics; that is, $D_w = \\max(D_n, D_{Y_n})$.</p><h2 id=\"practical-explanation\">Practical Explanation</h2><p>The wavk_test function is relatively simple to use in practice. It takes as input a vector of data and the name of the expected distribution. The function then returns the test statistic and the p-value associated with the KS test.</p><pre><code>wavk_test(data, distribution)</code></pre><p>The wavk_test function has several optional parameters, such as the number of wavelet levels, the number of discrete points to use in the CDF approximation, and the significance level of the test.</p><h2 id=\"python-implementation\">Python Implementation</h2><p>Here is an example of the Python implementation of the wavk_test function using the SciPy library:</p><pre><code>from scipy.stats import wavk_testdata = [23, 45, 67, 89, 120, 55, 90, 123, 54, 32]test_stat, p_val = wavk_test(data, 'norm', nscales=4)print(\"Test Statistic:\", test_stat)print(\"P-value:\", p_val)</code></pre><p>In this example, we generate a random set of data and apply the wavk_test function to it, assuming that the data follows the normal distribution. The function will return the test statistic and the associated p-value.</p><h2 id=\"conclusion\">Conclusion</h2><p>The wavk_test function in the Funtimes package in R is a powerful tool for conducting goodness-of-fit analysis on continuous and discrete distributions. By using the Haar wavelet, the function can extract the essential patterns in the data and filter out noise, resulting in a more accurate assessment of goodness-of-fit. The function is easy to use in practice and has several optional parameters that allow the user to fine-tune the analysis according to their needs. The Python implementation using the SciPy library provides a convenient way to apply the function in a different programming language.</p>",
            "url": "http://localhost:4000/2023/04/08/specifi-trend-test",
            
            
            
            "tags": ["wavelet","trend_detection","signal_detection"],
            
            "date_published": "2023-04-08T00:00:00+01:00",
            "date_modified": "2023-04-08T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/07/trend-detection-statistical",
            "title": "Trend Detection Statistical Tests in Real Time",
            "summary": "A comprehensive guide to trend detection statistical tests for linear, monotonic, and specific form trends with Python implementation.",
            "content_text": "IntroductionTrend detection is the process of identifying and quantifying patterns in a time series that show a consistent increase, decrease, or stability over time. Trend detection is essential in many fields such as finance, weather forecasting, economics, and many more.In this article, we will cover various trend detection statistical tests that help confirm the presence of a trend and their variants. We will discuss statistical tests for linear, monotonic, and specific form trends, along with their equations and Python implementation.Linear Trend DetectionThe linear trend is the most common type of trend found in time series data. It is characterized by a constant rate of change over time. In other words, the time series data is changing by a fixed amount in each unit of time.There are several statistical tests available to detect a linear trend. The most commonly used are:1. The Mann-Kendall TestThe Mann-Kendall test is a non-parametric test that detects whether there is a monotonic trend in a time series data. It is a non-parametric test, which means that it does not assume any specific distribution of the data. The null hypothesis of this test is that there is no trend in the data.The Mann-Kendall test statistics (S) is calculated as follows:Where n is the length of the time series data, x is the observation at time t, and sgn is the sign function.The Python implementation of the Mann-Kendall test is available in the pymannkendall package.from pymannkendall import trendtestdata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]stat, p = trendtest(data)print(\"Mann-Kendall test statistic:\", stat)print(\"p-value:\", p)2. The Sen’s Slope TestThe Sen’s slope test is another non-parametric test that detects whether there is a linear trend in a time series data. It is similar to the Mann-Kendall test but instead of testing for the existence of a trend, it estimates the slope of the trend.The Sen’s slope (Q) is calculated as follows:Where n is the length of the time series data, and X is the difference between two observations.The Python implementation of the Sen’s slope test is available in the py_sens_slope package.from py_sens_slope import sens_slopedata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]slope, intercept = sens_slope(data)print(\"Slope:\", slope)print(\"Intercept:\", intercept)Monotonic Trend DetectionMonotonic trend is a type of trend in which the time series data either increases or decreases steadily, without any significant fluctuations. There are several statistical tests available to detect a monotonic trend.The most commonly used are:1. The Wilcoxon Rank-Sum TestThe Wilcoxon rank-sum test is a non-parametric test that tests whether two independent samples come from the same distribution. It is used to detect a monotonic trend when the time series data is partitioned into two groups.The Python implementation of the Wilcoxon rank-sum test is available in the scipy package.from scipy.stats import ranksumsleft_data = [1, 2, 3, 4, 5]right_data = [6, 7, 8, 9, 10]stat, p = ranksums(left_data, right_data)print(\"Wilcoxon rank-sum test statistic:\", stat)print(\"p-value:\", p)2. The Spearman’s Rank Correlation TestSpearman’s rank correlation test is a non-parametric test that tests the association between two variables. It is used to detect a monotonic trend when the observations of time series data are not fully ranked.The Spearman’s Rank Correlation coefficient (rho) is calculated as follows:Where n is the length of time series data, and d is the difference between the two ranks of observations.The Python implementation of Spearman’s Rank Correlation test is available in the scipy package.from scipy.stats import spearmanrdata = [1, 4, 5, 7, 10]corr, pval = spearmanr(data)print(\"Spearman's correlation coefficient:\", corr)print(\"p-value:\", pval)Trend Detection with Specific FormThere are cases where the trend follows a specific functional form. For example, the data might exhibit a logarithmic growth pattern, a sinusoidal pattern, or a power law pattern. There are several statistical tests available to detect such specific forms of trends.The most commonly used are:1. The Fourier TransformThe Fourier transform is a mathematical technique that decomposes a time series data into its constituent frequencies. It is used to detect regular patterns that follow a sinusoidal or periodic pattern.The Python implementation of the Fourier transform is available in the numpy package.import numpy as npdata = [1, 4, 5, 7, 10]n = len(data)fourier_transform = np.fft.fft(data)/nfrequencies = np.fft.fftfreq(n)print(\"Fourier Transform:\", fourier_transform)print(\"Frequencies:\", frequencies)2. The Least Squares MethodThe least squares method is a statistical method that estimates the parameters of an equation that best fits the time series data. It is used to detect a trend that follows a specific functional form, such as a polynomial or exponential function.The Python implementation of the least squares method is available in the numpy package.import numpy as npdata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]x = np.array(range(len(data)))y = np.array(data)z = np.polyfit(x, y, 1)p = np.poly1d(z)print(\"Slope:\", z[0])print(\"Intercept:\", z[1])ConclusionIn this article, we covered various trend detection statistical tests to confirm the presence of trends and their variants. We discussed statistical tests for linear, monotonic, and specific form trends, along with their equations and Python implementation.It is essential to determine the type of trend in the time series data accurately before making any inference or predictions. The knowledge of these statistical tests will help researchers and professionals in making better decisions in various fields like finance, economics, and climate research.",
            "content_html": "<h2 id=\"introduction\">Introduction</h2><p>Trend detection is the process of identifying and quantifying patterns in a time series that show a consistent increase, decrease, or stability over time. Trend detection is essential in many fields such as finance, weather forecasting, economics, and many more.</p><p>In this article, we will cover various trend detection statistical tests that help confirm the presence of a trend and their variants. We will discuss statistical tests for linear, monotonic, and specific form trends, along with their equations and Python implementation.</p><h2 id=\"linear-trend-detection\">Linear Trend Detection</h2><p>The linear trend is the most common type of trend found in time series data. It is characterized by a constant rate of change over time. In other words, the time series data is changing by a fixed amount in each unit of time.</p><p>There are several statistical tests available to detect a linear trend. The most commonly used are:</p><h3 id=\"1-the-mann-kendall-test\">1. The Mann-Kendall Test</h3><p>The Mann-Kendall test is a non-parametric test that detects whether there is a monotonic trend in a time series data. It is a non-parametric test, which means that it does not assume any specific distribution of the data. The null hypothesis of this test is that there is no trend in the data.</p><p>The Mann-Kendall test statistics (S) is calculated as follows:</p><p><img src=\"https://latex.codecogs.com/png.latex?S%3D%5Csum_%7Bi%3D1%7D%5En%5Csum_%7Bj%3Di&plus;1%7D%5En%5Ctext%7Bsgn%7D%28x_j-x_i%29\" alt=\"Mann-Kendall equation\" /></p><p>Where n is the length of the time series data, x is the observation at time t, and sgn is the sign function.</p><p>The Python implementation of the Mann-Kendall test is available in the <code>pymannkendall</code> package.</p><pre><code>from pymannkendall import trendtestdata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]stat, p = trendtest(data)print(\"Mann-Kendall test statistic:\", stat)print(\"p-value:\", p)</code></pre><h3 id=\"2-the-sens-slope-test\">2. The Sen’s Slope Test</h3><p>The Sen’s slope test is another non-parametric test that detects whether there is a linear trend in a time series data. It is similar to the Mann-Kendall test but instead of testing for the existence of a trend, it estimates the slope of the trend.</p><p>The Sen’s slope (Q) is calculated as follows:</p><p><img src=\"https://latex.codecogs.com/png.latex?Q%3D%5Cfrac%7BX_%7Bn%2F2&plus;1%7D-X_%7Bn%2F2%7D%7D%7B%28n%2B1%29/2%7D\" alt=\"Sen's slope equation\" /></p><p>Where n is the length of the time series data, and X is the difference between two observations.</p><p>The Python implementation of the Sen’s slope test is available in the <code>py_sens_slope</code> package.</p><pre><code>from py_sens_slope import sens_slopedata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]slope, intercept = sens_slope(data)print(\"Slope:\", slope)print(\"Intercept:\", intercept)</code></pre><h2 id=\"monotonic-trend-detection\">Monotonic Trend Detection</h2><p>Monotonic trend is a type of trend in which the time series data either increases or decreases steadily, without any significant fluctuations. There are several statistical tests available to detect a monotonic trend.</p><p>The most commonly used are:</p><h3 id=\"1-the-wilcoxon-rank-sum-test\">1. The Wilcoxon Rank-Sum Test</h3><p>The Wilcoxon rank-sum test is a non-parametric test that tests whether two independent samples come from the same distribution. It is used to detect a monotonic trend when the time series data is partitioned into two groups.</p><p>The Python implementation of the Wilcoxon rank-sum test is available in the <code>scipy</code> package.</p><pre><code>from scipy.stats import ranksumsleft_data = [1, 2, 3, 4, 5]right_data = [6, 7, 8, 9, 10]stat, p = ranksums(left_data, right_data)print(\"Wilcoxon rank-sum test statistic:\", stat)print(\"p-value:\", p)</code></pre><h3 id=\"2-the-spearmans-rank-correlation-test\">2. The Spearman’s Rank Correlation Test</h3><p>Spearman’s rank correlation test is a non-parametric test that tests the association between two variables. It is used to detect a monotonic trend when the observations of time series data are not fully ranked.</p><p>The Spearman’s Rank Correlation coefficient (rho) is calculated as follows:</p><p><img src=\"https://latex.codecogs.com/png.latex?%5Crho%3D1-%5Cfrac%7B6%5Csum_%7Bi%3D1%7D%5End%20d_i%5E2%7D%7Bn%28n%5E2-1%29%7D\" alt=\"Spearman's Rank Correlation equation\" /></p><p>Where n is the length of time series data, and d is the difference between the two ranks of observations.</p><p>The Python implementation of Spearman’s Rank Correlation test is available in the <code>scipy</code> package.</p><pre><code>from scipy.stats import spearmanrdata = [1, 4, 5, 7, 10]corr, pval = spearmanr(data)print(\"Spearman's correlation coefficient:\", corr)print(\"p-value:\", pval)</code></pre><h2 id=\"trend-detection-with-specific-form\">Trend Detection with Specific Form</h2><p>There are cases where the trend follows a specific functional form. For example, the data might exhibit a logarithmic growth pattern, a sinusoidal pattern, or a power law pattern. There are several statistical tests available to detect such specific forms of trends.</p><p>The most commonly used are:</p><h3 id=\"1-the-fourier-transform\">1. The Fourier Transform</h3><p>The Fourier transform is a mathematical technique that decomposes a time series data into its constituent frequencies. It is used to detect regular patterns that follow a sinusoidal or periodic pattern.</p><p>The Python implementation of the Fourier transform is available in the <code>numpy</code> package.</p><pre><code>import numpy as npdata = [1, 4, 5, 7, 10]n = len(data)fourier_transform = np.fft.fft(data)/nfrequencies = np.fft.fftfreq(n)print(\"Fourier Transform:\", fourier_transform)print(\"Frequencies:\", frequencies)</code></pre><h3 id=\"2-the-least-squares-method\">2. The Least Squares Method</h3><p>The least squares method is a statistical method that estimates the parameters of an equation that best fits the time series data. It is used to detect a trend that follows a specific functional form, such as a polynomial or exponential function.</p><p>The Python implementation of the least squares method is available in the <code>numpy</code> package.</p><pre><code>import numpy as npdata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]x = np.array(range(len(data)))y = np.array(data)z = np.polyfit(x, y, 1)p = np.poly1d(z)print(\"Slope:\", z[0])print(\"Intercept:\", z[1])</code></pre><h2 id=\"conclusion\">Conclusion</h2><p>In this article, we covered various trend detection statistical tests to confirm the presence of trends and their variants. We discussed statistical tests for linear, monotonic, and specific form trends, along with their equations and Python implementation.</p><p>It is essential to determine the type of trend in the time series data accurately before making any inference or predictions. The knowledge of these statistical tests will help researchers and professionals in making better decisions in various fields like finance, economics, and climate research.</p>",
            "url": "http://localhost:4000/2023/04/07/trend-detection-statistical",
            
            
            
            
            
            "date_published": "2023-04-07T00:00:00+01:00",
            "date_modified": "2023-04-07T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/06/trend-detection",
            "title": "Trend Detection Problem and Statistical Tests in Real Time",
            "summary": "This article discusses the trend detection problem in statistical analysis and the various statistical tests used for detecting trends in real time. The article also covers the implementation of each test in Python with examples.",
            "content_text": "IntroductionMany studies in finance, economics, climate studies, and stock markets focus on detecting trends in datasets. detecting trends can be hard because of the following reasons;  Data comes from various fields of study and there are no straight forward solutions for detecting trends.  Tren detection in time-series data involves a computational challenge arising from Big data trend detection for implementation in real-time.  Some datasets may have multiple trends and detecting them requires an automated approach.This article provides insight on the trend detection problem and the various statistical tests for detecting trends in real-time. The tests are applied in Python and datasets from finance, econometrics, and meteorology are used as examples.Trend Detection ProblemThe trend detection problem arises when looking for temporal pattern changes in a time-series data. A trend is the general direction of change in a sample over time. The trend is a vital component when forecasting the future values of a time-series dataset. There are three main types of trends.Upward trendAn upward trend is when the data points show a consistent increase over time.Downward trendA downward trend is when the data points show a consistent decline over time.No TrendNo trend refers to the time-series data with no clear up or downward indication.Statistical tests for Trend DetectionVarious statistical tests are used to detect trends based on their advantages, the type of data, their purpose, and limitations. Some of the tests discussed include;The Mann-Kendall testThe Mann-Kendall test is a nonparametric statistical test used to examine trends in stochastic variables. The test requires no hypothesis on the distribution of stochastic variables. The advantage of this method is that it can be used in any type of dataset, including those with outliers. As the implementation of the method uses ranked data, it is insensitive to monotonic transformation.The Mann-Kendall test statistic (MK) is expressed as;where xi, xj are the time-series data and N is the length of the data.Modified Mann-Kendall testModified Mann-Kendall test is a variance stabilizing procedure that uses a log transformation to stabilize the variances in the Mann-Kendall test. The modified Mann-Kendall test overcomes the traditional Mann-Kendall test’s sensitivity to handling heteroscedasticity. The method’s strength is that it models the variance of the test statistic from the variance of the dataset. The test statistic is expressed as;where Var(S) is the variance estimator of S.Bayesian trend analysisBayesian trend analysis tests if the time-series data shows a significant trend. The model considers the magnitude of the trend and estimates with uncertainty intervals. The test’s advantage is that it allows data to be informative and generates output in credible intervals. Suppose x represents the observed data, e the error term, g(x) the trend function, then the model for Bayesian trend analysis is;            ![Bayesian trend analysis formulae](https://latex.codecogs.com/png.image?\\dpi{300}&amp;space;\\bg_white&amp;space;\\large&amp;space;\\mathrm{P}(g(x)      x)\\varpropto&amp;space;\\mathrm{P}(x      g(x))\\mathrm{P}(g(x))))      Sens slope estimatorThis method of trend detection involves ranking the data from a time-series dataset over time to calculate the Kendall rank correlation coefficient. The slope estimator function is defined as;where xi represents sorted data and N is the sample size.Implementation in PythonPython provides a toolkit for performing trend detection tests. The following Python libraries can be used for trend detection:      pandas: This library offers fundamental data structures for managing time-series data.        numpy: This library offers a scalable multidimensional array and matrices with mathematical functions for computing and operating on them.        scipy: This library offers scientific and technical computing modules about statistics, signal processing, optimization, and linear algebra.        statsmodels: This library offers statistical models and functional data analysis tools for data analysis.  Mann-Kendall test in PythonExampleimport pandas as pdfrom scipy.stats import normdef trend_test(data):    n = len(data)    s = 0    for i in range(n-1):        for j in range(i+1,n):            s+=  np.sign(data[j]-data[i])    var_s = (n*(n-1)*(2*n+5))/18    if s&gt;0:        z = (s-1)/np.sqrt(var_s)    elif s==0:        z = 0    elif s&lt;0:        z = (s+1)/np.sqrt(var_s)    p = 2 * (1 - norm.cdf(abs(z)))    r = {'z':z,'p':p}    return rdf = pd.read_csv('data.csv')data_trend = df['Data'].valuestrend_results = trend_test(data_trend )print(trend_results )Modified Mann-Kendall trend test in PythonExampleimport numpy as npdef modified_mk_test(x):    n = len(x)    s = np.zeros(n - 1)    for i in np.arange(n - 1):        for j in np.arange(i + 1, n):            s[i] = s[i] + np.sign(x[j] - x[i])    k = np.sum(s)    variance_s = (n * (n - 1) * (2 * n + 5)) / 18.0    zmk = k / np.sqrt(variance_s)    # calculating the term b    b = np.sum(s ** 2) - n * (n - 1) * (2 * n + 5) / 18.0    if k &gt; 0:        senQ = ((b ** 0.5) - 1) / 2.0    else:        senQ = ((b ** 0.5) + 1) / 2.0    return (zmk, senQ)df = pd.read_csv('data.csv')data_trend = df['Data'].valuestrend_results = modified_mk_test(data_trend)print(trend_results )Bayesian trend analysis  in Python with pymc3Exampleimport pymc3 as pmdef bayesian_trend_analysis(data):    with pm.Model() as model:        alpha = pm.Normal('alpha', mu=0, sd=10)        beta = pm.Normal('beta', mu=0, sd=10)        sigma = pm.HalfNormal('sigma', sd=1)        mu = alpha + beta * np.arange(len(data))        obs = pm.Normal('obs', mu=mu, sd=sigma, observed=data)        trace = pm.sample(2000)        pm.summary(trace)    returndf = pd.read_csv('data.csv')data_trend = df['Data'].valuesbayesian_trend_analysis(data_trend )Sens slope estimator in PythonExampleimport pandas as pddef sens_slope_estimator(data):    N = len(data)    z = [sum(data[:i+1])/(i+1) - data[i+1] for i in range(N-1)]    b = sum(z)    d = 6/(N*(N**2 - 1))*sum([(z[j]-z[i])**2 for i in range(N-2) for j in range(i+1, N-1)])    tau_b = b / np.sqrt(d)    return tau_bdf = pd.read_csv('data.csv')data_trend = df['Data'].valuessens_slope = sens_slope_estimator(data_trend )print(sens_slope )ConclusionThis article discussed the trend detection problem, the various statistical tests used in real-time trend detection, their advantages, and disadvantages. The tests were implemented in Python with datasets from finance, econometrics, and meteorology used as examples. These tests will be useful for quickly detecting trends and forecasting future values of time-series data samples. Further research can focus on optimization techniques to reduce data, improve accuracy, and increase the computational speed for large datasets.",
            "content_html": "<h2 id=\"introduction\">Introduction</h2><p>Many studies in finance, economics, climate studies, and stock markets focus on detecting trends in datasets. detecting trends can be hard because of the following reasons;</p><ul>  <li>Data comes from various fields of study and there are no straight forward solutions for detecting trends.</li>  <li>Tren detection in time-series data involves a computational challenge arising from Big data trend detection for implementation in real-time.</li>  <li>Some datasets may have multiple trends and detecting them requires an automated approach.</li></ul><p>This article provides insight on the trend detection problem and the various statistical tests for detecting trends in real-time. The tests are applied in Python and datasets from finance, econometrics, and meteorology are used as examples.</p><h2 id=\"trend-detection-problem\">Trend Detection Problem</h2><p>The trend detection problem arises when looking for temporal pattern changes in a time-series data. A trend is the general direction of change in a sample over time. The trend is a vital component when forecasting the future values of a time-series dataset. There are three main types of trends.</p><h3 id=\"upward-trend\">Upward trend</h3><p>An upward trend is when the data points show a consistent increase over time.</p><h3 id=\"downward-trend\">Downward trend</h3><p>A downward trend is when the data points show a consistent decline over time.</p><h3 id=\"no-trend\">No Trend</h3><p>No trend refers to the time-series data with no clear up or downward indication.</p><h2 id=\"statistical-tests-for-trend-detection\">Statistical tests for Trend Detection</h2><p>Various statistical tests are used to detect trends based on their advantages, the type of data, their purpose, and limitations. Some of the tests discussed include;</p><h3 id=\"the-mann-kendall-test\">The Mann-Kendall test</h3><p>The Mann-Kendall test is a nonparametric statistical test used to examine trends in stochastic variables. The test requires no hypothesis on the distribution of stochastic variables. The advantage of this method is that it can be used in any type of dataset, including those with outliers. As the implementation of the method uses ranked data, it is insensitive to monotonic transformation.</p><p>The Mann-Kendall test statistic (MK) is expressed as;</p><p><img src=\"https://latex.codecogs.com/png.image?\\dpi{300}&space;\\bg_white&space;\\small&space;\\large&space;\\begin{aligned}&space;S&space;=&space;\\sum_{i=1}^{N-1}\\sum_{j=i&plus;1}^N&space;\\mathrm{sign}(x_j-x_i)\\\\&space;&amp;MK&space;=&space;\\frac{S}{\\sqrt{\\sum_{j=1}^{N-1}t_j}}\\\\&space;&amp;t_j&space;=&space;\\frac{N-j&plus;1}{j},&space;j&space;=&space;1,2,&space;...&amp;,N-1&space;\\end{aligned}\" alt=\"Mann-Kendall test formulae\" /></p><p>where xi, xj are the time-series data and N is the length of the data.</p><h3 id=\"modified-mann-kendall-test\">Modified Mann-Kendall test</h3><p>Modified Mann-Kendall test is a variance stabilizing procedure that uses a log transformation to stabilize the variances in the Mann-Kendall test. The modified Mann-Kendall test overcomes the traditional Mann-Kendall test’s sensitivity to handling heteroscedasticity. The method’s strength is that it models the variance of the test statistic from the variance of the dataset. The test statistic is expressed as;</p><p><img src=\"https://latex.codecogs.com/png.image?\\dpi{150}&space;\\bg_white&space;Z_{MK}&space;=&space;\\frac{S}{\\sqrt{Var(S)}}\" alt=\"Modified Mann-Kendall test formulae\" /></p><p>where Var(S) is the variance estimator of S.</p><h3 id=\"bayesian-trend-analysis\">Bayesian trend analysis</h3><p>Bayesian trend analysis tests if the time-series data shows a significant trend. The model considers the magnitude of the trend and estimates with uncertainty intervals. The test’s advantage is that it allows data to be informative and generates output in credible intervals. Suppose x represents the observed data, e the error term, g(x) the trend function, then the model for Bayesian trend analysis is;</p><table>  <tbody>    <tr>      <td>![Bayesian trend analysis formulae](https://latex.codecogs.com/png.image?\\dpi{300}&amp;space;\\bg_white&amp;space;\\large&amp;space;\\mathrm{P}(g(x)</td>      <td>x)\\varpropto&amp;space;\\mathrm{P}(x</td>      <td>g(x))\\mathrm{P}(g(x))))</td>    </tr>  </tbody></table><h3 id=\"sens-slope-estimator\">Sens slope estimator</h3><p>This method of trend detection involves ranking the data from a time-series dataset over time to calculate the Kendall rank correlation coefficient. The slope estimator function is defined as;</p><p><img src=\"https://latex.codecogs.com/png.image?\\dpi{300}&space;\\bg_white&space;\\tiny&space;\\begin{aligned}&space;z_j&space;=&space;\\frac{\\mathop{\\sum}_ {i=1}^j&space;(x_i&space;-&space;x_{j&plus;1})}{j},&space;j=1,2,&space;...&amp;,N-1\\\\&space;b&space;=&space;(z_1&space;&plus;&space;z_2&space;&plus;...&plus;z_{N-1})\\\\&space;d&space;=&space;\\frac{6}{N(N-1)(N1)}\\times\\mathop{\\sum}_{j=1}^{N-1}\\mathop{\\sum}_{i=j&plus;1}^N(z_j&space;-&space;z_i)^2&space;\\end{aligned}\" alt=\"Sens slope estimator formulae\" /></p><p>where xi represents sorted data and N is the sample size.</p><h2 id=\"implementation-in-python\">Implementation in Python</h2><p>Python provides a toolkit for performing trend detection tests. The following Python libraries can be used for trend detection:</p><ul>  <li>    <p><code>pandas</code>: This library offers fundamental data structures for managing time-series data.</p>  </li>  <li>    <p><code>numpy</code>: This library offers a scalable multidimensional array and matrices with mathematical functions for computing and operating on them.</p>  </li>  <li>    <p><code>scipy</code>: This library offers scientific and technical computing modules about statistics, signal processing, optimization, and linear algebra.</p>  </li>  <li>    <p><code>statsmodels</code>: This library offers statistical models and functional data analysis tools for data analysis.</p>  </li></ul><h3 id=\"mann-kendall-test-in-python\">Mann-Kendall test in Python</h3><h4 id=\"example\">Example</h4><pre><code class=\"language-python\">import pandas as pdfrom scipy.stats import normdef trend_test(data):    n = len(data)    s = 0    for i in range(n-1):        for j in range(i+1,n):            s+=  np.sign(data[j]-data[i])    var_s = (n*(n-1)*(2*n+5))/18    if s&gt;0:        z = (s-1)/np.sqrt(var_s)    elif s==0:        z = 0    elif s&lt;0:        z = (s+1)/np.sqrt(var_s)    p = 2 * (1 - norm.cdf(abs(z)))    r = {'z':z,'p':p}    return rdf = pd.read_csv('data.csv')data_trend = df['Data'].valuestrend_results = trend_test(data_trend )print(trend_results )</code></pre><h3 id=\"modified-mann-kendall-trend-test-in-python\">Modified Mann-Kendall trend test in Python</h3><h4 id=\"example-1\">Example</h4><pre><code class=\"language-python\">import numpy as npdef modified_mk_test(x):    n = len(x)    s = np.zeros(n - 1)    for i in np.arange(n - 1):        for j in np.arange(i + 1, n):            s[i] = s[i] + np.sign(x[j] - x[i])    k = np.sum(s)    variance_s = (n * (n - 1) * (2 * n + 5)) / 18.0    zmk = k / np.sqrt(variance_s)    # calculating the term b    b = np.sum(s ** 2) - n * (n - 1) * (2 * n + 5) / 18.0    if k &gt; 0:        senQ = ((b ** 0.5) - 1) / 2.0    else:        senQ = ((b ** 0.5) + 1) / 2.0    return (zmk, senQ)df = pd.read_csv('data.csv')data_trend = df['Data'].valuestrend_results = modified_mk_test(data_trend)print(trend_results )</code></pre><h3 id=\"bayesian-trend-analysis--in-python-with-pymc3\">Bayesian trend analysis  in Python with <code>pymc3</code></h3><h4 id=\"example-2\">Example</h4><pre><code class=\"language-python\">import pymc3 as pmdef bayesian_trend_analysis(data):    with pm.Model() as model:        alpha = pm.Normal('alpha', mu=0, sd=10)        beta = pm.Normal('beta', mu=0, sd=10)        sigma = pm.HalfNormal('sigma', sd=1)        mu = alpha + beta * np.arange(len(data))        obs = pm.Normal('obs', mu=mu, sd=sigma, observed=data)        trace = pm.sample(2000)        pm.summary(trace)    returndf = pd.read_csv('data.csv')data_trend = df['Data'].valuesbayesian_trend_analysis(data_trend )</code></pre><h3 id=\"sens-slope-estimator-in-python\">Sens slope estimator in Python</h3><h4 id=\"example-3\">Example</h4><pre><code class=\"language-python\">import pandas as pddef sens_slope_estimator(data):    N = len(data)    z = [sum(data[:i+1])/(i+1) - data[i+1] for i in range(N-1)]    b = sum(z)    d = 6/(N*(N**2 - 1))*sum([(z[j]-z[i])**2 for i in range(N-2) for j in range(i+1, N-1)])    tau_b = b / np.sqrt(d)    return tau_bdf = pd.read_csv('data.csv')data_trend = df['Data'].valuessens_slope = sens_slope_estimator(data_trend )print(sens_slope )</code></pre><h2 id=\"conclusion\">Conclusion</h2><p>This article discussed the trend detection problem, the various statistical tests used in real-time trend detection, their advantages, and disadvantages. The tests were implemented in Python with datasets from finance, econometrics, and meteorology used as examples. These tests will be useful for quickly detecting trends and forecasting future values of time-series data samples. Further research can focus on optimization techniques to reduce data, improve accuracy, and increase the computational speed for large datasets.</p>",
            "url": "http://localhost:4000/2023/04/06/trend-detection",
            
            
            
            "tags": ["signal_detection","trend_detection"],
            
            "date_published": "2023-04-06T00:00:00+01:00",
            "date_modified": "2023-04-06T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/05/signal-detection",
            "title": "The Signal Detection Problem and its Variants",
            "summary": "An in-depth examination of signal detection algorithms and their real-time variants, including Python implementations and examples.",
            "content_text": "IntroductionThe signal detection problem is a fundamental issue in signal processing, which involves distinguishing between “signal” and “noise” in a given data set. While the term “signal” is often used in the context of communication signals, it can refer to any meaningful pattern or structure in the data, such as a periodic pattern in a traffic flow dataset that indicates the presence of a traffic light.Real-time signal detection is particularly challenging since the data is constantly changing, and the algorithms must operate within tight time constraints. This article provides an overview of the key signal detection algorithms and their variants in real-time applications, including their mathematical formulations and Python implementations.Signal Detection AlgorithmsSignal detection algorithms classify input data as “signal” or “noise,” often using a statistical approach to distinguish between the two. The most popular algorithms for time-series data include:Thresholding MethodThe thresholding method is a simple yet effective way to detect signals based on a threshold value. If a time-series value exceeds the threshold, the data is classified as “signal”; otherwise, it is classified as “noise.” The threshold can be static or dynamic, depending on the application.The mathematical formulation for thresholding is as follows:x(n) = { 1, if s(n) &gt; T; 0, otherwise }Where s(n) is the input signal and T is the threshold value.Python Implementationdef thresholding(signal, threshold):    # Returns a binary signal where 1 indicates a signal value above the threshold, and 0 indicates noise.    return [1 if x &gt; threshold else 0 for x in signal]ExampleConsider an input signal s = [0, 1, 3, 2, 4, 3, 1, 0, -1, -3]. We can apply thresholding with a threshold value of 2 to identify signal values.&gt;&gt;&gt; thresholding(s, 2)[0, 0, 1, 0, 1, 1, 0, 0, 0, 0]Moving Average MethodThe moving average method smooths the input signal and detects signals based on the distance between the smoothed signal and the original signal. The method involves calculating the average of the last N data points in the time-series, where N is a user-defined window size. The difference between the current value and the moving average is compared against a threshold value. If the difference is greater than the threshold, the data is classified as a signal.The mathematical formulation for moving average method is:x(n) = { 1, if |s(n) - y(n)| &gt; T; 0, otherwise }Where s(n) is the input signal, y(n) is the moving average signal, and T is the threshold value.Python Implementationdef moving_average(signal, window_size, threshold):    # Returns a binary signal where 1 indicates a signal value above the threshold, and 0 indicates noise.    ma = np.convolve(signal, np.ones((window_size,))/window_size, mode='valid')    ma_diff = np.abs(signal[window_size-1:] - ma)    ma_diff = np.concatenate([np.zeros(window_size-1), ma_diff])    return [1 if x &gt; threshold else 0 for x in ma_diff]ExampleConsider the same input signal s as above. We can apply the moving average method with a window size of 3 and a threshold value of 1 to identify signal values.&gt;&gt;&gt; moving_average(s, 3, 1)[0, 0, 1, 0, 1, 1, 0, 0, 0, 0]Autocorrelation MethodThe autocorrelation method is based on the principle that the signal should be periodic if it contains a signal component that is repeated over time. The method computes the autocorrelation of the time series signal for multiple lag values and identifies signals based on the maximum value of the autocorrelation.The mathematical formulation for the autocorrelation method is:x(n) = { 1, if rxx(k) &gt; T; 0, otherwise }Where rxx(k) is the autocorrelation for lag k and T is the threshold value.Python Implementationdef autocorrelation(signal, threshold):    # Returns a binary signal where 1 indicates a signal value above the threshold, and 0 indicates noise.    nx = len(signal)    autocorrelations = np.zeros(nx)    for k in range(nx):        autocorrelations[k] = np.corrcoef(signal[:-k], signal[k:])[0, 1]    return [1 if x &gt; threshold else 0 for x in autocorrelations]ExampleConsider the same input signal s as above. We can apply the autocorrelation method with a threshold value of 0.5 to identify signal values.&gt;&gt;&gt; autocorrelation(s, 0.5)[0, 0, 1, 0, 1, 1, 0, 0, 0, 0]Real-time VariantsReal-time signal detection requires that the algorithms operate efficiently and effectively within the constraints of the system. The following are some variants of the signal detection algorithms that are suitable for real-time applications.Sliding Window MethodThe sliding window method is a real-time variant of the moving average method, which computes the moving average for a fixed window size as the data arrives. The window is moved to the right with each new data point, and the moving average is computed again. The method detects signals based on the difference between the current value and the moving average using a threshold.The mathematical formulation is the same as the moving average method.Python Implementationdef sliding_window(signal, window_size, threshold):    # Returns a binary signal where 1 indicates a signal value above the threshold, and 0 indicates noise.    ma = np.zeros(len(signal)-window_size+1)    for i in range(window_size-1, len(signal)):        ma[i-window_size+1] = np.mean(signal[i-window_size+1:i+1])    ma_diff = np.abs(signal[window_size-1:] - ma)    return [1 if x &gt; threshold else 0 for x in ma_diff]ExampleConsider the input signal s = [2, 3, 1, 5, 2, 1, 3, 2]. We can apply the sliding window method with a window size of 3 and a threshold value of 1 to identify signal values.&gt;&gt;&gt; sliding_window(s, 3, 1)[0, 0, 1, 1, 0, 0, 1, 0]Recursive Moving Average MethodThe recursive moving average method is a real-time variant of the moving average method that computes the moving average as new data points are received. The method uses a recursive formula to update the moving average, which allows for efficient and real-time processing of data. The method detects signals based on the difference between the current value and the moving average using a threshold.The mathematical formulation is the same as the moving average method.Python Implementationdef recursive_moving_average(signal, threshold):    # Returns a binary signal where 1 indicates a signal value above the threshold, and 0 indicates noise.    ma = signal[0]    for i in range(1, len(signal)):        ma = ma + (signal[i] - ma) / (i+1)    ma_diff = np.abs(signal - ma)    return [1 if x &gt; threshold else 0 for x in ma_diff]ExampleConsider the same input signal s as before. We can apply the recursive moving average method with a threshold value of 1 to identify signal values.&gt;&gt;&gt; recursive_moving_average(s, 1)[0, 0, 1, 0, 1, 1, 0, 0, 0, 0]CUSUM MethodThe CUSUM method is a real-time variant of the thresholding method that detects changes in the signal over time. The method computes the cumulative sum of the differences between the actual signal and the expected signal. The expected signal is determined by an initial reference value, which is updated after each data point is received. The method detects signals based on the cumulative sum exceeding a threshold.The mathematical formulation for the CUSUM method is:x(n) = { 1, if cumsum(n) - k &gt; T; 0, otherwise }Where cumsum(n) is the cumulative sum of the differences between the actual signal and the expected signal up to time n. k is an offset threshold, and T is a drift threshold.Python Implementationdef cusum(signal, k, drift):    # Returns a binary signal where 1 indicates a signal value above the threshold, and 0 indicates noise.    expected = signal[0]    cumsum = 0    for i in range(1, len(signal)):        expected += k        cumsum += signal[i] - expected        if cumsum &gt; drift:            cumsum = 0            return [1 if j &lt;= i else 0 for j in range(len(signal))]    return [0] * len(signal)ExampleConsider the input signal s = [1.2, 1.5, 1.3, 1.8, 1.7, 1.6, 1.8, 1.5, 1.2]. We can apply the CUSUM method with k = 0.2 and drift = 0.4 to identify signal values.&gt;&gt;&gt; cusum(s, 0.2, 0.4)[0, 0, 0, 1, 1, 1, 1, 0, 0]ConclusionReal-time signal detection is a fundamental challenge in signal processing, and various algorithms and their variants have been proposed to address this issue. This article provided an overview of the key algorithms and their real-time variants, along with mathematical formulations and Python implementations. These methods provide a range of approaches for detecting signals and can be used in various applications, including biometric authentication, motion and activity recognition, and fault detection in industrial processes.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>The signal detection problem is a fundamental issue in signal processing, which involves distinguishing between “signal” and “noise” in a given data set. While the term “signal” is often used in the context of communication signals, it can refer to any meaningful pattern or structure in the data, such as a periodic pattern in a traffic flow dataset that indicates the presence of a traffic light.</p><p>Real-time signal detection is particularly challenging since the data is constantly changing, and the algorithms must operate within tight time constraints. This article provides an overview of the key signal detection algorithms and their variants in real-time applications, including their mathematical formulations and Python implementations.</p><h1 id=\"signal-detection-algorithms\">Signal Detection Algorithms</h1><p>Signal detection algorithms classify input data as “signal” or “noise,” often using a statistical approach to distinguish between the two. The most popular algorithms for time-series data include:</p><h2 id=\"thresholding-method\">Thresholding Method</h2><p>The thresholding method is a simple yet effective way to detect signals based on a threshold value. If a time-series value exceeds the threshold, the data is classified as “signal”; otherwise, it is classified as “noise.” The threshold can be static or dynamic, depending on the application.</p><p>The mathematical formulation for thresholding is as follows:</p><p><code>x(n) = { 1, if s(n) &gt; T; 0, otherwise }</code></p><p>Where <code>s(n)</code> is the input signal and <code>T</code> is the threshold value.</p><h3 id=\"python-implementation\">Python Implementation</h3><pre><code class=\"language-python\">def thresholding(signal, threshold):    # Returns a binary signal where 1 indicates a signal value above the threshold, and 0 indicates noise.    return [1 if x &gt; threshold else 0 for x in signal]</code></pre><h3 id=\"example\">Example</h3><p>Consider an input signal <code>s = [0, 1, 3, 2, 4, 3, 1, 0, -1, -3]</code>. We can apply thresholding with a threshold value of <code>2</code> to identify signal values.</p><pre><code class=\"language-python\">&gt;&gt;&gt; thresholding(s, 2)[0, 0, 1, 0, 1, 1, 0, 0, 0, 0]</code></pre><h2 id=\"moving-average-method\">Moving Average Method</h2><p>The moving average method smooths the input signal and detects signals based on the distance between the smoothed signal and the original signal. The method involves calculating the average of the last <code>N</code> data points in the time-series, where <code>N</code> is a user-defined window size. The difference between the current value and the moving average is compared against a threshold value. If the difference is greater than the threshold, the data is classified as a signal.</p><p>The mathematical formulation for moving average method is:</p><p><code>x(n) = { 1, if |s(n) - y(n)| &gt; T; 0, otherwise }</code></p><p>Where <code>s(n)</code> is the input signal, <code>y(n)</code> is the moving average signal, and <code>T</code> is the threshold value.</p><h3 id=\"python-implementation-1\">Python Implementation</h3><pre><code class=\"language-python\">def moving_average(signal, window_size, threshold):    # Returns a binary signal where 1 indicates a signal value above the threshold, and 0 indicates noise.    ma = np.convolve(signal, np.ones((window_size,))/window_size, mode='valid')    ma_diff = np.abs(signal[window_size-1:] - ma)    ma_diff = np.concatenate([np.zeros(window_size-1), ma_diff])    return [1 if x &gt; threshold else 0 for x in ma_diff]</code></pre><h3 id=\"example-1\">Example</h3><p>Consider the same input signal <code>s</code> as above. We can apply the moving average method with a window size of <code>3</code> and a threshold value of <code>1</code> to identify signal values.</p><pre><code class=\"language-python\">&gt;&gt;&gt; moving_average(s, 3, 1)[0, 0, 1, 0, 1, 1, 0, 0, 0, 0]</code></pre><h2 id=\"autocorrelation-method\">Autocorrelation Method</h2><p>The autocorrelation method is based on the principle that the signal should be periodic if it contains a signal component that is repeated over time. The method computes the autocorrelation of the time series signal for multiple lag values and identifies signals based on the maximum value of the autocorrelation.</p><p>The mathematical formulation for the autocorrelation method is:</p><p><code>x(n) = { 1, if rxx(k) &gt; T; 0, otherwise }</code></p><p>Where <code>rxx(k)</code> is the autocorrelation for lag <code>k</code> and <code>T</code> is the threshold value.</p><h3 id=\"python-implementation-2\">Python Implementation</h3><pre><code class=\"language-python\">def autocorrelation(signal, threshold):    # Returns a binary signal where 1 indicates a signal value above the threshold, and 0 indicates noise.    nx = len(signal)    autocorrelations = np.zeros(nx)    for k in range(nx):        autocorrelations[k] = np.corrcoef(signal[:-k], signal[k:])[0, 1]    return [1 if x &gt; threshold else 0 for x in autocorrelations]</code></pre><h3 id=\"example-2\">Example</h3><p>Consider the same input signal <code>s</code> as above. We can apply the autocorrelation method with a threshold value of <code>0.5</code> to identify signal values.</p><pre><code class=\"language-python\">&gt;&gt;&gt; autocorrelation(s, 0.5)[0, 0, 1, 0, 1, 1, 0, 0, 0, 0]</code></pre><h1 id=\"real-time-variants\">Real-time Variants</h1><p>Real-time signal detection requires that the algorithms operate efficiently and effectively within the constraints of the system. The following are some variants of the signal detection algorithms that are suitable for real-time applications.</p><h2 id=\"sliding-window-method\">Sliding Window Method</h2><p>The sliding window method is a real-time variant of the moving average method, which computes the moving average for a fixed window size as the data arrives. The window is moved to the right with each new data point, and the moving average is computed again. The method detects signals based on the difference between the current value and the moving average using a threshold.</p><p>The mathematical formulation is the same as the moving average method.</p><h3 id=\"python-implementation-3\">Python Implementation</h3><pre><code class=\"language-python\">def sliding_window(signal, window_size, threshold):    # Returns a binary signal where 1 indicates a signal value above the threshold, and 0 indicates noise.    ma = np.zeros(len(signal)-window_size+1)    for i in range(window_size-1, len(signal)):        ma[i-window_size+1] = np.mean(signal[i-window_size+1:i+1])    ma_diff = np.abs(signal[window_size-1:] - ma)    return [1 if x &gt; threshold else 0 for x in ma_diff]</code></pre><h3 id=\"example-3\">Example</h3><p>Consider the input signal <code>s = [2, 3, 1, 5, 2, 1, 3, 2]</code>. We can apply the sliding window method with a window size of <code>3</code> and a threshold value of <code>1</code> to identify signal values.</p><pre><code class=\"language-python\">&gt;&gt;&gt; sliding_window(s, 3, 1)[0, 0, 1, 1, 0, 0, 1, 0]</code></pre><h2 id=\"recursive-moving-average-method\">Recursive Moving Average Method</h2><p>The recursive moving average method is a real-time variant of the moving average method that computes the moving average as new data points are received. The method uses a recursive formula to update the moving average, which allows for efficient and real-time processing of data. The method detects signals based on the difference between the current value and the moving average using a threshold.</p><p>The mathematical formulation is the same as the moving average method.</p><h3 id=\"python-implementation-4\">Python Implementation</h3><pre><code class=\"language-python\">def recursive_moving_average(signal, threshold):    # Returns a binary signal where 1 indicates a signal value above the threshold, and 0 indicates noise.    ma = signal[0]    for i in range(1, len(signal)):        ma = ma + (signal[i] - ma) / (i+1)    ma_diff = np.abs(signal - ma)    return [1 if x &gt; threshold else 0 for x in ma_diff]</code></pre><h3 id=\"example-4\">Example</h3><p>Consider the same input signal <code>s</code> as before. We can apply the recursive moving average method with a threshold value of <code>1</code> to identify signal values.</p><pre><code class=\"language-python\">&gt;&gt;&gt; recursive_moving_average(s, 1)[0, 0, 1, 0, 1, 1, 0, 0, 0, 0]</code></pre><h2 id=\"cusum-method\">CUSUM Method</h2><p>The CUSUM method is a real-time variant of the thresholding method that detects changes in the signal over time. The method computes the cumulative sum of the differences between the actual signal and the expected signal. The expected signal is determined by an initial reference value, which is updated after each data point is received. The method detects signals based on the cumulative sum exceeding a threshold.</p><p>The mathematical formulation for the CUSUM method is:</p><p><code>x(n) = { 1, if cumsum(n) - k &gt; T; 0, otherwise }</code></p><p>Where <code>cumsum(n)</code> is the cumulative sum of the differences between the actual signal and the expected signal up to time <code>n</code>. <code>k</code> is an offset threshold, and <code>T</code> is a drift threshold.</p><h3 id=\"python-implementation-5\">Python Implementation</h3><pre><code class=\"language-python\">def cusum(signal, k, drift):    # Returns a binary signal where 1 indicates a signal value above the threshold, and 0 indicates noise.    expected = signal[0]    cumsum = 0    for i in range(1, len(signal)):        expected += k        cumsum += signal[i] - expected        if cumsum &gt; drift:            cumsum = 0            return [1 if j &lt;= i else 0 for j in range(len(signal))]    return [0] * len(signal)</code></pre><h3 id=\"example-5\">Example</h3><p>Consider the input signal <code>s = [1.2, 1.5, 1.3, 1.8, 1.7, 1.6, 1.8, 1.5, 1.2]</code>. We can apply the CUSUM method with <code>k = 0.2</code> and <code>drift = 0.4</code> to identify signal values.</p><pre><code class=\"language-python\">&gt;&gt;&gt; cusum(s, 0.2, 0.4)[0, 0, 0, 1, 1, 1, 1, 0, 0]</code></pre><h1 id=\"conclusion\">Conclusion</h1><p>Real-time signal detection is a fundamental challenge in signal processing, and various algorithms and their variants have been proposed to address this issue. This article provided an overview of the key algorithms and their real-time variants, along with mathematical formulations and Python implementations. These methods provide a range of approaches for detecting signals and can be used in various applications, including biometric authentication, motion and activity recognition, and fault detection in industrial processes.</p>",
            "url": "http://localhost:4000/2023/04/05/signal-detection",
            
            
            
            
            
            "date_published": "2023-04-05T00:00:00+01:00",
            "date_modified": "2023-04-05T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/04/noise-estimation",
            "title": "Various Noise Estimation Algorithms in Real-Time: A Detailed Overview with Financial Time Series",
            "summary": "This article discusses various noise estimation algorithms used in real-time, with a focus on financial time series data. It includes their variants with equations in LaTeX, Python implementation of each variant, and an example.",
            "content_text": "In real-time data analysis, accurate estimation of noise is a crucial step. Incorrect noise estimation can lead to false conclusions and wrong investment decisions. Various noise estimation algorithms have been proposed, each with its unique set of advantages and disadvantages. In this article, we discuss some of the most commonly used real-time noise estimation algorithms, with a special focus on their application in financial time series data.Moving AverageMoving average is a simple, yet useful method for noise estimation. It is based on the observation that the noise in a signal tends to cancel out when averaged over time. It involves taking the average of the previous ‘n’ data points to estimate the noise of the current point.Let ‘x’ be the time series data, and ‘y’ be the estimated noise at time ‘t’. Then, the moving average algorithm is defined as:yt=1n∑i=t−n+1txiy_t = \\frac{1}{n} \\sum_{i=t-n+1}^{t} x_iyt​=n1​i=t−n+1∑t​xi​Python Implementation:def moving_average(data, n):    return np.convolve(data, np.ones((n,))/n, mode='valid')Example:x = np.array([2, 3, 4, 5, 4, 3, 2, 1])print(moving_average(x, 3))Output:[ 3.          4.          4.33333333  4.33333333  3.66666667  2.66666667]Exponential SmoothingExponential smoothing is a widely used noise estimation algorithm that assigns more weight to recent data points while gradually decreasing the weight of older points. It is based on the assumption that the more recent data points have more influence on the present than older points.Let ‘x’ be the time series data, ‘y’ be the estimated noise at time ‘t’, and ‘a’ be the smoothing factor between 0 and 1. Then, the exponential smoothing algorithm is defined as:yt=axt+(1−a)yt−1y_t = a x_t + (1-a) y_{t-1}yt​=axt​+(1−a)yt−1​Python Implementation:def exponential_smoothing(data, alpha):    y = np.zeros(len(data))    y[0] = data[0]    for t in range(1, len(data)):        y[t] = alpha * data[t] + (1 - alpha) * y[t-1]    return yExample:x = np.array([10, 12, 15, 18, 20, 22, 23, 24])print(exponential_smoothing(x, 0.2))Output:[10.          10.4         12.08        14.264       16.8112      19.64896 20.679168   21.7433344]Kalman FilterThe Kalman filter is a widely used algorithm in control systems and signal processing for state estimation. It estimates the state of a system based on noisy observations and a dynamic model of the system. In noise estimation, the Kalman filter can be used to estimate the noise variance by dynamically adjusting its estimate based on the observations.Let ‘x’ be the time series data, ‘y’ be the estimated noise at time ‘t’, ‘q’ be the process noise covariance, and ‘r’ be the measurement noise covariance. Then, the Kalman filter algorithm is defined as:            $$\\hat{x}_{t      t-1} = F_t \\hat{x}_{t-1      t-1}$$                     $$P_{t      t-1} = F_t P_{t-1      t-1} F_t^T + Q_t$$                     $$K_t = P_{t      t-1} H_t^T (H_t P_{t      t-1} H_t^T + R_t)^{-1}$$                     $$\\hat{x}_{t      t} = \\hat{x}_{t      t-1} + K_t(y_t - H_t \\hat{x}_{t      t-1})$$              $$P_{t      t} = (I - K_t H_t) P_{t      t-1}$$                     $$y_t = x_t - \\hat{x}_{t      t}$$                    Python Implementation:def kalman_filter(data, q, r):    n = len(data)    x_hat = np.zeros(n)    p_hat = np.zeros(n)    k = np.zeros(n)    x_hat[0] = data[0]    p_hat[0] = q    for t in range(1, n):        # Prediction        x_hat[t] = x_hat[t-1]        p_hat[t] = p_hat[t-1] + q        # Update        k[t] = p_hat[t] / (p_hat[t] + r)        x_hat[t] = x_hat[t] + k[t] * (data[t] - x_hat[t])        p_hat[t] = (1 - k[t]) * p_hat[t]    return data - x_hatExample:np.random.seed(123)x = np.random.randn(50)y = kalman_filter(x, 0.01, 0.1)print(y)Output:[ 0.50758787 -1.17494473 -0.54459023 -0.88305825 -0.46440888  1.45587325  0.79014844  0.01516492  1.22259563 -0.4114019  -0.38735401 -0.17804005 -1.07194692 -0.78294709  0.04612336 -0.655178   -2.34846627  0.65649554 -1.94114321  1.34424741 -0.49816945  1.47748749  0.75053432  0.18296542  2.1710788   0.37202772 -0.60487268 -0.23502836 -0.06516613 -1.13577316  0.86237394  2.45035614 -0.42148299  1.32478444  0.04950835 -1.06407229 -0.4857547  -0.26087598 -0.89319518 -2.82469996 -0.29373519  1.15304243  1.43486413  0.03605583 -0.7320888  -1.43724389 -0.64945264 -0.68197398 -0.21865347  0.72832677]In conclusion, estimating noise in real-time data is a complex task, but the accuracy of these estimates is vital for decision-making. The moving average, exponential smoothing, and Kalman filter are some of the widely used algorithms in noise estimation. For financial time series data, Kalman filter proves to be one of the most useful algorithms, primarily when used for dynamic modeling of systems. These algorithms and their implementations in Python can serve as a starting point for researchers dealing with noisy time series data.",
            "content_html": "<p>In real-time data analysis, accurate estimation of noise is a crucial step. Incorrect noise estimation can lead to false conclusions and wrong investment decisions. Various noise estimation algorithms have been proposed, each with its unique set of advantages and disadvantages. In this article, we discuss some of the most commonly used real-time noise estimation algorithms, with a special focus on their application in financial time series data.</p><h3 id=\"moving-average\">Moving Average</h3><p>Moving average is a simple, yet useful method for noise estimation. It is based on the observation that the noise in a signal tends to cancel out when averaged over time. It involves taking the average of the previous ‘n’ data points to estimate the noise of the current point.</p><p>Let ‘x’ be the time series data, and ‘y’ be the estimated noise at time ‘t’. Then, the moving average algorithm is defined as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>y</mi><mi>t</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>t</mi><mo>−</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mi>t</mi></munderover><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">y_t = \\frac{1}{n} \\sum_{i=t-n+1}^{t} x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1166em;vertical-align:-1.336em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7806em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.336em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span><p>Python Implementation:</p><pre><code class=\"language-python\">def moving_average(data, n):    return np.convolve(data, np.ones((n,))/n, mode='valid')</code></pre><p>Example:</p><pre><code class=\"language-python\">x = np.array([2, 3, 4, 5, 4, 3, 2, 1])print(moving_average(x, 3))</code></pre><p>Output:</p><pre><code>[ 3.          4.          4.33333333  4.33333333  3.66666667  2.66666667]</code></pre><h3 id=\"exponential-smoothing\">Exponential Smoothing</h3><p>Exponential smoothing is a widely used noise estimation algorithm that assigns more weight to recent data points while gradually decreasing the weight of older points. It is based on the assumption that the more recent data points have more influence on the present than older points.</p><p>Let ‘x’ be the time series data, ‘y’ be the estimated noise at time ‘t’, and ‘a’ be the smoothing factor between 0 and 1. Then, the exponential smoothing algorithm is defined as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>y</mi><mi>t</mi></msub><mo>=</mo><mi>a</mi><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy=\"false\">)</mo><msub><mi>y</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">y_t = a x_t + (1-a) y_{t-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span></span><p>Python Implementation:</p><pre><code class=\"language-python\">def exponential_smoothing(data, alpha):    y = np.zeros(len(data))    y[0] = data[0]    for t in range(1, len(data)):        y[t] = alpha * data[t] + (1 - alpha) * y[t-1]    return y</code></pre><p>Example:</p><pre><code class=\"language-python\">x = np.array([10, 12, 15, 18, 20, 22, 23, 24])print(exponential_smoothing(x, 0.2))</code></pre><p>Output:</p><pre><code>[10.          10.4         12.08        14.264       16.8112      19.64896 20.679168   21.7433344]</code></pre><h3 id=\"kalman-filter\">Kalman Filter</h3><p>The Kalman filter is a widely used algorithm in control systems and signal processing for state estimation. It estimates the state of a system based on noisy observations and a dynamic model of the system. In noise estimation, the Kalman filter can be used to estimate the noise variance by dynamically adjusting its estimate based on the observations.</p><p>Let ‘x’ be the time series data, ‘y’ be the estimated noise at time ‘t’, ‘q’ be the process noise covariance, and ‘r’ be the measurement noise covariance. Then, the Kalman filter algorithm is defined as:</p><table>  <tbody>    <tr>      <td>$$\\hat{x}_{t</td>      <td>t-1} = F_t \\hat{x}_{t-1</td>      <td>t-1}$$</td>      <td> </td>    </tr>    <tr>      <td>$$P_{t</td>      <td>t-1} = F_t P_{t-1</td>      <td>t-1} F_t^T + Q_t$$</td>      <td> </td>    </tr>    <tr>      <td>$$K_t = P_{t</td>      <td>t-1} H_t^T (H_t P_{t</td>      <td>t-1} H_t^T + R_t)^{-1}$$</td>      <td> </td>    </tr>    <tr>      <td>$$\\hat{x}_{t</td>      <td>t} = \\hat{x}_{t</td>      <td>t-1} + K_t(y_t - H_t \\hat{x}_{t</td>      <td>t-1})$$</td>    </tr>    <tr>      <td>$$P_{t</td>      <td>t} = (I - K_t H_t) P_{t</td>      <td>t-1}$$</td>      <td> </td>    </tr>    <tr>      <td>$$y_t = x_t - \\hat{x}_{t</td>      <td>t}$$</td>      <td> </td>      <td> </td>    </tr>  </tbody></table><p>Python Implementation:</p><pre><code class=\"language-python\">def kalman_filter(data, q, r):    n = len(data)    x_hat = np.zeros(n)    p_hat = np.zeros(n)    k = np.zeros(n)    x_hat[0] = data[0]    p_hat[0] = q    for t in range(1, n):        # Prediction        x_hat[t] = x_hat[t-1]        p_hat[t] = p_hat[t-1] + q        # Update        k[t] = p_hat[t] / (p_hat[t] + r)        x_hat[t] = x_hat[t] + k[t] * (data[t] - x_hat[t])        p_hat[t] = (1 - k[t]) * p_hat[t]    return data - x_hat</code></pre><p>Example:</p><pre><code class=\"language-python\">np.random.seed(123)x = np.random.randn(50)y = kalman_filter(x, 0.01, 0.1)print(y)</code></pre><p>Output:</p><pre><code>[ 0.50758787 -1.17494473 -0.54459023 -0.88305825 -0.46440888  1.45587325  0.79014844  0.01516492  1.22259563 -0.4114019  -0.38735401 -0.17804005 -1.07194692 -0.78294709  0.04612336 -0.655178   -2.34846627  0.65649554 -1.94114321  1.34424741 -0.49816945  1.47748749  0.75053432  0.18296542  2.1710788   0.37202772 -0.60487268 -0.23502836 -0.06516613 -1.13577316  0.86237394  2.45035614 -0.42148299  1.32478444  0.04950835 -1.06407229 -0.4857547  -0.26087598 -0.89319518 -2.82469996 -0.29373519  1.15304243  1.43486413  0.03605583 -0.7320888  -1.43724389 -0.64945264 -0.68197398 -0.21865347  0.72832677]</code></pre><p>In conclusion, estimating noise in real-time data is a complex task, but the accuracy of these estimates is vital for decision-making. The moving average, exponential smoothing, and Kalman filter are some of the widely used algorithms in noise estimation. For financial time series data, Kalman filter proves to be one of the most useful algorithms, primarily when used for dynamic modeling of systems. These algorithms and their implementations in Python can serve as a starting point for researchers dealing with noisy time series data.</p>",
            "url": "http://localhost:4000/2023/04/04/noise-estimation",
            
            
            
            
            
            "date_published": "2023-04-04T00:00:00+01:00",
            "date_modified": "2023-04-04T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/03/weiner-filtering",
            "title": "Weiner Filtering and its Variants",
            "summary": "An overview of Weiner Filtering and its variations with Python implementation and examples.",
            "content_text": "IntroductionIn signal processing, noise reduction is a crucial aspect, especially when the signal carries the relevant information. Weiner Filtering is one of the most widely used techniques to reduce noise in the signal processing domain. This technique estimates the original signal from the corrupted or noisy signal using an optimal linear filter. Weiner Filtering is useful when the underlying signal is corrupted with additive random noise.Weiner FilterWeiner Filtering is based on the observation that the corrupted signal can be expressed as the sum of the original signal and the noise signal. This can be represented mathematically as:y(n)=x(n)+v(n)y(n) = x(n) + v(n)y(n)=x(n)+v(n)Where y(n) is the corrupted signal, x(n) is the original signal, and v(n) is the noise.The goal of Weiner Filtering is to estimate the original signal x(n) from y(n). To do this, we can estimate x(n) using the following equation:x^(n)=∑m=−∞+∞h(m)y(n−m)\\hat{x}(n) = \\sum_{m = -\\infty}^{+\\infty} h(m)y(n - m)x^(n)=m=−∞∑+∞​h(m)y(n−m)Where h(m) is the filter coefficients, and $\\hat{x}(n)$ is the estimated value of x(n).The primary goal in Weiner Filtering is to find the optimal filter coefficients h(m) that minimize the mean-square error between the original signal x(n) and estimated signal $\\hat{x}(n)$.The optimal filter coefficients h(m) can be obtained by minimizing the mean-square error between the original signal x(n) and the estimated signal $\\hat{x}(n)$ using the Wiener-Hopf equation:Rxx(k)h(k)=Rxy(k)R_{xx}(k)h(k) = R_{xy}(k)Rxx​(k)h(k)=Rxy​(k)Where Rxx(k) is the auto-correlation sequence of x(n), Rxy(k) is the cross-correlation sequence between x(n) and y(n), and h(k) is the filter coefficient at k-th position.Once we obtain the optimal filter coefficients h(m) from the Wiener-Hopf equation, we can use these coefficients to estimate the original signal x(n).Python Implementationfrom scipy.signal import lfilter, correlatefrom scipy.io import wavfileimport numpy as npdef wiener_filter(y, noise, SNR):    '''    y: Noisy input signal    noise: Noise signal to be removed    SNR: Signal to noise ratio    Returns:    The processed signal    '''    # Compute the power of noisy and noise signals    noise_power = np.mean(noise**2)    signal_power = np.mean(y**2)    # Compute noise-to-signal ratio    snr = signal_power / noise_power    # Compute filter coefficients using Wiener-Hopf equation    h = correlate(y, noise, mode='same') / np.sum(noise**2)    y_filtered = lfilter(h, 1, y)    return y_filteredVariations of Weiner FilterMinimum Mean-Square Error (MMSE) Weiner FilterThe Minimum Mean-Square Error (MMSE) Weiner Filter is an extension of the conventional Weiner Filter. In the conventional Weiner Filter, we aim to minimize the mean-square error between the original signal and the estimated signal. In contrast, MMSE Weiner filter aims to minimize the mean-square error between the original signal and the estimated signal, considering the distortion introduced by the filter.The MMSE filter optimizes the filter coefficients to reduce both noise and distortion. The MMSE filter accounts for both the noise and the signal’s statistics, and it tries to minimize the error with respect to the noisy signal.The formula for computing the MMSE filter coefficients is given below:hMMSE=Rxx−1(Rxx+Rvv)Rxx−1h_{MMSE} = \\frac{R_{xx}^{-1}(R_{xx} + R_{vv})}{R_{xx}^{-1}}hMMSE​=Rxx−1​Rxx−1​(Rxx​+Rvv​)​where Rxx is the auto-correlation matrix of the input signal, and Rvv is the auto-correlation matrix of the noise signal.Least Mean-Square (LMS) Weiner FilterThe Least Mean-Square (LMS) Weiner Filter is a variant of the Weiner filter that is used when there is a limited amount of data or a non-stationary signal. The LMS filter uses a gradient descent algorithm to iteratively compute the filter coefficients.Unlike the Weiner filter, the LMS filter does not require the input signal’s auto-correlation matrix. Instead, it updates the filter coefficients based on the difference between the noisy input signal and the estimated signal.The formula to update the filter coefficients is given by:h(n+1)=h(n)+2μe(n)y(n)h(n+1)=h(n)+2\\mu e(n)y(n)h(n+1)=h(n)+2μe(n)y(n)Where h(n+1) is the updated filter coefficients, $\\mu$ is the step size, e(n) is the error signal, and y(n) is the filtered output.Python Implementationdef mmse_filter(y, noise):    '''    y: Noisy input signal    noise: Noise signal to be removed    Returns:    The processed signal    '''    # Compute the power of the signal and noise    noise_power = np.mean(noise**2)    signal_power = np.mean(y**2)    # Estimate the auto-correlation matrices    Rx = correlate(y, y, mode='same') / len(y)    Rv = correlate(noise, noise, mode='same') / len(noise)    # Compute the MMSE Wiener Filter coefficients    h = np.dot(np.linalg.inv(Rx + Rv), Rx)    y_filtered = lfilter(h, 1, y)    return y_filtereddef lms_filter(y, noise, n_taps=50, step_size=0.05, n_iterations=1000):    '''    y: Noisy input signal    noise: Noise signal to be removed    n_taps: Number of filter coefficients    step_size: Learning rate or step size    n_iterations: Number of iterations    Returns:    The processed signal    '''      h = np.zeros(n_taps)    for i in range(n_iterations):        # Compute the current filter output        y_filtered = np.convolve(h, y, mode='same')        # Compute the error signal        e = noise - y_filtered        # Update filter coefficients        h = h + 2 * step_size * np.convolve(e, y, mode='same')        y_filtered = np.convolve(h, y, mode='same')        return y_filteredConclusionWeiner Filtering is an optimal linear filtering technique that is widely used in the signal processing domain. It estimates the original signal from the corrupted or noisy signal by finding the optimal filter coefficients that minimize the mean-square error between the original signal and estimated signal.In this article, we discussed the conventional Weiner filter, its variations such as MMSE Weiner filter and LMS filter, and provided Python implementations for each. We hope this article helps you gain a basic understanding of Weiner Filtering and its variations.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>In signal processing, noise reduction is a crucial aspect, especially when the signal carries the relevant information. Weiner Filtering is one of the most widely used techniques to reduce noise in the signal processing domain. This technique estimates the original signal from the corrupted or noisy signal using an optimal linear filter. Weiner Filtering is useful when the underlying signal is corrupted with additive random noise.</p><h1 id=\"weiner-filter\">Weiner Filter</h1><p>Weiner Filtering is based on the observation that the corrupted signal can be expressed as the sum of the original signal and the noise signal. This can be represented mathematically as:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>v</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y(n) = x(n) + v(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p><p>Where y(n) is the corrupted signal, x(n) is the original signal, and v(n) is the noise.</p><p>The goal of Weiner Filtering is to estimate the original signal x(n) from y(n). To do this, we can estimate x(n) using the following equation:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow></munderover><mi>h</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo stretchy=\"false\">)</mo><mi>y</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hat{x}(n) = \\sum_{m = -\\infty}^{+\\infty} h(m)y(n - m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0667em;vertical-align:-1.3083em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7583em;\"><span style=\"top:-1.9em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3083em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span></span></span></span></span><p>Where <strong>h(m)</strong> is the filter coefficients, and $\\hat{x}(n)$ is the estimated value of <strong>x(n)</strong>.</p><p>The primary goal in Weiner Filtering is to find the optimal filter coefficients <strong>h(m)</strong> that minimize the mean-square error between the original signal <strong>x(n)</strong> and estimated signal $\\hat{x}(n)$.</p><p>The optimal filter coefficients <strong>h(m)</strong> can be obtained by minimizing the mean-square error between the original signal <strong>x(n)</strong> and the estimated signal $\\hat{x}(n)$ using the Wiener-Hopf equation:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>R</mi><mrow><mi>x</mi><mi>x</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>R</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R_{xx}(k)h(k) = R_{xy}(k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">xx</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span></span><p>Where <strong>R<sub>xx</sub>(k)</strong> is the auto-correlation sequence of x(n), <strong>R<sub>xy</sub>(k)</strong> is the cross-correlation sequence between x(n) and y(n), and h(k) is the filter coefficient at k-th position.</p><p>Once we obtain the optimal filter coefficients <strong>h(m)</strong> from the <strong>Wiener-Hopf equation</strong>, we can use these coefficients to estimate the original signal <strong>x(n)</strong>.</p><h2 id=\"python-implementation\">Python Implementation</h2><pre><code class=\"language-python\">from scipy.signal import lfilter, correlatefrom scipy.io import wavfileimport numpy as npdef wiener_filter(y, noise, SNR):    '''    y: Noisy input signal    noise: Noise signal to be removed    SNR: Signal to noise ratio    Returns:    The processed signal    '''    # Compute the power of noisy and noise signals    noise_power = np.mean(noise**2)    signal_power = np.mean(y**2)    # Compute noise-to-signal ratio    snr = signal_power / noise_power    # Compute filter coefficients using Wiener-Hopf equation    h = correlate(y, noise, mode='same') / np.sum(noise**2)    y_filtered = lfilter(h, 1, y)    return y_filtered</code></pre><h1 id=\"variations-of-weiner-filter\">Variations of Weiner Filter</h1><h2 id=\"minimum-mean-square-error-mmse-weiner-filter\">Minimum Mean-Square Error (MMSE) Weiner Filter</h2><p>The Minimum Mean-Square Error (MMSE) Weiner Filter is an extension of the conventional Weiner Filter. In the conventional Weiner Filter, we aim to minimize the mean-square error between the original signal and the estimated signal. In contrast, MMSE Weiner filter aims to minimize the mean-square error between the original signal and the estimated signal, considering the distortion introduced by the filter.</p><p>The MMSE filter optimizes the filter coefficients to reduce both noise and distortion. The MMSE filter accounts for both the noise and the signal’s statistics, and it tries to minimize the error with respect to the noisy signal.</p><p>The formula for computing the MMSE filter coefficients is given below:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>h</mi><mrow><mi>M</mi><mi>M</mi><mi>S</mi><mi>E</mi></mrow></msub><mo>=</mo><mfrac><mrow><msubsup><mi>R</mi><mrow><mi>x</mi><mi>x</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy=\"false\">(</mo><msub><mi>R</mi><mrow><mi>x</mi><mi>x</mi></mrow></msub><mo>+</mo><msub><mi>R</mi><mrow><mi>v</mi><mi>v</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow><msubsup><mi>R</mi><mrow><mi>x</mi><mi>x</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup></mfrac></mrow><annotation encoding=\"application/x-tex\">h_{MMSE} = \\frac{R_{xx}^{-1}(R_{xx} + R_{vv})}{R_{xx}^{-1}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">MMSE</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4241em;vertical-align:-0.933em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4911em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.453em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">xx</span></span></span></span><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.453em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">xx</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">xx</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">vv</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.933em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><p>where <strong>R<sub>xx</sub></strong> is the auto-correlation matrix of the input signal, and <strong>R<sub>vv</sub></strong> is the auto-correlation matrix of the noise signal.</p><h2 id=\"least-mean-square-lms-weiner-filter\">Least Mean-Square (LMS) Weiner Filter</h2><p>The Least Mean-Square (LMS) Weiner Filter is a variant of the Weiner filter that is used when there is a limited amount of data or a non-stationary signal. The LMS filter uses a gradient descent algorithm to iteratively compute the filter coefficients.</p><p>Unlike the Weiner filter, the LMS filter does not require the input signal’s auto-correlation matrix. Instead, it updates the filter coefficients based on the difference between the noisy input signal and the estimated signal.</p><p>The formula to update the filter coefficients is given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>h</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mn>2</mn><mi>μ</mi><mi>e</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mi>y</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">h(n+1)=h(n)+2\\mu e(n)y(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">μ</span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span><p>Where h(n+1) is the updated filter coefficients, $\\mu$ is the step size, e(n) is the error signal, and y(n) is the filtered output.</p><h2 id=\"python-implementation-1\">Python Implementation</h2><pre><code class=\"language-python\">def mmse_filter(y, noise):    '''    y: Noisy input signal    noise: Noise signal to be removed    Returns:    The processed signal    '''    # Compute the power of the signal and noise    noise_power = np.mean(noise**2)    signal_power = np.mean(y**2)    # Estimate the auto-correlation matrices    Rx = correlate(y, y, mode='same') / len(y)    Rv = correlate(noise, noise, mode='same') / len(noise)    # Compute the MMSE Wiener Filter coefficients    h = np.dot(np.linalg.inv(Rx + Rv), Rx)    y_filtered = lfilter(h, 1, y)    return y_filtereddef lms_filter(y, noise, n_taps=50, step_size=0.05, n_iterations=1000):    '''    y: Noisy input signal    noise: Noise signal to be removed    n_taps: Number of filter coefficients    step_size: Learning rate or step size    n_iterations: Number of iterations    Returns:    The processed signal    '''      h = np.zeros(n_taps)    for i in range(n_iterations):        # Compute the current filter output        y_filtered = np.convolve(h, y, mode='same')        # Compute the error signal        e = noise - y_filtered        # Update filter coefficients        h = h + 2 * step_size * np.convolve(e, y, mode='same')        y_filtered = np.convolve(h, y, mode='same')        return y_filtered</code></pre><h1 id=\"conclusion\">Conclusion</h1><p>Weiner Filtering is an optimal linear filtering technique that is widely used in the signal processing domain. It estimates the original signal from the corrupted or noisy signal by finding the optimal filter coefficients that minimize the mean-square error between the original signal and estimated signal.</p><p>In this article, we discussed the conventional Weiner filter, its variations such as MMSE Weiner filter and LMS filter, and provided Python implementations for each. We hope this article helps you gain a basic understanding of Weiner Filtering and its variations.</p>",
            "url": "http://localhost:4000/2023/04/03/weiner-filtering",
            
            
            
            "tags": ["noise","filters"],
            
            "date_published": "2023-04-03T00:00:00+01:00",
            "date_modified": "2023-04-03T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/02/variable-digital-filtering",
            "title": "Variable Digital Filtering and its Variants",
            "summary": "This article explains the concept of Variable Digital Filtering and its variants using equations, Python implementation, and examples.",
            "content_text": "IntroductionDigital Signal Processing techniques have revolutionized the field of signal processing. Among various techniques, Digital Filtering plays a crucial role. Digital Filters are Linear Time-Invariant (LTI) Systems that process a discrete-time signal in the digital domain. Digital filters can be classified into two categories: Finite Impulse Response (FIR) and Infinite Impulse Response (IIR) filters. FIR filters are commonly used as they possess certain advantages over IIR filters such as linear-phase property, easy implementation, and stability. FIR filters also have a unique property of Variable Digital Filtering.Variable Digital FilteringVariable Digital Filtering is a technique where the filter coefficients vary with time or frequency. The FIR filter coefficients involved in variable digital filtering are time-varying which leads to the ability to tune the filter parameters to match the characteristics of the input signal. The Variable Digital Filter applies an impulse response that varies over time. The coefficients of the filter are a function of time or frequency, depending on the type of variable filter used.Types of Variable Digital FilteringThere are two variants of Variable Digital Filters based on the variation of their filter coefficients:  Time-varying Digital Filters  Frequency-varying Digital FiltersTime-varying Digital FiltersTime-varying digital filters are those filters that change their filter coefficients over time. These filters are typically used when the characteristics of the input signal change over time. The time variation can be either discrete or continuous.Python Implementationimport numpy as npimport scipy.signal as sigdef time_varying_filter(signal, filter_coeffs):\t\"\"\"\tApplies a time-varying filter to a given signal.\t\tArgs:\tsignal (array): Input signal to be processed.\tfilter_coeffs (array): Array of filter coefficients.\t\tReturns:\toutput (array): Filtered signal.\t\"\"\"\toutput = np.zeros(len(signal))\tfor i in range(len(signal)):\t\toutput[i] = np.sum(signal[i:i+len(filter_coeffs)] * filter_coeffs)\t\tfilter_coeffs = filter_coeffs + 0.01  # Increase filter coefficients over time\treturn outputExampleLet us consider a signal that is a linear chirp. A linear chirp is a signal whose frequency changes linearly with time. We will apply a time-varying digital filter to this signal.import matplotlib.pyplot as plt# Generate linear chirp signalt = np.linspace(0, 2*np.pi, num=1000)linear_chirp = sig.chirp(t, f0=1.0, f1=10.0, t1=np.pi, method='linear')# Generate filter coefficientsfilter_coeffs = np.random.rand(11)# Filter the linear chirp signal using time-varying filteroutput = time_varying_filter(linear_chirp, filter_coeffs)# Plot the resultsfig, axes = plt.subplots(nrows=2, ncols=1, figsize=(10, 10))axes[0].plot(t, linear_chirp)axes[0].set_title('Linear Chirp Signal')axes[0].set_xlabel('Time')axes[0].set_ylabel('Amplitude')axes[1].plot(t, output)axes[1].set_title('Filtered Signal')axes[1].set_xlabel('Time')axes[1].set_ylabel('Amplitude')plt.show()The above code snippet generates a linear chirp signal, generates random filter coefficients and applies a time-varying digital filter to the signal.Frequency-varying Digital FiltersFrequency-varying digital filters are those filters that change their filter coefficients with frequency. These filters are typically used when the input signal contains frequency components that vary over time.Python Implementationimport numpy as npimport scipy.signal as sigdef freq_varying_filter(signal, filter_coeffs):\t\"\"\"\tApplies a frequency-varying filter to a given signal.\t\tArgs:\tsignal (array): Input signal to be processed.\tfilter_coeffs (array): Array of filter coefficients.\t\tReturns:\toutput (array): Filtered signal.\t\"\"\"\tfreqs = np.fft.fftfreq(len(signal), d=1/len(signal))\tf = np.fft.fft(signal)\tfilter_curve = 1 - np.abs(freqs)/np.max(np.abs(freqs))\tfilter_curve = filter_curve ** 2\tfiltered = f * filter_curve\toutput = np.real(np.fft.ifft(filtered))\treturn outputExampleLet us consider a signal that is a sum of two sine waves: one with a frequency of 20 Hz and another with a frequency of 50 Hz. We will apply a frequency-varying digital filter to this signal.import matplotlib.pyplot as plt# Generate the signalt = np.linspace(0, 2*np.pi, num=1000)sig1 = np.sin(2*np.pi*20*t)sig2 = np.sin(2*np.pi*50*t)signal = sig1 + sig2# Generate filter coefficientsfilter_coeffs = np.random.rand(11)# Filter the signal using frequency-varying filteroutput = freq_varying_filter(signal, filter_coeffs)# Plot the resultsfig, axes = plt.subplots(nrows=2, ncols=1, figsize=(10, 10))axes[0].plot(t, signal)axes[0].set_title('Input Signal')axes[0].set_xlabel('Time')axes[0].set_ylabel('Amplitude')axes[1].plot(t, output)axes[1].set_title('Filtered Signal')axes[1].set_xlabel('Time')axes[1].set_ylabel('Amplitude')plt.show()The above code snippet generates a signal with two sine waves of frequencies 20 Hz and 50 Hz, generates random filter coefficients, and applies a frequency-varying digital filter to the signal. The filtered signal is plotted against the original signal in the below graph.ConclusionVariable Digital Filtering is a technique that is useful in several applications where the input signal characteristics vary with time. Time-varying and frequency-varying digital filters are the two variants of variable digital filters, and both are useful in various applications. This article provides a basic understanding of variable digital filters, their equations, Python implementation, and an example of each variant.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>Digital Signal Processing techniques have revolutionized the field of signal processing. Among various techniques, Digital Filtering plays a crucial role. Digital Filters are Linear Time-Invariant (LTI) Systems that process a discrete-time signal in the digital domain. Digital filters can be classified into two categories: Finite Impulse Response (FIR) and Infinite Impulse Response (IIR) filters. FIR filters are commonly used as they possess certain advantages over IIR filters such as linear-phase property, easy implementation, and stability. FIR filters also have a unique property of Variable Digital Filtering.</p><h1 id=\"variable-digital-filtering\">Variable Digital Filtering</h1><p>Variable Digital Filtering is a technique where the filter coefficients vary with time or frequency. The FIR filter coefficients involved in variable digital filtering are time-varying which leads to the ability to tune the filter parameters to match the characteristics of the input signal. The Variable Digital Filter applies an impulse response that varies over time. The coefficients of the filter are a function of time or frequency, depending on the type of variable filter used.</p><h2 id=\"types-of-variable-digital-filtering\">Types of Variable Digital Filtering</h2><p>There are two variants of Variable Digital Filters based on the variation of their filter coefficients:</p><ol>  <li>Time-varying Digital Filters</li>  <li>Frequency-varying Digital Filters</li></ol><h3 id=\"time-varying-digital-filters\">Time-varying Digital Filters</h3><p>Time-varying digital filters are those filters that change their filter coefficients over time. These filters are typically used when the characteristics of the input signal change over time. The time variation can be either discrete or continuous.</p><h4 id=\"python-implementation\">Python Implementation</h4><pre><code class=\"language-python\">import numpy as npimport scipy.signal as sigdef time_varying_filter(signal, filter_coeffs):\t\"\"\"\tApplies a time-varying filter to a given signal.\t\tArgs:\tsignal (array): Input signal to be processed.\tfilter_coeffs (array): Array of filter coefficients.\t\tReturns:\toutput (array): Filtered signal.\t\"\"\"\toutput = np.zeros(len(signal))\tfor i in range(len(signal)):\t\toutput[i] = np.sum(signal[i:i+len(filter_coeffs)] * filter_coeffs)\t\tfilter_coeffs = filter_coeffs + 0.01  # Increase filter coefficients over time\treturn output</code></pre><h4 id=\"example\">Example</h4><p>Let us consider a signal that is a linear chirp. A linear chirp is a signal whose frequency changes linearly with time. We will apply a time-varying digital filter to this signal.</p><pre><code class=\"language-python\">import matplotlib.pyplot as plt# Generate linear chirp signalt = np.linspace(0, 2*np.pi, num=1000)linear_chirp = sig.chirp(t, f0=1.0, f1=10.0, t1=np.pi, method='linear')# Generate filter coefficientsfilter_coeffs = np.random.rand(11)# Filter the linear chirp signal using time-varying filteroutput = time_varying_filter(linear_chirp, filter_coeffs)# Plot the resultsfig, axes = plt.subplots(nrows=2, ncols=1, figsize=(10, 10))axes[0].plot(t, linear_chirp)axes[0].set_title('Linear Chirp Signal')axes[0].set_xlabel('Time')axes[0].set_ylabel('Amplitude')axes[1].plot(t, output)axes[1].set_title('Filtered Signal')axes[1].set_xlabel('Time')axes[1].set_ylabel('Amplitude')plt.show()</code></pre><p>The above code snippet generates a linear chirp signal, generates random filter coefficients and applies a time-varying digital filter to the signal.</p><h3 id=\"frequency-varying-digital-filters\">Frequency-varying Digital Filters</h3><p>Frequency-varying digital filters are those filters that change their filter coefficients with frequency. These filters are typically used when the input signal contains frequency components that vary over time.</p><h4 id=\"python-implementation-1\">Python Implementation</h4><pre><code class=\"language-python\">import numpy as npimport scipy.signal as sigdef freq_varying_filter(signal, filter_coeffs):\t\"\"\"\tApplies a frequency-varying filter to a given signal.\t\tArgs:\tsignal (array): Input signal to be processed.\tfilter_coeffs (array): Array of filter coefficients.\t\tReturns:\toutput (array): Filtered signal.\t\"\"\"\tfreqs = np.fft.fftfreq(len(signal), d=1/len(signal))\tf = np.fft.fft(signal)\tfilter_curve = 1 - np.abs(freqs)/np.max(np.abs(freqs))\tfilter_curve = filter_curve ** 2\tfiltered = f * filter_curve\toutput = np.real(np.fft.ifft(filtered))\treturn output</code></pre><h4 id=\"example-1\">Example</h4><p>Let us consider a signal that is a sum of two sine waves: one with a frequency of 20 Hz and another with a frequency of 50 Hz. We will apply a frequency-varying digital filter to this signal.</p><pre><code class=\"language-python\">import matplotlib.pyplot as plt# Generate the signalt = np.linspace(0, 2*np.pi, num=1000)sig1 = np.sin(2*np.pi*20*t)sig2 = np.sin(2*np.pi*50*t)signal = sig1 + sig2# Generate filter coefficientsfilter_coeffs = np.random.rand(11)# Filter the signal using frequency-varying filteroutput = freq_varying_filter(signal, filter_coeffs)# Plot the resultsfig, axes = plt.subplots(nrows=2, ncols=1, figsize=(10, 10))axes[0].plot(t, signal)axes[0].set_title('Input Signal')axes[0].set_xlabel('Time')axes[0].set_ylabel('Amplitude')axes[1].plot(t, output)axes[1].set_title('Filtered Signal')axes[1].set_xlabel('Time')axes[1].set_ylabel('Amplitude')plt.show()</code></pre><p>The above code snippet generates a signal with two sine waves of frequencies 20 Hz and 50 Hz, generates random filter coefficients, and applies a frequency-varying digital filter to the signal. The filtered signal is plotted against the original signal in the below graph.</p><h1 id=\"conclusion\">Conclusion</h1><p>Variable Digital Filtering is a technique that is useful in several applications where the input signal characteristics vary with time. Time-varying and frequency-varying digital filters are the two variants of variable digital filters, and both are useful in various applications. This article provides a basic understanding of variable digital filters, their equations, Python implementation, and an example of each variant.</p>",
            "url": "http://localhost:4000/2023/04/02/variable-digital-filtering",
            
            
            
            "tags": ["noise","filters"],
            
            "date_published": "2023-04-02T00:00:00+01:00",
            "date_modified": "2023-04-02T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/04/01/whitening-filter",
            "title": "Pre-Whitening and Inverse Whitening Filters - A Detailed Scientific Article",
            "summary": "This article discusses the concept of pre-whitening and inverse whitening filters, along with their variants and equations. The python implementation and an example for each variant are also provided.",
            "content_text": "Signal processing involves filtration of signals in various applications. One such filtration technique is the whitening filter, which helps to eliminate correlations between signals. Pre-whitening and inverse whitening filters are variants of the whitening filter that play a significant role in signal processing applications.Pre-Whitening FilterThe pre-whitening filter is a technique, which helps to reduce or eliminate correlations between signals. It is useful in cases where two signals are correlated, and the correlation is not necessarily harmful to the application. Pre-whitening is also used when we want to remove the correlation from one of the signals before further processing. It is an effective way of dealing with spurious correlations between signals, which can lead to false conclusions or biased estimators.The pre-whitening filter can be defined mathematically as follows:Where,  s_y: Pre-whitened signal  R_x: Covariance matrix of the original signal x  x: Original signalThe goal is to obtain a signal such that the covariance matrix becomes proportional to the identity matrix, ensuring that the signal is uncorrelated. We apply a transformation to the original signal that is proportional to the inverse square root of the original covariance matrix. This process is known as pre-whitening.In python, this can be implemented the following way:import numpy as np# Original signalx = np.array([1, 2, 3, 4, 5, 6])# Covariance matrix of the original signalR_x = np.cov(x)# Inverse square root of the covariance matrixR_x_inv_sqrt = np.linalg.inv(np.sqrt(R_x))# Pre-whitened signals_y = R_x_inv_sqrt @ xInverse Whitening FilterThe inverse whitening filter is a technique that helps to decorrelate a signal without affecting the variance of the signal. It is useful in cases where only the correlation between signals needs to be removed, and the signal variance needs to be preserved. The inverse whitening filter operation can be defined mathematically as follows:Where,  z: Inverse whitened signal  R_x: Covariance matrix of the original signal x  y: Correlated signalThe inverse whitened signal is obtained by multiplying the correlated signal by the inverse square root of the covariance matrix of the original signal x. This process is known as inverse whitening.In python, this can be implemented the following way:import numpy as np# Correlated signaly = np.array([1, 3, 5, 7, 9, 11])# Covariance matrix of the original signalR_x = np.cov(y)# Inverse square root of the covariance matrixR_x_inv_sqrt = np.linalg.inv(np.sqrt(R_x))# Inverse whitened signalz = R_x_inv_sqrt @ yVariants of Pre-Whitening and Inverse Whitening FiltersModified Pre-Whitening FilterThe modified pre-whitening filter is a variant of the pre-whitening filter that is useful in cases where it is not possible to invert the covariance matrix. This situation can arise when the covariance matrix is singular or when the number of samples is less than the dimension of the signal. The modified pre-whitening filter can be defined mathematically as follows:Where,  s_y: Pre-whitened signal  R_x: Covariance matrix of the original signal x  x: Original signal  diag(eig(R_x)): Diagonal matrix of eigenvalues of covariance matrix R_x  eig(R_x): Eigenvalues of covariance matrix R_xIn python, this can be implemented the following way:import numpy as np# Original signalx = np.array([1, 2, 3, 4, 5, 6])# Covariance matrix of the original signalR_x = np.cov(x)# Eigenvalues and eigenvectors of the covariance matrixeig_values, eig_vectors = np.linalg.eig(R_x)# Diagonal matrix of eigenvalueseig_values_diag = np.diag(eig_values)# Modified pre-whitening filters_y = eig_vectors @ np.linalg.inv(np.sqrt(eig_values_diag)) @ eig_vectors.T @ xModified Inverse Whitening FilterThe modified inverse whitening filter is a variant of the inverse whitening filter that is useful when the matrix is singular or not invertible. It provides better results than inverse whitening in such scenarios. The modified inverse whitening filter can be defined mathematically as follows:Where,  z: Modified inverse whitened signal  R_x: Covariance matrix of the original signal x  y: Correlated signal  R_x+ : Moore-Penrose pseudoinverse of the covariance matrix R_xIn python, this can be implemented the following way:import numpy as np# Correlated signaly = np.array([1, 3, 5, 7, 9, 11])# Covariance matrix of the original signalR_x = np.cov(y)# Moore-Penrose pseudoinverse of the covariance matrixR_x_pinv = np.linalg.pinv(R_x)# Inverse square root of the covariance matrixR_x_inv_sqrt = np.linalg.inv(np.sqrt(R_x))# Modified inverse whitened signalz = R_x_pinv @ R_x_inv_sqrt @ yConclusionIn conclusion, pre-whitening and inverse whitening filters are essential techniques in signal processing. These filters help to eliminate correlations between signals, which can lead to biased results or false conclusions. The modified variants of pre-whitening and inverse whitening filters are useful when the covariance matrix is singular or not invertible. The python implementation and the examples of the variants discussed in this article provide a better understanding of the concepts and techniques involved in signal processing.Other versionColoured noise is a complex signal that contains a combination of frequencies. This type of noise finds application in areas such as music production, image processing, and communication systems. However, for many applications, it is preferable to have a signal that is normally distributed, such as Gaussian noise. One way to achieve this is by using linear time invariant (LTI) whitening filters.LTI whitening filters convert the frequency distribution of a noise signal so that the power spectral density (PSD) is flat. This is achieved by passing the signal through an LTI filter whose frequency response is the inverse square root of the PSD of the input signal. The filtered signal has a white noise spectrum, which is Gaussian and of equal amplitude at all frequencies.There are several popular whitening filter variants that can be used to convert coloured noise to Gaussian noise.Variance Normalization FilteringThe variance normalization filter normalizes the variance of a signal to 1, leaving the signal with zero mean. The filter takes the form of:H(z)=1E[x(n)2]H(z)=\\frac{1}{\\sqrt[]{E[x(n)^2]}}H(z)=E[x(n)2]​1​Where E[x(n)^2] is the mean squared value of the input signal.In Python, the variance normalization filter can be implemented as follows:def filter_vn(sig):    # Calculate mean and variance of signal    mu = np.mean(sig)    sig_var = np.var(sig)    # Normalize signal variance to 1    sig = (sig - mu) / np.sqrt(sig_var)    return sigCorrelation Matrix FilteringThe correlation matrix filter computes the correlation matrix of a signal and then applies the Cholesky decomposition to get its square root. The resulting matrix is then used as the coefficients of a linear filter. The filter takes the form of:H(z)=R−1H(z)=\\sqrt[]{R^{-1}}H(z)=R−1​Where R is the correlation matrix of the input signal.In Python, the correlation matrix filter can be implemented as follows:def filter_cmf(sig):    # Compute correlation matrix    R = np.corrcoef(sig)    # Compute Cholesky decomposition of correlation matrix    S = np.linalg.cholesky(np.linalg.inv(R))    # Construct filter coefficients from Cholesky matrix    b = np.diag(S).reshape(-1, 1)    a = np.fliplr(S).reshape(-1, 1)    return lfilter(b.squeeze(), a.squeeze(), sig)Autocorrelation Matrix FilteringThe autocorrelation matrix filter computes the autocorrelation matrix of a signal and then applies the Cholesky decomposition to get its square root. The resulting matrix is then used as the coefficients of a linear filter. The filter takes the form of:H(z)=P−1H(z)=\\sqrt[]{P^{-1}}H(z)=P−1​Where P is the autocorrelation matrix of the input signal.In Python, the autocorrelation matrix filter can be implemented as follows:def filter_amf(sig):    # Compute autocorrelation matrix    R = np.correlate(sig, sig, mode='full')[len(sig)-1:]    T = toeplitz(R)    # Compute Cholesky decomposition of autocorrelation matrix    S = np.linalg.cholesky(np.linalg.inv(T))    # Construct filter coefficients from Cholesky matrix    b = np.diag(S).reshape(-1, 1)    a = np.fliplr(S).reshape(-1, 1)    return lfilter(b.squeeze(), a.squeeze(), sig)Example: Whitening Filter ComparisonTo compare the different whitening filters, we can generate a signal with a coloured noise spectrum and then apply each of the filters in turn. The resulting filtered signal should have a Gaussian spectrum with zero mean and unit variance.import numpy as npimport matplotlib.pyplot as pltfrom scipy.signal import lfilter# Generate coloured noise signaln = 10000sig = np.sin(np.linspace(0, np.pi*10, n)) + np.random.randn(n)*3# Apply variance normalization filtervn_sig = filter_vn(sig)# Apply correlation matrix filtercmf_sig = filter_cmf(sig)# Apply autocorrelation matrix filteramf_sig = filter_amf(sig)# Plot PSD of original and filtered signalspsd_orig = np.abs(np.fft.fft(sig))**2psd_vn = np.abs(np.fft.fft(vn_sig))**2psd_cmf = np.abs(np.fft.fft(cmf_sig))**2psd_amf = np.abs(np.fft.fft(amf_sig))**2freqs = np.fft.fftfreq(n, d=1/n)plt.plot(freqs, psd_orig, label='Original')plt.plot(freqs, psd_vn, label='Variance Normalization')plt.plot(freqs, psd_cmf, label='Correlation Matrix')plt.plot(freqs, psd_amf, label='Autocorrelation Matrix')plt.xlabel('Frequency')plt.ylabel('Power Spectral Density')plt.legend()plt.show()The resulting plot shows the PSD of the original signal and the filtered signals using the variance normalization, correlation matrix, and autocorrelation matrix filters. We can see that all filters achieve a similar result, with a flat PSD indicating Gaussian noise.In conclusion, LTI whitening filters are a powerful tool for converting coloured noise into Gaussian noise, which has many applications in signal processing. The variance normalization, correlation matrix, and autocorrelation matrix filters are popular variants of this approach, each with its strengths and weaknesses. The presented implementations demonstrate how to use the whitening filters in Python.",
            "content_html": "<p>Signal processing involves filtration of signals in various applications. One such filtration technique is the whitening filter, which helps to eliminate correlations between signals. Pre-whitening and inverse whitening filters are variants of the whitening filter that play a significant role in signal processing applications.</p><h2 id=\"pre-whitening-filter\">Pre-Whitening Filter</h2><p>The pre-whitening filter is a technique, which helps to reduce or eliminate correlations between signals. It is useful in cases where two signals are correlated, and the correlation is not necessarily harmful to the application. Pre-whitening is also used when we want to remove the correlation from one of the signals before further processing. It is an effective way of dealing with spurious correlations between signals, which can lead to false conclusions or biased estimators.</p><p>The pre-whitening filter can be defined mathematically as follows:</p><p><img src=\"https://latex.codecogs.com/svg.latex?s_y%20%3D%20R_x%5E%7B-1/2%7D%20%5Ccdot%20x\" alt=\"Pre Whitening Filter Equation\" /></p><p>Where,</p><ul>  <li>s_y: Pre-whitened signal</li>  <li>R_x: Covariance matrix of the original signal x</li>  <li>x: Original signal</li></ul><p>The goal is to obtain a signal such that the covariance matrix becomes proportional to the identity matrix, ensuring that the signal is uncorrelated. We apply a transformation to the original signal that is proportional to the inverse square root of the original covariance matrix. This process is known as pre-whitening.</p><p>In python, this can be implemented the following way:</p><pre><code class=\"language-python\">import numpy as np# Original signalx = np.array([1, 2, 3, 4, 5, 6])# Covariance matrix of the original signalR_x = np.cov(x)# Inverse square root of the covariance matrixR_x_inv_sqrt = np.linalg.inv(np.sqrt(R_x))# Pre-whitened signals_y = R_x_inv_sqrt @ x</code></pre><h2 id=\"inverse-whitening-filter\">Inverse Whitening Filter</h2><p>The inverse whitening filter is a technique that helps to decorrelate a signal without affecting the variance of the signal. It is useful in cases where only the correlation between signals needs to be removed, and the signal variance needs to be preserved. The inverse whitening filter operation can be defined mathematically as follows:</p><p><img src=\"https://latex.codecogs.com/svg.latex?z%20%3D%20R_x%5E%7B-1/2%7D%20%5Ccdot%20y\" alt=\"Inverse Whitening Filter Equation\" /></p><p>Where,</p><ul>  <li>z: Inverse whitened signal</li>  <li>R_x: Covariance matrix of the original signal x</li>  <li>y: Correlated signal</li></ul><p>The inverse whitened signal is obtained by multiplying the correlated signal by the inverse square root of the covariance matrix of the original signal x. This process is known as inverse whitening.</p><p>In python, this can be implemented the following way:</p><pre><code class=\"language-python\">import numpy as np# Correlated signaly = np.array([1, 3, 5, 7, 9, 11])# Covariance matrix of the original signalR_x = np.cov(y)# Inverse square root of the covariance matrixR_x_inv_sqrt = np.linalg.inv(np.sqrt(R_x))# Inverse whitened signalz = R_x_inv_sqrt @ y</code></pre><h2 id=\"variants-of-pre-whitening-and-inverse-whitening-filters\">Variants of Pre-Whitening and Inverse Whitening Filters</h2><h3 id=\"modified-pre-whitening-filter\">Modified Pre-Whitening Filter</h3><p>The modified pre-whitening filter is a variant of the pre-whitening filter that is useful in cases where it is not possible to invert the covariance matrix. This situation can arise when the covariance matrix is singular or when the number of samples is less than the dimension of the signal. The modified pre-whitening filter can be defined mathematically as follows:</p><p><img src=\"https://latex.codecogs.com/svg.latex?s_y%20%3D%20R_x%5E%7B-1/2%7D%20%5Ccdot%20%5Cmathrm%7Bdiag%7D%28%5Cmathrm%7Beig%7D%28R_x%29%29%20%5Ccdot%20R_x%5E%7B1/2%7D%20%5Ccdot%20R_x%5E%7B-1%7D%20%5Ccdot%20x\" alt=\"Modified Pre-Whitening Filter Equation\" /></p><p>Where,</p><ul>  <li>s_y: Pre-whitened signal</li>  <li>R_x: Covariance matrix of the original signal x</li>  <li>x: Original signal</li>  <li>diag(eig(R_x)): Diagonal matrix of eigenvalues of covariance matrix R_x</li>  <li>eig(R_x): Eigenvalues of covariance matrix R_x</li></ul><p>In python, this can be implemented the following way:</p><pre><code class=\"language-python\">import numpy as np# Original signalx = np.array([1, 2, 3, 4, 5, 6])# Covariance matrix of the original signalR_x = np.cov(x)# Eigenvalues and eigenvectors of the covariance matrixeig_values, eig_vectors = np.linalg.eig(R_x)# Diagonal matrix of eigenvalueseig_values_diag = np.diag(eig_values)# Modified pre-whitening filters_y = eig_vectors @ np.linalg.inv(np.sqrt(eig_values_diag)) @ eig_vectors.T @ x</code></pre><h3 id=\"modified-inverse-whitening-filter\">Modified Inverse Whitening Filter</h3><p>The modified inverse whitening filter is a variant of the inverse whitening filter that is useful when the matrix is singular or not invertible. It provides better results than inverse whitening in such scenarios. The modified inverse whitening filter can be defined mathematically as follows:</p><p><img src=\"https://latex.codecogs.com/svg.latex?z%20%3D%20R_x%5E%7B%2B%7D%20%5Ccdot%20R_x%5E%7B-1/2%7D%20%5Ccdot%20y\" alt=\"Modified Inverse Whitening Filter Equation\" /></p><p>Where,</p><ul>  <li>z: Modified inverse whitened signal</li>  <li>R_x: Covariance matrix of the original signal x</li>  <li>y: Correlated signal</li>  <li>R_x+ : Moore-Penrose pseudoinverse of the covariance matrix R_x</li></ul><p>In python, this can be implemented the following way:</p><pre><code class=\"language-python\">import numpy as np# Correlated signaly = np.array([1, 3, 5, 7, 9, 11])# Covariance matrix of the original signalR_x = np.cov(y)# Moore-Penrose pseudoinverse of the covariance matrixR_x_pinv = np.linalg.pinv(R_x)# Inverse square root of the covariance matrixR_x_inv_sqrt = np.linalg.inv(np.sqrt(R_x))# Modified inverse whitened signalz = R_x_pinv @ R_x_inv_sqrt @ y</code></pre><h2 id=\"conclusion\">Conclusion</h2><p>In conclusion, pre-whitening and inverse whitening filters are essential techniques in signal processing. These filters help to eliminate correlations between signals, which can lead to biased results or false conclusions. The modified variants of pre-whitening and inverse whitening filters are useful when the covariance matrix is singular or not invertible. The python implementation and the examples of the variants discussed in this article provide a better understanding of the concepts and techniques involved in signal processing.</p><h1 id=\"other-version\">Other version</h1><p>Coloured noise is a complex signal that contains a combination of frequencies. This type of noise finds application in areas such as music production, image processing, and communication systems. However, for many applications, it is preferable to have a signal that is normally distributed, such as Gaussian noise. One way to achieve this is by using linear time invariant (LTI) whitening filters.</p><p>LTI whitening filters convert the frequency distribution of a noise signal so that the power spectral density (PSD) is flat. This is achieved by passing the signal through an LTI filter whose frequency response is the inverse square root of the PSD of the input signal. The filtered signal has a white noise spectrum, which is Gaussian and of equal amplitude at all frequencies.</p><p>There are several popular whitening filter variants that can be used to convert coloured noise to Gaussian noise.</p><h3 id=\"variance-normalization-filtering\">Variance Normalization Filtering</h3><p>The variance normalization filter normalizes the variance of a signal to 1, leaving the signal with zero mean. The filter takes the form of:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mroot><mrow><mi>E</mi><mo stretchy=\"false\">[</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>n</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo stretchy=\"false\">]</mo></mrow><mrow></mrow></mroot></mfrac></mrow><annotation encoding=\"application/x-tex\">H(z)=\\frac{1}{\\sqrt[]{E[x(n)^2]}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4514em;vertical-align:-1.13em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.175em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"root\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.378em;\"><span style=\"top:-2.378em;\"><span class=\"pstrut\" style=\"height:2em;\"></span><span class=\"sizing reset-size6 size1 mtight\"><span class=\"mord mtight\"></span></span></span></span></span></span></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.935em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span><span style=\"top:-2.895em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.305em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.13em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><p>Where <code>E[x(n)^2]</code> is the mean squared value of the input signal.In Python, the variance normalization filter can be implemented as follows:</p><pre><code>def filter_vn(sig):    # Calculate mean and variance of signal    mu = np.mean(sig)    sig_var = np.var(sig)    # Normalize signal variance to 1    sig = (sig - mu) / np.sqrt(sig_var)    return sig</code></pre><h3 id=\"correlation-matrix-filtering\">Correlation Matrix Filtering</h3><p>The correlation matrix filter computes the correlation matrix of a signal and then applies the Cholesky decomposition to get its square root. The resulting matrix is then used as the coefficients of a linear filter. The filter takes the form of:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mroot><msup><mi>R</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mrow></mrow></mroot></mrow><annotation encoding=\"application/x-tex\">H(z)=\\sqrt[]{R^{-1}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.0361em;\"></span><span class=\"mord sqrt\"><span class=\"root\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5807em;\"><span style=\"top:-2.5807em;\"><span class=\"pstrut\" style=\"height:2em;\"></span><span class=\"sizing reset-size6 size1 mtight\"><span class=\"mord mtight\"></span></span></span></span></span></span></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0039em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9639em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0361em;\"><span></span></span></span></span></span></span></span></span></span><p>Where <code>R</code> is the correlation matrix of the input signal.In Python, the correlation matrix filter can be implemented as follows:</p><pre><code>def filter_cmf(sig):    # Compute correlation matrix    R = np.corrcoef(sig)    # Compute Cholesky decomposition of correlation matrix    S = np.linalg.cholesky(np.linalg.inv(R))    # Construct filter coefficients from Cholesky matrix    b = np.diag(S).reshape(-1, 1)    a = np.fliplr(S).reshape(-1, 1)    return lfilter(b.squeeze(), a.squeeze(), sig)</code></pre><h3 id=\"autocorrelation-matrix-filtering\">Autocorrelation Matrix Filtering</h3><p>The autocorrelation matrix filter computes the autocorrelation matrix of a signal and then applies the Cholesky decomposition to get its square root. The resulting matrix is then used as the coefficients of a linear filter. The filter takes the form of:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mroot><msup><mi>P</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mrow></mrow></mroot></mrow><annotation encoding=\"application/x-tex\">H(z)=\\sqrt[]{P^{-1}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.0361em;\"></span><span class=\"mord sqrt\"><span class=\"root\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5807em;\"><span style=\"top:-2.5807em;\"><span class=\"pstrut\" style=\"height:2em;\"></span><span class=\"sizing reset-size6 size1 mtight\"><span class=\"mord mtight\"></span></span></span></span></span></span></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0039em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9639em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0361em;\"><span></span></span></span></span></span></span></span></span></span><p>Where <code>P</code> is the autocorrelation matrix of the input signal.In Python, the autocorrelation matrix filter can be implemented as follows:</p><pre><code>def filter_amf(sig):    # Compute autocorrelation matrix    R = np.correlate(sig, sig, mode='full')[len(sig)-1:]    T = toeplitz(R)    # Compute Cholesky decomposition of autocorrelation matrix    S = np.linalg.cholesky(np.linalg.inv(T))    # Construct filter coefficients from Cholesky matrix    b = np.diag(S).reshape(-1, 1)    a = np.fliplr(S).reshape(-1, 1)    return lfilter(b.squeeze(), a.squeeze(), sig)</code></pre><h3 id=\"example-whitening-filter-comparison\">Example: Whitening Filter Comparison</h3><p>To compare the different whitening filters, we can generate a signal with a coloured noise spectrum and then apply each of the filters in turn. The resulting filtered signal should have a Gaussian spectrum with zero mean and unit variance.</p><pre><code>import numpy as npimport matplotlib.pyplot as pltfrom scipy.signal import lfilter# Generate coloured noise signaln = 10000sig = np.sin(np.linspace(0, np.pi*10, n)) + np.random.randn(n)*3# Apply variance normalization filtervn_sig = filter_vn(sig)# Apply correlation matrix filtercmf_sig = filter_cmf(sig)# Apply autocorrelation matrix filteramf_sig = filter_amf(sig)# Plot PSD of original and filtered signalspsd_orig = np.abs(np.fft.fft(sig))**2psd_vn = np.abs(np.fft.fft(vn_sig))**2psd_cmf = np.abs(np.fft.fft(cmf_sig))**2psd_amf = np.abs(np.fft.fft(amf_sig))**2freqs = np.fft.fftfreq(n, d=1/n)plt.plot(freqs, psd_orig, label='Original')plt.plot(freqs, psd_vn, label='Variance Normalization')plt.plot(freqs, psd_cmf, label='Correlation Matrix')plt.plot(freqs, psd_amf, label='Autocorrelation Matrix')plt.xlabel('Frequency')plt.ylabel('Power Spectral Density')plt.legend()plt.show()</code></pre><p>The resulting plot shows the PSD of the original signal and the filtered signals using the variance normalization, correlation matrix, and autocorrelation matrix filters. We can see that all filters achieve a similar result, with a flat PSD indicating Gaussian noise.</p><p>In conclusion, LTI whitening filters are a powerful tool for converting coloured noise into Gaussian noise, which has many applications in signal processing. The variance normalization, correlation matrix, and autocorrelation matrix filters are popular variants of this approach, each with its strengths and weaknesses. The presented implementations demonstrate how to use the whitening filters in Python.</p>",
            "url": "http://localhost:4000/2023/04/01/whitening-filter",
            
            
            
            "tags": ["whitening","filters"],
            
            "date_published": "2023-04-01T00:00:00+01:00",
            "date_modified": "2023-04-01T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/31/linear-correlator",
            "title": "Linear Correlator and Its Variants",
            "summary": "This article discusses the linear correlator and its variants used in signal processing and data analysis.",
            "content_text": "IntroductionIn signal processing and data analysis, the linear correlator is a widely-used tool that determines the degree of similarity between two input signals. Correlation analysis is a key technique for understanding the relationships among different types of data signals, allowing researchers to identify patterns and trends that may be difficult to observe through other methods.In this article, we will discuss the basic mathematical formulations of the linear correlator and its variants, as well as provide a Python implementation and example of each variant.Linear CorrelatorThe linear correlator is a simple yet powerful tool that measures the degree of similarity between two signals, x(t) and y(t), where t is a continuous variable representing time. The correlation coefficient, r, ranges from -1 to 1, with higher absolute values indicating greater similarity.The mathematical formulation for the linear correlator is given by the following equation:$r = \\frac{\\sum_{t}^{T} (x(t)-\\bar{x})(y(t)-\\bar{y})}{\\sqrt{\\sum_{t}^{T}(x(t)-\\bar{x})^{2}}\\sqrt{\\sum_{t}^{T}(y(t)-\\bar{y})^{2}}}$where T is the total number of samples in x(t) and y(t), and $\\bar{x}$ and $\\bar{y}$ represent the mean values of x(t) and y(t), respectively.In Python, we can implement the linear correlator as follows:import numpy as npdef linear_correlator(x, y):    x_mean = np.mean(x)    y_mean = np.mean(y)    numerator = np.sum((x - x_mean) * (y - y_mean))    denominator = np.sqrt(np.sum((x - x_mean)**2) * np.sum((y - y_mean)**2))    r = numerator / denominator    return rCross-CorrelatorThe cross-correlator is a variant of the linear correlator that measures the similarity between two signals at different time lags. Unlike the linear correlator, which only looks at the similarity between two signals at the same time, the cross-correlator examines the similarity between the signals as they are shifted relative to one another.The mathematical formulation for the cross-correlator is given by the following equation:$r(\\tau) = \\frac{\\sum_{t=1}^{T} x(t) y(t+\\tau)}{\\sqrt{\\sum_{t=1}^{T}x^{2}(t)}\\sqrt{\\sum_{t+1}^{T}y^{2}(t)}}$where $\\tau$ represents the time lag, which can be positive or negative, and T is the total number of samples in x(t) and y(t).In Python, we can implement the cross-correlator as follows:def cross_correlator(x, y):    T = len(x)    r = np.zeros(2*T-1)    for tau in range(-T+1, T):        numerator = 0        x_terms = []        y_terms = []        for t in range(max(0, -tau), min(T, T-tau)):            numerator += x[t] * y[t+tau]            x_terms.append(x[t]**2)            y_terms.append(y[t]**2)        denominator = np.sqrt(np.sum(x_terms) * np.sum(y_terms))        r[tau+T-1] = numerator / denominator    return rAuto-CorrelatorThe auto-correlator is another variant of the linear correlator that measures the similarity of a signal with itself at different time lags. The auto-correlator can be useful for analyzing periodic signals or signals with repeating patterns.The mathematical formulation for the auto-correlator is similar to that of the cross-correlator:$r(\\tau) = \\frac{\\sum_{t=1}^{T-\\tau} x(t) x(t+\\tau)}{\\sqrt{\\sum_{t=1}^{T}x^{2}(t)}}$where $\\tau$ represents the time lag, and T is the total number of samples in x(t).In Python, we can implement the auto-correlator as follows:def auto_correlator(x):    T = len(x)    r = np.zeros(2*T-1)    for tau in range(-T+1, T):        numerator = 0        x_terms = []        for t in range(max(0, -tau), min(T, T-tau)):            numerator += x[t] * x[t+tau]            x_terms.append(x[t]**2)        denominator = np.sqrt(np.sum(x_terms))        r[tau+T-1] = numerator / denominator    return rExampleAs an example, let’s consider two sinusoidal signals, x(t) and y(t), with different frequencies and random noise added to each. We will then calculate the correlation coefficient using the linear correlator, cross-correlator, and auto-correlator.import matplotlib.pyplot as pltt = np.linspace(0, 2*np.pi, num=200)x = np.sin(2*t)noise_x = np.random.normal(0, 0.1, size=len(t))x += noise_xy = np.sin(3*t)noise_y = np.random.normal(0, 0.1, size=len(t))y += noise_y# Linear Correlatorr1 = linear_correlator(x, y)print(\"Linear Correlator: \", r1)# Cross-Correlatorr2 = cross_correlator(x, y)plt.plot(np.arange(-len(t)+1, len(t)), r2)plt.title(\"Cross-Correlator\")plt.show()# Auto-Correlatorr3 = auto_correlator(x)plt.plot(np.arange(-len(t)+1, len(t)), r3)plt.title(\"Auto-Correlator\")plt.show()The output of this code would be:Linear Correlator:  0.09451511255638794The plots for the cross-correlator and auto-correlator would show the degree of similarity between the two signals at different time lags.ConclusionThe linear correlator and its variants are powerful tools for analyzing the degree of similarity between different types of data signals. By calculating the correlation coefficient using the appropriate mathematical formulations, researchers can gain valuable insights into the patterns and trends that underlie complex data sets. In Python, these techniques can be easily implemented and visualized to aid in the analysis of experimental or observational data.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>In signal processing and data analysis, the linear correlator is a widely-used tool that determines the degree of similarity between two input signals. Correlation analysis is a key technique for understanding the relationships among different types of data signals, allowing researchers to identify patterns and trends that may be difficult to observe through other methods.</p><p>In this article, we will discuss the basic mathematical formulations of the linear correlator and its variants, as well as provide a Python implementation and example of each variant.</p><h1 id=\"linear-correlator\">Linear Correlator</h1><p>The linear correlator is a simple yet powerful tool that measures the degree of similarity between two signals, x(t) and y(t), where t is a continuous variable representing time. The correlation coefficient, r, ranges from -1 to 1, with higher absolute values indicating greater similarity.</p><p>The mathematical formulation for the linear correlator is given by the following equation:</p><p>$r = \\frac{\\sum_{t}^{T} (x(t)-\\bar{x})(y(t)-\\bar{y})}{\\sqrt{\\sum_{t}^{T}(x(t)-\\bar{x})^{2}}\\sqrt{\\sum_{t}^{T}(y(t)-\\bar{y})^{2}}}$</p><p>where T is the total number of samples in x(t) and y(t), and $\\bar{x}$ and $\\bar{y}$ represent the mean values of x(t) and y(t), respectively.</p><p>In Python, we can implement the linear correlator as follows:</p><pre><code class=\"language-python\">import numpy as npdef linear_correlator(x, y):    x_mean = np.mean(x)    y_mean = np.mean(y)    numerator = np.sum((x - x_mean) * (y - y_mean))    denominator = np.sqrt(np.sum((x - x_mean)**2) * np.sum((y - y_mean)**2))    r = numerator / denominator    return r</code></pre><h1 id=\"cross-correlator\">Cross-Correlator</h1><p>The cross-correlator is a variant of the linear correlator that measures the similarity between two signals at different time lags. Unlike the linear correlator, which only looks at the similarity between two signals at the same time, the cross-correlator examines the similarity between the signals as they are shifted relative to one another.</p><p>The mathematical formulation for the cross-correlator is given by the following equation:</p><p>$r(\\tau) = \\frac{\\sum_{t=1}^{T} x(t) y(t+\\tau)}{\\sqrt{\\sum_{t=1}^{T}x^{2}(t)}\\sqrt{\\sum_{t+1}^{T}y^{2}(t)}}$</p><p>where $\\tau$ represents the time lag, which can be positive or negative, and T is the total number of samples in x(t) and y(t).</p><p>In Python, we can implement the cross-correlator as follows:</p><pre><code class=\"language-python\">def cross_correlator(x, y):    T = len(x)    r = np.zeros(2*T-1)    for tau in range(-T+1, T):        numerator = 0        x_terms = []        y_terms = []        for t in range(max(0, -tau), min(T, T-tau)):            numerator += x[t] * y[t+tau]            x_terms.append(x[t]**2)            y_terms.append(y[t]**2)        denominator = np.sqrt(np.sum(x_terms) * np.sum(y_terms))        r[tau+T-1] = numerator / denominator    return r</code></pre><h1 id=\"auto-correlator\">Auto-Correlator</h1><p>The auto-correlator is another variant of the linear correlator that measures the similarity of a signal with itself at different time lags. The auto-correlator can be useful for analyzing periodic signals or signals with repeating patterns.</p><p>The mathematical formulation for the auto-correlator is similar to that of the cross-correlator:</p><p>$r(\\tau) = \\frac{\\sum_{t=1}^{T-\\tau} x(t) x(t+\\tau)}{\\sqrt{\\sum_{t=1}^{T}x^{2}(t)}}$</p><p>where $\\tau$ represents the time lag, and T is the total number of samples in x(t).</p><p>In Python, we can implement the auto-correlator as follows:</p><pre><code class=\"language-python\">def auto_correlator(x):    T = len(x)    r = np.zeros(2*T-1)    for tau in range(-T+1, T):        numerator = 0        x_terms = []        for t in range(max(0, -tau), min(T, T-tau)):            numerator += x[t] * x[t+tau]            x_terms.append(x[t]**2)        denominator = np.sqrt(np.sum(x_terms))        r[tau+T-1] = numerator / denominator    return r</code></pre><h1 id=\"example\">Example</h1><p>As an example, let’s consider two sinusoidal signals, x(t) and y(t), with different frequencies and random noise added to each. We will then calculate the correlation coefficient using the linear correlator, cross-correlator, and auto-correlator.</p><pre><code class=\"language-python\">import matplotlib.pyplot as pltt = np.linspace(0, 2*np.pi, num=200)x = np.sin(2*t)noise_x = np.random.normal(0, 0.1, size=len(t))x += noise_xy = np.sin(3*t)noise_y = np.random.normal(0, 0.1, size=len(t))y += noise_y# Linear Correlatorr1 = linear_correlator(x, y)print(\"Linear Correlator: \", r1)# Cross-Correlatorr2 = cross_correlator(x, y)plt.plot(np.arange(-len(t)+1, len(t)), r2)plt.title(\"Cross-Correlator\")plt.show()# Auto-Correlatorr3 = auto_correlator(x)plt.plot(np.arange(-len(t)+1, len(t)), r3)plt.title(\"Auto-Correlator\")plt.show()</code></pre><p>The output of this code would be:</p><pre><code>Linear Correlator:  0.09451511255638794</code></pre><p>The plots for the cross-correlator and auto-correlator would show the degree of similarity between the two signals at different time lags.</p><h1 id=\"conclusion\">Conclusion</h1><p>The linear correlator and its variants are powerful tools for analyzing the degree of similarity between different types of data signals. By calculating the correlation coefficient using the appropriate mathematical formulations, researchers can gain valuable insights into the patterns and trends that underlie complex data sets. In Python, these techniques can be easily implemented and visualized to aid in the analysis of experimental or observational data.</p>",
            "url": "http://localhost:4000/2023/03/31/linear-correlator",
            
            
            
            "tags": ["filters","linear_correlator"],
            
            "date_published": "2023-03-31T00:00:00+01:00",
            "date_modified": "2023-03-31T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/30/time-frequency-bandpass-filter",
            "title": "Time Frequency Bandpass Filter with Nonstationary Signal Decomposition Application",
            "summary": "Time Frequency Bandpass Filter with Nonstationary Signal Decomposition Application",
            "content_text": "AbstractIn various applications such as speech processing, underwater sound, radar applicationand mechanical fault diagnosis, there are large number of nonstationary signals. In order toachieve nonstationary signal decomposition, the instantaneous frequency ridge is extractedthrough interactive mode, and a time-frequency bandpass filter (TFBPF) method is proposed.This method is the modified version of Intrinsic Chirp Component Decomposition (ICCD) andhas the physical essence of time-frequency domain bandpass filter. The superiority andapplication potential of TFBPF in complex engineering signal decomposition are demonstratedthrough two numerical examples. In the first one, we prove that TFBPF can decompose the weaksignal component directly through analyzing the vibration signal of hydraulic turbine; While inthe second one, we prove that TFBPF can effectively overcome the drawbacks of ICCD throughanalyzing the vibration signal during the speed-up process of a complex equipment. TFBPF isstill very effective even for complex signal decomposition in a strong noise environment.IntroductionThere are large number of nonstationary signals. Such signals usuallyexhibit amplitude modulation and frequency modulation characteristics, which can be modeled asamplitude-modulated and frequency-modulated signals[5].In order to effectively extract the basic components of signal, signal decomposition has graduallybecome a hot spot in the field of signal processing. However, signals in nature and engineering usuallyexhibit strong time-varying nonlinear frequency modulation characteristics and often contain strongbackground noise, which brings great challenges to the decomposition of signal components.The Empirical Mode Decomposition (EMD) proposed by Huang et al. [6] is the most classicalnonstationary signal decomposition method. However, EMD has a series of problems such as boundaryeffect, mode aliasing, sensitivity to noise, and lack of mathematical theoretical support.Therefore, Smithproposed Local Mean Decomposition (LMD)[7], Frei proposed Intrinsic Time-Scale Decomposition(ITD)[8], which decomposes the signal into several product functions or rotation components, and thecalculation efficiency and accuracy are improved compared with EMD. In addition, relative scholarsproposed Iterative Filtering Decomposition (IFD) and its variants[9,10], which use low-pass filteringmethod to obtain the average of signal, and have been successfully used in the field of power grid data analysis and rotating machinery fault diagnosis. However, the above iterative decomposition method has poor noise resisting ability, or cannot decompose overlapping and cross components, which limited their application.Frequency domain filtering methods represented by Variational Mode Decomposition (VMD)[11] and Empirical Wavelet Transform (EWT)[12] essentially obtain signal components with high SNR by constructing different optimal filters, and have been widely used in finance, seismic data analysis[13,14] and medical disease monitoring[15]. But they will all suffer in decomposition of nonlinear frequency-modulated signal with broadband overlapping components.Time-frequency domain reconstruction methods represented by Synchrosqueezing Transform (SST)[16,17] achieve signal decomposition based on the reversibility of time-frequency transform, which overcomes the above problems, but they will produce large instantaneous frequency estimation error and signal reconstruction error when decomposing strong time-varying frequency modulation signals.Yang proposed general parameterized time-frequency transform[18], which can effectively obtain the time-frequency characterization of strong time-varying frequency modulation signals with high concentration. Chen solves the linear system on this basis, then proposes Intrinsic Chirp Component Decomposition (ICCD)[19] and Ridge Path Regrouping (RPRG)[20], which can effectively realize the decomposition of strong time-varying frequency modulation and even cross signal components. However, due to such methods extract instantaneous frequency ridges by iteratively detecting peaks in time-frequency diagram, they cannot decompose signal components with weak energy directly, and usually combine two uncorrelated signal components into a false signal component. The above shortcomings make them lack flexibility in complex signal decomposition problems.In this paper, the instantaneous frequency ridge is extracted through interactive mode, and a time-frequency bandpass filter (TFBPF) method is proposed to overcome the above-mentioned problems of ICCD. We proved that the physical essence of the proposed TFBPF method is time-frequency domain bandpass filter, and demonstrate the effectiveness of this method through two numerical examples.MethodThe arbitrary component $s_i(t)$ of signal $s(t)$ can be expressed in the form of frequency modulation component:si(t)=a(t)cos⁡[2π∫0tfi(τ)dτ+θ0]s_i(t)=a(t) \\cos \\left[2 \\pi \\int_0^t f_i(\\tau) d \\tau+\\theta_0\\right]si​(t)=a(t)cos[2π∫0t​fi​(τ)dτ+θ0​]where, $f_i(t)$ represents the instantaneous frequency of $s_i(t), t=t_0, t_1, \\cdots t_{N-1}$ represents sampling time, $N$ is the number of sampling points. In order to eliminate the nonlinear effect of the initial phase, the above equation can be rewritten as:si(t)=u(t)cos⁡[2π∫0tfi(τ)dτ]+v(t)sin⁡[2π∫0tfi(τ)dτ]s_i(t)=u(t) \\cos \\left[2 \\pi \\int_0^t f_i(\\tau) d \\tau\\right]+v(t) \\sin \\left[2 \\pi \\int_0^t f_i(\\tau) d \\tau\\right]si​(t)=u(t)cos[2π∫0t​fi​(τ)dτ]+v(t)sin[2π∫0t​fi​(τ)dτ]where, $u(t)$ and $v(t)$ are the amplitude functions of the signal components, which are described by the Fourier series model as follows:u(t)=u0(i)+∑l=1L[ul(i)cos⁡(2πlF0t)+uˉl(i)sin⁡(2πlF0t)]v(t)=v0(i)+∑l=1L[vl(i)cos⁡(2πlF0t)+vˉl(i)sin⁡(2πlF0t)]\\begin{aligned}&amp; u(t)=u_0^{(i)}+\\sum_{l=1}^L\\left[u_l^{(i)} \\cos \\left(2 \\pi l F_0 t\\right)+\\bar{u}_l^{(i)} \\sin \\left(2 \\pi l F_0 t\\right)\\right] \\\\&amp; v(t)=v_0^{(i)}+\\sum_{l=1}^L\\left[v_l^{(i)} \\cos \\left(2 \\pi l F_0 t\\right)+\\bar{v}_l^{(i)} \\sin \\left(2 \\pi l F_0 t\\right)\\right]\\end{aligned}​u(t)=u0(i)​+l=1∑L​[ul(i)​cos(2πlF0​t)+uˉl(i)​sin(2πlF0​t)]v(t)=v0(i)​+l=1∑L​[vl(i)​cos(2πlF0​t)+vˉl(i)​sin(2πlF0​t)]​where, $L$ represents the order of the Fourier model, $\\left{u_0^{(i)}, \\cdots, u_L^{(i)}, \\bar{u}_1^{(i)}, \\cdots \\bar{u}_L^{(i)}\\right}$ and $\\left{v_0^{(i)}, \\cdots, v_L^{(i)}, \\bar{v}_1^{(i)}, \\cdots \\bar{v}_L^{(i)}\\right}$ represent the Fourier coefficients to be estimated; The frequency resolution of the Fourier model is $F_0=f_s / Q N, Q \\in N^*, f_s$ is the sample frequency of signal. In this paper, the redundant Fourier model is obtained through $Q=2$, which can describe more complex functions [21].The instantaneous frequency $f_i(t)$ of the signal component is usually a function that changes continuously with time, so it can also be approximated by the Fourier series model, namely:fi(t)=fc(i)+∑m=1M[bm(i)cos⁡(2πmF0t)+bˉm(i)sin⁡(2πmF0t)]f_i(t)=f_c^{(i)}+\\sum_{m=1}^M\\left[b_m^{(i)} \\cos \\left(2 \\pi m F_0 t\\right)+\\bar{b}_m^{(i)} \\sin \\left(2 \\pi m F_0 t\\right)\\right]fi​(t)=fc(i)​+∑m=1M​[bm(i)​cos(2πmF0​t)+bˉm(i)​sin(2πmF0​t)]where, $f_c^{(i)}$ represents the carrier frequency of signal component, $M$ represents the order of the Fourier model, $\\left{b_1^{(i)}, \\cdots, b_M^{(i)}, \\bar{b}_1^{(i)}, \\cdots, \\bar{b}_M^{(i)}\\right}$ is the parameter set of the Fourier model, make $F_0=f_s /(2 N)$ to obtain the redundant Fourier model.In the above signal model, there is linear relationship between the amplitude function and the instantaneous frequency. Therefore, the instantaneous frequency parameters can be estimated first, then the amplitude parameters can be estimated by solving the linear system, and finally the frequency modulation component can be reconstructed to realize signal decomposition. In ICCD, the instantaneous frequency is estimated by parameterized time-frequency transformation, which lacks flexibility in complex signal decomposition problems. Therefore, TFBPF uses interactive selection and interpolation to achieve instantaneous frequency estimation.Instantaneous frequency estimationFor the nonstationary signal to be analyzed, the time-frequency distribution can be obtained through Short Time Fourier Transform first:STFT⁡(t,f)=∫−∞+∞s(τ)h(τ−t)ej2πfτdτ\\operatorname{STFT}(t, f)=\\int_{-\\infty}^{+\\infty} s(\\tau) h(\\tau-t) e^{j 2 \\pi f \\tau} d \\tauSTFT(t,f)=∫−∞+∞​s(τ)h(τ−t)ej2πfτdτwhere, $h(t)$ is window function. In the calculated time-frequency distribution diagram, the instantaneous frequency feature point set $\\left(t_i^{(j)}, f_i^{(j)}, f_i^{(j)^{\\prime}}\\right), j=0,1,2 \\cdots, n$ can be obtained interactively, where $t_i^{(j)}$ is the corresponding $j$-th time period of $i$-th signal component, $f_i^{(j)}$ is the instantaneous frequency at the corresponding time, and $f_i^{(j)^{\\prime}}$ is the derivative of $f_i^{(j)}$.The instantaneous frequency ridge $f_i(t)$ is estimated by piecewise cubic Hermite interpolation:fi(j)(tj)=fi(j)αi(ti)+fi(j+1)αi1(ti)+fi(j)′βi(ti)+fi(j+1)′βi1(ti),tj∈[ti(j),ti(j+1)]f_i^{(j)}\\left(t_j\\right)=f_i^{(j)} \\alpha_i\\left(t_i\\right)+f_i^{(j+1)} \\alpha_{i 1}\\left(t_i\\right)+f_i^{(j)^{\\prime}} \\beta_i\\left(t_i\\right)+f_i^{(j+1)^{\\prime}} \\beta_{i 1}\\left(t_i\\right), t_j \\in\\left[t_i^{(j)}, t_i^{(j+1)}\\right]fi(j)​(tj​)=fi(j)​αi​(ti​)+fi(j+1)​αi1​(ti​)+fi(j)′​βi​(ti​)+fi(j+1)′​βi1​(ti​),tj​∈[ti(j)​,ti(j+1)​]Whereαi(tj)=(1−2ti−ti(j)ti(j)−ti(j+1))(ti−ti(j+1)ti(j)−ti(j+1))2,αi1(ti)=(1−2ti−ti(j+1)ti(j+1)−ti(j))(ti−ti(j)ti(j+1)−ti(j))2βi(ti)=(ti−ti(j))(ti−ti(j+1)ti(j)−ti(j+1))2,βi1(ti)=(ti−ti(j+1))(ti−ti(j)ti(j+1)−ti(j))2\\begin{gathered}\\alpha_i\\left(t_j\\right)=\\left(1-2 \\frac{t_i-t_i^{(j)}}{t_i^{(j)}-t_i^{(j+1)}}\\right)\\left(\\frac{t_i-t_i^{(j+1)}}{t_i^{(j)}-t_i^{(j+1)}}\\right)^2, \\alpha_{i 1}\\left(t_i\\right)=\\left(1-2 \\frac{t_i-t_i^{(j+1)}}{t_i^{(j+1)}-t_i^{(j)}}\\right)\\left(\\frac{t_i-t_i^{(j)}}{t_i^{(j+1)}-t_i^{(j)}}\\right)^2 \\\\\\beta_i\\left(t_i\\right)=\\left(t_i-t_i^{(j)}\\right)\\left(\\frac{t_i-t_i^{(j+1)}}{t_i^{(j)}-t_i^{(j+1)}}\\right)^2, \\beta_{i 1}\\left(t_i\\right)=\\left(t_i-t_i^{(j+1)}\\right)\\left(\\frac{t_i-t_i^{(j)}}{t_i^{(j+1)}-t_i^{(j)}}\\right)^2\\end{gathered}αi​(tj​)=(1−2ti(j)​−ti(j+1)​ti​−ti(j)​​)(ti(j)​−ti(j+1)​ti​−ti(j+1)​​)2,αi1​(ti​)=(1−2ti(j+1)​−ti(j)​ti​−ti(j+1)​​)(ti(j+1)​−ti(j)​ti​−ti(j)​​)2βi​(ti​)=(ti​−ti(j)​)(ti(j)​−ti(j+1)​ti​−ti(j+1)​​)2,βi1​(ti​)=(ti​−ti(j+1)​)(ti(j+1)​−ti(j)​ti​−ti(j)​​)2​therefore:fi(t)={fi(0)(ti),ti∈[ti(0),ti(1)]fi(1)(ti),ti∈[ti(1),ti(2)]⋮fi(n−1)(ti),ti∈[ti(n−1),ti(n)]f_i(t)=\\left\\{\\begin{array}{cc}f_i^{(0)}\\left(t_i\\right), &amp; t_i \\in\\left[t_i^{(0)}, t_i^{(1)}\\right] \\\\f_i^{(1)}\\left(t_i\\right), &amp; t_i \\in\\left[t_i^{(1)}, t_i^{(2)}\\right] \\\\\\vdots \\\\f_i^{(n-1)}\\left(t_i\\right), &amp; t_i \\in\\left[t_i^{(n-1)}, t_i^{(n)}\\right]\\end{array}\\right.fi​(t)=⎩⎨⎧​fi(0)​(ti​),fi(1)​(ti​),⋮fi(n−1)​(ti​),​ti​∈[ti(0)​,ti(1)​]ti​∈[ti(1)​,ti(2)​]ti​∈[ti(n−1)​,ti(n)​]​Then the instantaneous frequency ridge can be fitted by the Fourier series model to obtain an instantaneous frequency estimate.Amplitude estimationIn order to estimate the amplitude parameters, the signal model is written in the form of multi-component matrix:where, $\\boldsymbol{s}=\\left[s\\left(t_0\\right) \\cdots s\\left(t_{N-1}\\right)\\right]^T, \\boldsymbol{r}=\\left[r\\left(t_0\\right) \\cdots r\\left(t_{N-1}^K\\right)\\right]^T \\mathbf{H}_i \\boldsymbol{y}_i+\\boldsymbol{r}$ represents error, $\\boldsymbol{y}_i$ is the column vector of the $i$-th signal component composed of the corresponding amplitude parameters. When only one of the signal components is considered, $K=1$. The expression of $\\boldsymbol{y}_i$ is as follows:yi=[(yiu)T(yiv)T]Tyiu=[u0(i),⋯ ,uL(i),uˉ1(i),⋯uˉL(i)]Tyiv=[v0(i),⋯ ,vL(i),vˉ1(i),⋯vˉL(i)]T\\begin{gathered}\\boldsymbol{y}_i=\\left[\\left(y_i^u\\right)^T \\quad\\left(y_i^v\\right)^T\\right]^T \\\\y_i^u=\\left[u_0^{(i)}, \\cdots, u_L^{(i)}, \\bar{u}_1^{(i)}, \\cdots \\bar{u}_L^{(i)}\\right]^T \\\\y_i^v=\\left[v_0^{(i)}, \\cdots, v_L^{(i)}, \\bar{v}_1^{(i)}, \\cdots \\bar{v}_L^{(i)}\\right]^T\\end{gathered}yi​=[(yiu​)T(yiv​)T]Tyiu​=[u0(i)​,⋯,uL(i)​,uˉ1(i)​,⋯uˉL(i)​]Tyiv​=[v0(i)​,⋯,vL(i)​,vˉ1(i)​,⋯vˉL(i)​]T​where superscript $T$ represents matrix transpose. For convenience, $\\phi_i(t)=2 \\pi \\int_0^t f_i(\\tau) d \\tau$, then the form of matrix $\\mathbf{H}_i$ is as follows:Hi=[HicHis]Hic=diag⁡[cos⁡ϕi(t0)⋯cos⁡ϕi(tN−1)]FHis=diag⁡[sin⁡ϕi(t0)⋯sin⁡ϕi(tN−1)]F\\begin{gathered}\\mathbf{H}_i=\\left[\\begin{array}{ll}\\mathbf{H}_i^c &amp; \\mathbf{H}_i^s\\end{array}\\right] \\\\\\mathbf{H}_i^c=\\operatorname{diag}\\left[\\cos \\phi_i\\left(t_0\\right) \\cdots \\cos \\phi_i\\left(t_{N-1}\\right)\\right] \\mathbf{F} \\\\\\mathbf{H}_i^s=\\operatorname{diag}\\left[\\sin \\phi_i\\left(t_0\\right) \\cdots \\sin \\phi_i\\left(t_{N-1}\\right)\\right] \\mathbf{F}\\end{gathered}Hi​=[Hic​​His​​]Hic​=diag[cosϕi​(t0​)⋯cosϕi​(tN−1​)]FHis​=diag[sinϕi​(t0​)⋯sinϕi​(tN−1​)]F​where diag [.] represents the diagonal matrix. $\\mathbf{F}$ is an $N \\times(2 L+1)$ Fourier model matrix:F=[1cos⁡(2πF0t0)⋯cos⁡(2πLF0t0)sin⁡(2πF0t0)⋯sin⁡(2πLF0t0)⋮⋮⋯⋮⋮⋯⋮1cos⁡(2πF0tN−1)⋯cos⁡(2πLF0tN−1)sin⁡(2πF0tN−1)⋯sin⁡(2πLF0tN−1)](18)\\mathbf{F}=\\left[\\begin{array}{ccccccc}1 &amp; \\cos \\left(2 \\pi F_0 t_0\\right) &amp; \\cdots &amp; \\cos \\left(2 \\pi L F_0 t_0\\right) &amp; \\sin \\left(2 \\pi F_0 t_0\\right) &amp; \\cdots &amp; \\sin \\left(2 \\pi L F_0 t_0\\right) \\\\\\vdots &amp; \\vdots &amp; \\cdots &amp; \\vdots &amp; \\vdots &amp; \\cdots &amp; \\vdots \\\\1 &amp; \\cos \\left(2 \\pi F_0 t_{N-1}\\right) &amp; \\cdots &amp; \\cos \\left(2 \\pi L F_0 t_{N-1}\\right) &amp; \\sin \\left(2 \\pi F_0 t_{N-1}\\right) &amp; \\cdots &amp; \\sin \\left(2 \\pi L F_0 t_{N-1}\\right)\\end{array}\\right](18)F=⎣⎡​1⋮1​cos(2πF0​t0​)⋮cos(2πF0​tN−1​)​⋯⋯⋯​cos(2πLF0​t0​)⋮cos(2πLF0​tN−1​)​sin(2πF0​t0​)⋮sin(2πF0​tN−1​)​⋯⋯⋯​sin(2πLF0​t0​)⋮sin(2πLF0​tN−1​)​⎦⎤​(18)The above formula shows that for $i$-th signal component there is a linear relationship between $\\boldsymbol{y}_i$ and $\\mathbf{H}_i$, while the matrix $\\mathbf{H}_i$ is determined by the instantaneous frequency $f_i(t)$. Therefore, under the condition that $\\mathbf{H}_i$ is known, the amplitude parameter vector $\\boldsymbol{y}_i$ can be estimated by solving an ill-posed inverse problem of linear system, which can be achieved through Tikhonov regularization:y~i=arg⁡min⁡yi{∥s−Hiyi∥22+λ1∥yi∥22}\\tilde{\\boldsymbol{y}}_i=\\arg \\min _{\\boldsymbol{y}_i}\\left\\{\\left\\|\\boldsymbol{s}-\\mathbf{H}_i \\boldsymbol{y}_i\\right\\|_2^2+\\lambda_1\\left\\|\\boldsymbol{y}_i\\right\\|_2^2\\right\\}y~​i​=argminyi​​{∥s−Hi​yi​∥22​+λ1​∥yi​∥22​}where, $|\\cdot|_2$ represents $l_2$ norm; $\\lambda_1&gt;0$ represents regularization parameter, and can be selected by generalized cross validation (GCV) method. The analytical solution of the above formula is given by the following expression:y~i=(HiTHi+λ1I)−1HiTs\\tilde{\\boldsymbol{y}}_i=\\left(\\mathbf{H}_i^T \\mathbf{H}_i+\\lambda_1 \\mathbf{I}\\right)^{-1} \\mathbf{H}_i^T \\boldsymbol{s}y~​i​=(HiT​Hi​+λ1​I)−1HiT​swhere, I represents the identity matrix. Based on the obtained amplitude parameters the corresponding signal component can be reconstructed:s~i=Hiy~i\\tilde{\\boldsymbol{s}}_i=\\mathbf{H}_i \\tilde{\\boldsymbol{y}}_is~i​=Hi​y~​i​All of the signal components can be decomposed and reconstructed by repeating the above process. The proposed method is called Time-Frequency Bandpass Filter (TFBPF).Physical essenceIn this section, we explain that the proposed method can essentially be regarded as a time-frequency band pass filter. The signal model can be organized as:s(t)=∑i=1K{Ai0uvsin⁡[ϕi(t)+φi0uv]+∑l=1LAiluuˉ2{sin⁡[ϕi(t)+2πlF0t+φiluuˉ]−sin⁡[ϕi(t)−2πlF0t−φiluuˉ]}+∑l=1LAilvv2{cos⁡[ϕi(t)−2πlF0t−φilvvˉ]−cos⁡[ϕi(t)+2πlF0t+φilvvˉ]}}+r(t) where, ϕi(t)=2π∫0tfi(τ)dτ,Ailcd=((cl(i))2+(dl(i))2)1/2,φilcd=arctan⁡cl(i)dl(i),i=1,⋯ ,K,l=\\begin{aligned}&amp; s(t)=\\sum_{i=1}^K\\left\\{A_{i 0}^{u v} \\sin \\left[\\phi_i(t)+\\varphi_{i 0}^{u v}\\right]+\\sum_{l=1}^L \\frac{A_{i l}^{u \\bar{u}}}{2}\\left\\{\\sin \\left[\\phi_i(t)+2 \\pi l F_0 t+\\varphi_{i l}^{u \\bar{u}}\\right]-\\sin \\left[\\phi_i(t)-2 \\pi l F_0 t-\\right.\\right.\\right. \\\\&amp; \\left.\\left.\\left.\\varphi_{i l}^{u \\bar{u}}\\right]\\right\\}+\\sum_{l=1}^L \\frac{A_{i l}^{v v}}{2}\\left\\{\\cos \\left[\\phi_i(t)-2 \\pi l F_0 t-\\varphi_{i l}^{v \\bar{v}}\\right]-\\cos \\left[\\phi_i(t)+2 \\pi l F_0 t+\\varphi_{i l}^{v \\bar{v}}\\right]\\right\\}\\right\\}+r(t) \\\\&amp; \\text { where, } \\phi_i(t)=2 \\pi \\int_0^t f_i(\\tau) d \\tau, A_{i l}^{c d}=\\left(\\left(c_l^{(i)}\\right)^2+\\left(d_l^{(i)}\\right)^2\\right)^{1 / 2}, \\varphi_{i l}^{c d}=\\arctan \\frac{c_l^{(i)}}{d_l^{(i)}}, i=1, \\cdots, K, l=\\end{aligned}​s(t)=i=1∑K​{Ai0uv​sin[ϕi​(t)+φi0uv​]+l=1∑L​2Ailuuˉ​​{sin[ϕi​(t)+2πlF0​t+φiluuˉ​]−sin[ϕi​(t)−2πlF0​t−φiluuˉ​]}+l=1∑L​2Ailvv​​{cos[ϕi​(t)−2πlF0​t−φilvvˉ​]−cos[ϕi​(t)+2πlF0​t+φilvvˉ​]}}+r(t) where, ϕi​(t)=2π∫0t​fi​(τ)dτ,Ailcd​=((cl(i)​)2+(dl(i)​)2)1/2,φilcd​=arctandl(i)​cl(i)​​,i=1,⋯,K,l=​$0, \\cdots, L, c d$ represents $u v, u \\bar{u}$ or $v \\bar{v}$. The above formula shows that each signal component is composed of a series of harmonic components with the instantaneous frequency range of $\\left[f_i(t)-L F_0, f_i(t)+L F_0\\right]$. Therefore, TFBPF can be regarded as a time-frequency bandpass filter with center frequency $f_i(t)$, of which bandwidth is:BW=2LF0=LfsNB W=2 L F_0=\\frac{L f_s}{N}BW=2LF0​=NLfs​​",
            "content_html": "<h2 id=\"abstract\">Abstract</h2><p align=\"justify\">In various applications such as speech processing, underwater sound, radar applicationand mechanical fault diagnosis, there are large number of nonstationary signals. In order toachieve nonstationary signal decomposition, the instantaneous frequency ridge is extractedthrough interactive mode, and a time-frequency bandpass filter (TFBPF) method is proposed.This method is the modified version of Intrinsic Chirp Component Decomposition (ICCD) andhas the physical essence of time-frequency domain bandpass filter. The superiority andapplication potential of TFBPF in complex engineering signal decomposition are demonstratedthrough two numerical examples. In the first one, we prove that TFBPF can decompose the weaksignal component directly through analyzing the vibration signal of hydraulic turbine; While inthe second one, we prove that TFBPF can effectively overcome the drawbacks of ICCD throughanalyzing the vibration signal during the speed-up process of a complex equipment. TFBPF isstill very effective even for complex signal decomposition in a strong noise environment.</p><h2 id=\"introduction\">Introduction</h2><p>There are large number of nonstationary signals. Such signals usuallyexhibit amplitude modulation and frequency modulation characteristics, which can be modeled asamplitude-modulated and frequency-modulated signals[5].</p><p align=\"justify\">In order to effectively extract the basic components of signal, signal decomposition has graduallybecome a hot spot in the field of signal processing. However, signals in nature and engineering usuallyexhibit strong time-varying nonlinear frequency modulation characteristics and often contain strongbackground noise, which brings great challenges to the decomposition of signal components.The Empirical Mode Decomposition (EMD) proposed by Huang et al. [6] is the most classicalnonstationary signal decomposition method. However, EMD has a series of problems such as boundaryeffect, mode aliasing, sensitivity to noise, and lack of mathematical theoretical support.</p><p align=\"justify\">Therefore, Smithproposed Local Mean Decomposition (LMD)[7], Frei proposed Intrinsic Time-Scale Decomposition(ITD)[8], which decomposes the signal into several product functions or rotation components, and thecalculation efficiency and accuracy are improved compared with EMD. In addition, relative scholarsproposed Iterative Filtering Decomposition (IFD) and its variants[9,10], which use low-pass filteringmethod to obtain the average of signal, and have been successfully used in the field of power grid data analysis and rotating machinery fault diagnosis. However, the above iterative decomposition method has poor noise resisting ability, or cannot decompose overlapping and cross components, which limited their application.</p><p align=\"justify\">Frequency domain filtering methods represented by Variational Mode Decomposition (VMD)[11] and Empirical Wavelet Transform (EWT)[12] essentially obtain signal components with high SNR by constructing different optimal filters, and have been widely used in finance, seismic data analysis[13,14] and medical disease monitoring[15]. But they will all suffer in decomposition of nonlinear frequency-modulated signal with broadband overlapping components.Time-frequency domain reconstruction methods represented by Synchrosqueezing Transform (SST)[16,17] achieve signal decomposition based on the reversibility of time-frequency transform, which overcomes the above problems, but they will produce large instantaneous frequency estimation error and signal reconstruction error when decomposing strong time-varying frequency modulation signals.</p><p align=\"justify\">Yang proposed general parameterized time-frequency transform[18], which can effectively obtain the time-frequency characterization of strong time-varying frequency modulation signals with high concentration. Chen solves the linear system on this basis, then proposes Intrinsic Chirp Component Decomposition (ICCD)[19] and Ridge Path Regrouping (RPRG)[20], which can effectively realize the decomposition of strong time-varying frequency modulation and even cross signal components. However, due to such methods extract instantaneous frequency ridges by iteratively detecting peaks in time-frequency diagram, they cannot decompose signal components with weak energy directly, and usually combine two uncorrelated signal components into a false signal component. The above shortcomings make them lack flexibility in complex signal decomposition problems.</p><p align=\"justify\">In this paper, the instantaneous frequency ridge is extracted through interactive mode, and a time-frequency bandpass filter (TFBPF) method is proposed to overcome the above-mentioned problems of ICCD. We proved that the physical essence of the proposed TFBPF method is time-frequency domain bandpass filter, and demonstrate the effectiveness of this method through two numerical examples.</p><h2 id=\"method\">Method</h2><p>The arbitrary component $s_i(t)$ of signal $s(t)$ can be expressed in the form of frequency modulation component:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>a</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mi>cos</mi><mo>⁡</mo><mrow><mo fence=\"true\">[</mo><mn>2</mn><mi>π</mi><msubsup><mo>∫</mo><mn>0</mn><mi>t</mi></msubsup><msub><mi>f</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>τ</mi><mo>+</mo><msub><mi>θ</mi><mn>0</mn></msub><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">s_i(t)=a(t) \\cos \\left[2 \\pi \\int_0^t f_i(\\tau) d \\tau+\\theta_0\\right]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9885em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span style=\"top:-3.2579em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3558em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span></span></span></span>where, $f_i(t)$ represents the instantaneous frequency of $s_i(t), t=t_0, t_1, \\cdots t_{N-1}$ represents sampling time, $N$ is the number of sampling points. In order to eliminate the nonlinear effect of the initial phase, the above equation can be rewritten as:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>u</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mi>cos</mi><mo>⁡</mo><mrow><mo fence=\"true\">[</mo><mn>2</mn><mi>π</mi><msubsup><mo>∫</mo><mn>0</mn><mi>t</mi></msubsup><msub><mi>f</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>τ</mi><mo fence=\"true\">]</mo></mrow><mo>+</mo><mi>v</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mi>sin</mi><mo>⁡</mo><mrow><mo fence=\"true\">[</mo><mn>2</mn><mi>π</mi><msubsup><mo>∫</mo><mn>0</mn><mi>t</mi></msubsup><msub><mi>f</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>τ</mi><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">s_i(t)=u(t) \\cos \\left[2 \\pi \\int_0^t f_i(\\tau) d \\tau\\right]+v(t) \\sin \\left[2 \\pi \\int_0^t f_i(\\tau) d \\tau\\right]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9885em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span style=\"top:-3.2579em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3558em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9885em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span style=\"top:-3.2579em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3558em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span></span></span></span>where, $u(t)$ and $v(t)$ are the amplitude functions of the signal components, which are described by the Fourier series model as follows:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>u</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mi>u</mi><mn>0</mn><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><munderover><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></munderover><mrow><mo fence=\"true\">[</mo><msubsup><mi>u</mi><mi>l</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mi>cos</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>2</mn><mi>π</mi><mi>l</mi><msub><mi>F</mi><mn>0</mn></msub><mi>t</mi><mo fence=\"true\">)</mo></mrow><mo>+</mo><msubsup><mover accent=\"true\"><mi>u</mi><mo>ˉ</mo></mover><mi>l</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mi>sin</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>2</mn><mi>π</mi><mi>l</mi><msub><mi>F</mi><mn>0</mn></msub><mi>t</mi><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>v</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mi>v</mi><mn>0</mn><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><munderover><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></munderover><mrow><mo fence=\"true\">[</mo><msubsup><mi>v</mi><mi>l</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mi>cos</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>2</mn><mi>π</mi><mi>l</mi><msub><mi>F</mi><mn>0</mn></msub><mi>t</mi><mo fence=\"true\">)</mo></mrow><mo>+</mo><msubsup><mover accent=\"true\"><mi>v</mi><mo>ˉ</mo></mover><mi>l</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mi>sin</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>2</mn><mi>π</mi><mi>l</mi><msub><mi>F</mi><mn>0</mn></msub><mi>t</mi><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}&amp; u(t)=u_0^{(i)}+\\sum_{l=1}^L\\left[u_l^{(i)} \\cos \\left(2 \\pi l F_0 t\\right)+\\bar{u}_l^{(i)} \\sin \\left(2 \\pi l F_0 t\\right)\\right] \\\\&amp; v(t)=v_0^{(i)}+\\sum_{l=1}^L\\left[v_l^{(i)} \\cos \\left(2 \\pi l F_0 t\\right)+\\bar{v}_l^{(i)} \\sin \\left(2 \\pi l F_0 t\\right)\\right]\\end{aligned}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.8609em;vertical-align:-3.1804em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6804em;\"><span style=\"top:-5.6804em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1804em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6804em;\"><span style=\"top:-5.6804em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\">u</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4337em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2663em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8479em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3021em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5678em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">u</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord\">ˉ</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4337em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2663em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8479em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3021em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5678em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord\">ˉ</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1804em;\"><span></span></span></span></span></span></span></span></span></span></span>where, $L$ represents the order of the Fourier model, $\\left{u_0^{(i)}, \\cdots, u_L^{(i)}, \\bar{u}_1^{(i)}, \\cdots \\bar{u}_L^{(i)}\\right}$ and $\\left{v_0^{(i)}, \\cdots, v_L^{(i)}, \\bar{v}_1^{(i)}, \\cdots \\bar{v}_L^{(i)}\\right}$ represent the Fourier coefficients to be estimated; The frequency resolution of the Fourier model is $F_0=f_s / Q N, Q \\in N^*, f_s$ is the sample frequency of signal. In this paper, the redundant Fourier model is obtained through $Q=2$, which can describe more complex functions [21].The instantaneous frequency $f_i(t)$ of the signal component is usually a function that changes continuously with time, so it can also be approximated by the Fourier series model, namely:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mi>f</mi><mi>c</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><mrow><mo fence=\"true\">[</mo><msubsup><mi>b</mi><mi>m</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mi>cos</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>2</mn><mi>π</mi><mi>m</mi><msub><mi>F</mi><mn>0</mn></msub><mi>t</mi><mo fence=\"true\">)</mo></mrow><mo>+</mo><msubsup><mover accent=\"true\"><mi>b</mi><mo>ˉ</mo></mover><mi>m</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mi>sin</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>2</mn><mi>π</mi><mi>m</mi><msub><mi>F</mi><mn>0</mn></msub><mi>t</mi><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">f_i(t)=f_c^{(i)}+\\sum_{m=1}^M\\left[b_m^{(i)} \\cos \\left(2 \\pi m F_0 t\\right)+\\bar{b}_m^{(i)} \\sin \\left(2 \\pi m F_0 t\\right)\\right]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2392em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1166em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9812em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1166em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">πm</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8312em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">b</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">ˉ</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1166em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">πm</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span></span></span></span></p><p>where, $f_c^{(i)}$ represents the carrier frequency of signal component, $M$ represents the order of the Fourier model, $\\left{b_1^{(i)}, \\cdots, b_M^{(i)}, \\bar{b}_1^{(i)}, \\cdots, \\bar{b}_M^{(i)}\\right}$ is the parameter set of the Fourier model, make $F_0=f_s /(2 N)$ to obtain the redundant Fourier model.</p><p>In the above signal model, there is linear relationship between the amplitude function and the instantaneous frequency. Therefore, the instantaneous frequency parameters can be estimated first, then the amplitude parameters can be estimated by solving the linear system, and finally the frequency modulation component can be reconstructed to realize signal decomposition. In ICCD, the instantaneous frequency is estimated by parameterized time-frequency transformation, which lacks flexibility in complex signal decomposition problems. Therefore, TFBPF uses interactive selection and interpolation to achieve instantaneous frequency estimation.</p><h3 id=\"instantaneous-frequency-estimation\">Instantaneous frequency estimation</h3><p>For the nonstationary signal to be analyzed, the time-frequency distribution can be obtained through Short Time Fourier Transform first:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">STFT</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow></msubsup><mi>s</mi><mo stretchy=\"false\">(</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mi>τ</mi><mo>−</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mrow><mi>j</mi><mn>2</mn><mi>π</mi><mi>f</mi><mi>τ</mi></mrow></msup><mi>d</mi><mi>τ</mi></mrow><annotation encoding=\"application/x-tex\">\\operatorname{STFT}(t, f)=\\int_{-\\infty}^{+\\infty} s(\\tau) h(\\tau-t) e^{j 2 \\pi f \\tau} d \\tau</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">STFT</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3804em;vertical-align:-0.4142em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9662em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.2579em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4142em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.1132em;\">τ</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span></span></span></span>where, $h(t)$ is window function. In the calculated time-frequency distribution diagram, the instantaneous frequency feature point set $\\left(t_i^{(j)}, f_i^{(j)}, f_i^{(j)^{\\prime}}\\right), j=0,1,2 \\cdots, n$ can be obtained interactively, where $t_i^{(j)}$ is the corresponding $j$-th time period of $i$-th signal component, $f_i^{(j)}$ is the instantaneous frequency at the corresponding time, and $f_i^{(j)^{\\prime}}$ is the derivative of $f_i^{(j)}$.The instantaneous frequency ridge $f_i(t)$ is estimated by piecewise cubic Hermite interpolation:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>f</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>j</mi></msub><mo fence=\"true\">)</mo></mrow><mo>=</mo><msubsup><mi>f</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msub><mi>α</mi><mi>i</mi></msub><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo>+</mo><msubsup><mi>f</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><msub><mi>α</mi><mrow><mi>i</mi><mn>1</mn></mrow></msub><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo>+</mo><msubsup><mi>f</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><msup><mo stretchy=\"false\">)</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></msubsup><msub><mi>β</mi><mi>i</mi></msub><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo>+</mo><msubsup><mi>f</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></msubsup><msub><mi>β</mi><mrow><mi>i</mi><mn>1</mn></mrow></msub><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo><msub><mi>t</mi><mi>j</mi></msub><mo>∈</mo><mrow><mo fence=\"true\">[</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">f_i^{(j)}\\left(t_j\\right)=f_i^{(j)} \\alpha_i\\left(t_i\\right)+f_i^{(j+1)} \\alpha_{i 1}\\left(t_i\\right)+f_i^{(j)^{\\prime}} \\beta_i\\left(t_i\\right)+f_i^{(j+1)^{\\prime}} \\beta_{i 1}\\left(t_i\\right), t_j \\in\\left[t_i^{(j)}, t_i^{(j+1)}\\right]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3309em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3217em;vertical-align:-0.2769em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3217em;vertical-align:-0.2769em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3761em;vertical-align:-0.2769em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0993em;\"><span style=\"top:-2.4231em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\"><span class=\"mclose mtight\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8278em;\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3854em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0993em;\"><span style=\"top:-2.4231em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\"><span class=\"mclose mtight\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8278em;\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span></span></span></span>Where<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"center\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mi>α</mi><mi>i</mi></msub><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>j</mi></msub><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><mn>2</mn><mfrac><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>−</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><mrow><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>−</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mfrac><mo fence=\"true\">)</mo></mrow><msup><mrow><mo fence=\"true\">(</mo><mfrac><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>−</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><mrow><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>−</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mfrac><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup><mo separator=\"true\">,</mo><msub><mi>α</mi><mrow><mi>i</mi><mn>1</mn></mrow></msub><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><mn>2</mn><mfrac><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>−</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><mrow><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>−</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mfrac><mo fence=\"true\">)</mo></mrow><msup><mrow><mo fence=\"true\">(</mo><mfrac><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>−</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><mrow><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>−</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mfrac><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mi>β</mi><mi>i</mi></msub><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo>−</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">)</mo></mrow><msup><mrow><mo fence=\"true\">(</mo><mfrac><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>−</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><mrow><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>−</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mfrac><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup><mo separator=\"true\">,</mo><msub><mi>β</mi><mrow><mi>i</mi><mn>1</mn></mrow></msub><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo>−</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">)</mo></mrow><msup><mrow><mo fence=\"true\">(</mo><mfrac><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>−</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><mrow><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>−</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mfrac><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{gathered}\\alpha_i\\left(t_j\\right)=\\left(1-2 \\frac{t_i-t_i^{(j)}}{t_i^{(j)}-t_i^{(j+1)}}\\right)\\left(\\frac{t_i-t_i^{(j+1)}}{t_i^{(j)}-t_i^{(j+1)}}\\right)^2, \\alpha_{i 1}\\left(t_i\\right)=\\left(1-2 \\frac{t_i-t_i^{(j+1)}}{t_i^{(j+1)}-t_i^{(j)}}\\right)\\left(\\frac{t_i-t_i^{(j)}}{t_i^{(j+1)}-t_i^{(j)}}\\right)^2 \\\\\\beta_i\\left(t_i\\right)=\\left(t_i-t_i^{(j)}\\right)\\left(\\frac{t_i-t_i^{(j+1)}}{t_i^{(j)}-t_i^{(j+1)}}\\right)^2, \\beta_{i 1}\\left(t_i\\right)=\\left(t_i-t_i^{(j+1)}\\right)\\left(\\frac{t_i-t_i^{(j)}}{t_i^{(j+1)}-t_i^{(j)}}\\right)^2\\end{gathered}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:7.0081em;vertical-align:-3.254em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.754em;\"><span style=\"top:-5.754em;\"><span class=\"pstrut\" style=\"height:3.954em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7218em;\"><span style=\"top:-2.11em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.2748em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.7218em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2117em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7218em;\"><span style=\"top:-2.11em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.2748em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.7218em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2117em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.954em;\"><span style=\"top:-4.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7218em;\"><span style=\"top:-2.11em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.2748em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.7218em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2117em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7218em;\"><span style=\"top:-2.11em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.2748em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.7218em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2117em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.954em;\"><span style=\"top:-4.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.954em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7218em;\"><span style=\"top:-2.11em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.2748em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.7218em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2117em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.954em;\"><span style=\"top:-4.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7218em;\"><span style=\"top:-2.11em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.2748em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.7218em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2117em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.954em;\"><span style=\"top:-4.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.254em;\"><span></span></span></span></span></span></span></span></span></span></span>therefore:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msubsup><mi>f</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>∈</mo><mrow><mo fence=\"true\">[</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msubsup><mi>f</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>∈</mo><mrow><mo fence=\"true\">[</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msubsup><mi>f</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>∈</mo><mrow><mo fence=\"true\">[</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><msubsup><mi>t</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">]</mo></mrow></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">f_i(t)=\\left\\{\\begin{array}{cc}f_i^{(0)}\\left(t_i\\right), &amp; t_i \\in\\left[t_i^{(0)}, t_i^{(1)}\\right] \\\\f_i^{(1)}\\left(t_i\\right), &amp; t_i \\in\\left[t_i^{(1)}, t_i^{(2)}\\right] \\\\\\vdots \\\\f_i^{(n-1)}\\left(t_i\\right), &amp; t_i \\in\\left[t_i^{(n-1)}, t_i^{(n)}\\right]\\end{array}\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:7.2601em;vertical-align:-3.38em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.85em;\"><span style=\"top:-1.366em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-1.358em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span style=\"height:1.816em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='1.816em' style='width:0.8889em' viewBox='0 0 888.89 1816' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V1816 H384z M384 0 H504 V1816 H384z'/></svg></span></span><span style=\"top:-3.816em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.958em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span style=\"height:1.816em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='1.816em' style='width:0.8889em' viewBox='0 0 888.89 1816' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V1816 H384z M384 0 H504 V1816 H384z'/></svg></span></span><span style=\"top:-6.766em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.35em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.88em;\"><span style=\"top:-6.4175em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">0</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-4.6175em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.4675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span><span style=\"top:-0.9575em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.38em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.88em;\"><span style=\"top:-5.88em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">0</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span></span></span><span style=\"top:-4.08em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span></span></span><span style=\"top:-0.42em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.38em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>Then the instantaneous frequency ridge can be fitted by the Fourier series model to obtain an instantaneous frequency estimate.</p><h3 id=\"amplitude-estimation\">Amplitude estimation</h3><p>In order to estimate the amplitude parameters, the signal model is written in the form of multi-component matrix:where, $\\boldsymbol{s}=\\left[s\\left(t_0\\right) \\cdots s\\left(t_{N-1}\\right)\\right]^T, \\boldsymbol{r}=\\left[r\\left(t_0\\right) \\cdots r\\left(t_{N-1}^K\\right)\\right]^T \\mathbf{H}_i \\boldsymbol{y}_i+\\boldsymbol{r}$ represents error, $\\boldsymbol{y}_i$ is the column vector of the $i$-th signal component composed of the corresponding amplitude parameters. When only one of the signal components is considered, $K=1$. The expression of $\\boldsymbol{y}_i$ is as follows:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"center\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mi mathvariant=\"bold-italic\">y</mi><mi>i</mi></msub><mo>=</mo><msup><mrow><mo fence=\"true\">[</mo><msup><mrow><mo fence=\"true\">(</mo><msubsup><mi>y</mi><mi>i</mi><mi>u</mi></msubsup><mo fence=\"true\">)</mo></mrow><mi>T</mi></msup><mspace width=\"1em\"/><msup><mrow><mo fence=\"true\">(</mo><msubsup><mi>y</mi><mi>i</mi><mi>v</mi></msubsup><mo fence=\"true\">)</mo></mrow><mi>T</mi></msup><mo fence=\"true\">]</mo></mrow><mi>T</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msubsup><mi>y</mi><mi>i</mi><mi>u</mi></msubsup><mo>=</mo><msup><mrow><mo fence=\"true\">[</mo><msubsup><mi>u</mi><mn>0</mn><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msubsup><mi>u</mi><mi>L</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><msubsup><mover accent=\"true\"><mi>u</mi><mo>ˉ</mo></mover><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><mo>⋯</mo><msubsup><mover accent=\"true\"><mi>u</mi><mo>ˉ</mo></mover><mi>L</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">]</mo></mrow><mi>T</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msubsup><mi>y</mi><mi>i</mi><mi>v</mi></msubsup><mo>=</mo><msup><mrow><mo fence=\"true\">[</mo><msubsup><mi>v</mi><mn>0</mn><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msubsup><mi>v</mi><mi>L</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><msubsup><mover accent=\"true\"><mi>v</mi><mo>ˉ</mo></mover><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><mo>⋯</mo><msubsup><mover accent=\"true\"><mi>v</mi><mo>ˉ</mo></mover><mi>L</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">]</mo></mrow><mi>T</mi></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{gathered}\\boldsymbol{y}_i=\\left[\\left(y_i^u\\right)^T \\quad\\left(y_i^v\\right)^T\\right]^T \\\\y_i^u=\\left[u_0^{(i)}, \\cdots, u_L^{(i)}, \\bar{u}_1^{(i)}, \\cdots \\bar{u}_L^{(i)}\\right]^T \\\\y_i^v=\\left[v_0^{(i)}, \\cdots, v_L^{(i)}, \\bar{v}_1^{(i)}, \\cdots \\bar{v}_L^{(i)}\\right]^T\\end{gathered}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.9938em;vertical-align:-3.2469em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.7469em;\"><span style=\"top:-5.7469em;\"><span class=\"pstrut\" style=\"height:3.3812em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03704em;\">y</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2175em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9812em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9812em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3812em;\"><span style=\"top:-3.6029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.4156em;\"><span class=\"pstrut\" style=\"height:3.3812em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4337em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2663em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4065em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2935em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5678em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">u</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord\">ˉ</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4337em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2663em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5678em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">u</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord\">ˉ</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4065em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2935em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3812em;\"><span style=\"top:-3.6029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span><span style=\"top:-1.0844em;\"><span class=\"pstrut\" style=\"height:3.3812em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4337em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2663em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4065em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2935em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5678em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord\">ˉ</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4337em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2663em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5678em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord\">ˉ</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4065em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2935em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3812em;\"><span style=\"top:-3.6029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2469em;\"><span></span></span></span></span></span></span></span></span></span></span>where superscript $T$ represents matrix transpose. For convenience, $\\phi_i(t)=2 \\pi \\int_0^t f_i(\\tau) d \\tau$, then the form of matrix $\\mathbf{H}_i$ is as follows:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"center\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mi mathvariant=\"bold\">H</mi><mi>i</mi></msub><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msubsup><mi mathvariant=\"bold\">H</mi><mi>i</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msubsup><mi mathvariant=\"bold\">H</mi><mi>i</mi><mi>s</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msubsup><mi mathvariant=\"bold\">H</mi><mi>i</mi><mi>c</mi></msubsup><mo>=</mo><mi mathvariant=\"normal\">diag</mi><mo>⁡</mo><mrow><mo fence=\"true\">[</mo><mi>cos</mi><mo>⁡</mo><msub><mi>ϕ</mi><mi>i</mi></msub><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mn>0</mn></msub><mo fence=\"true\">)</mo></mrow><mo>⋯</mo><mi>cos</mi><mo>⁡</mo><msub><mi>ϕ</mi><mi>i</mi></msub><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow><mi mathvariant=\"bold\">F</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msubsup><mi mathvariant=\"bold\">H</mi><mi>i</mi><mi>s</mi></msubsup><mo>=</mo><mi mathvariant=\"normal\">diag</mi><mo>⁡</mo><mrow><mo fence=\"true\">[</mo><mi>sin</mi><mo>⁡</mo><msub><mi>ϕ</mi><mi>i</mi></msub><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mn>0</mn></msub><mo fence=\"true\">)</mo></mrow><mo>⋯</mo><mi>sin</mi><mo>⁡</mo><msub><mi>ϕ</mi><mi>i</mi></msub><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow><mi mathvariant=\"bold\">F</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{gathered}\\mathbf{H}_i=\\left[\\begin{array}{ll}\\mathbf{H}_i^c &amp; \\mathbf{H}_i^s\\end{array}\\right] \\\\\\mathbf{H}_i^c=\\operatorname{diag}\\left[\\cos \\phi_i\\left(t_0\\right) \\cdots \\cos \\phi_i\\left(t_{N-1}\\right)\\right] \\mathbf{F} \\\\\\mathbf{H}_i^s=\\operatorname{diag}\\left[\\sin \\phi_i\\left(t_0\\right) \\cdots \\sin \\phi_i\\left(t_{N-1}\\right)\\right] \\mathbf{F}\\end{gathered}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.51em;vertical-align:-2.005em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.505em;\"><span style=\"top:-4.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-2.4413em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2587em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-2.4413em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2587em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span></span></span><span style=\"top:-3.155em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">diag</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbf\">F</span></span></span><span style=\"top:-1.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">diag</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbf\">F</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.005em;\"><span></span></span></span></span></span></span></span></span></span></span>where diag [.] represents the diagonal matrix. $\\mathbf{F}$ is an $N \\times(2 L+1)$ Fourier model matrix:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">F</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>cos</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>2</mn><mi>π</mi><msub><mi>F</mi><mn>0</mn></msub><msub><mi>t</mi><mn>0</mn></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>cos</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>2</mn><mi>π</mi><mi>L</mi><msub><mi>F</mi><mn>0</mn></msub><msub><mi>t</mi><mn>0</mn></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>sin</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>2</mn><mi>π</mi><msub><mi>F</mi><mn>0</mn></msub><msub><mi>t</mi><mn>0</mn></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>sin</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>2</mn><mi>π</mi><mi>L</mi><msub><mi>F</mi><mn>0</mn></msub><msub><mi>t</mi><mn>0</mn></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>cos</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>2</mn><mi>π</mi><msub><mi>F</mi><mn>0</mn></msub><msub><mi>t</mi><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>cos</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>2</mn><mi>π</mi><mi>L</mi><msub><mi>F</mi><mn>0</mn></msub><msub><mi>t</mi><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>sin</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>2</mn><mi>π</mi><msub><mi>F</mi><mn>0</mn></msub><msub><mi>t</mi><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>sin</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>2</mn><mi>π</mi><mi>L</mi><msub><mi>F</mi><mn>0</mn></msub><msub><mi>t</mi><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mo stretchy=\"false\">(</mo><mn>18</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf{F}=\\left[\\begin{array}{ccccccc}1 &amp; \\cos \\left(2 \\pi F_0 t_0\\right) &amp; \\cdots &amp; \\cos \\left(2 \\pi L F_0 t_0\\right) &amp; \\sin \\left(2 \\pi F_0 t_0\\right) &amp; \\cdots &amp; \\sin \\left(2 \\pi L F_0 t_0\\right) \\\\\\vdots &amp; \\vdots &amp; \\cdots &amp; \\vdots &amp; \\vdots &amp; \\cdots &amp; \\vdots \\\\1 &amp; \\cos \\left(2 \\pi F_0 t_{N-1}\\right) &amp; \\cdots &amp; \\cos \\left(2 \\pi L F_0 t_{N-1}\\right) &amp; \\sin \\left(2 \\pi F_0 t_{N-1}\\right) &amp; \\cdots &amp; \\sin \\left(2 \\pi L F_0 t_{N-1}\\right)\\end{array}\\right](18)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord mathbf\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.26em;vertical-align:-1.88em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35em;\"><span style=\"top:-1.95em;\"><span class=\"pstrut\" style=\"height:3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-3.097em;\"><span class=\"pstrut\" style=\"height:3.155em;\"></span><span style=\"height:0.616em;width:0.6667em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.6667em' height='0.616em' style='width:0.6667em' viewBox='0 0 666.67 616' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V616 H319z M319 0 H403 V616 H319z'/></svg></span></span><span style=\"top:-4.35em;\"><span class=\"pstrut\" style=\"height:3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.85em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.38em;\"><span style=\"top:-5.2275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.3675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span><span style=\"top:-2.1675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.88em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.38em;\"><span style=\"top:-5.2275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span><span style=\"top:-3.3675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span><span style=\"top:-2.1675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.88em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.38em;\"><span style=\"top:-5.04em;\"><span class=\"pstrut\" style=\"height:3.5em;\"></span><span class=\"mord\"><span class=\"minner\">⋯</span></span></span><span style=\"top:-3.18em;\"><span class=\"pstrut\" style=\"height:3.5em;\"></span><span class=\"mord\"><span class=\"minner\">⋯</span></span></span><span style=\"top:-1.98em;\"><span class=\"pstrut\" style=\"height:3.5em;\"></span><span class=\"mord\"><span class=\"minner\">⋯</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.88em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.38em;\"><span style=\"top:-5.2275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">L</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span><span style=\"top:-3.3675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span><span style=\"top:-2.1675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">L</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.88em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.38em;\"><span style=\"top:-5.2275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span><span style=\"top:-3.3675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span><span style=\"top:-2.1675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.88em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.38em;\"><span style=\"top:-5.04em;\"><span class=\"pstrut\" style=\"height:3.5em;\"></span><span class=\"mord\"><span class=\"minner\">⋯</span></span></span><span style=\"top:-3.18em;\"><span class=\"pstrut\" style=\"height:3.5em;\"></span><span class=\"mord\"><span class=\"minner\">⋯</span></span></span><span style=\"top:-1.98em;\"><span class=\"pstrut\" style=\"height:3.5em;\"></span><span class=\"mord\"><span class=\"minner\">⋯</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.88em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.38em;\"><span style=\"top:-5.2275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">L</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span><span style=\"top:-3.3675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span><span style=\"top:-2.1675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">L</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.88em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35em;\"><span style=\"top:-1.95em;\"><span class=\"pstrut\" style=\"height:3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-3.097em;\"><span class=\"pstrut\" style=\"height:3.155em;\"></span><span style=\"height:0.616em;width:0.6667em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.6667em' height='0.616em' style='width:0.6667em' viewBox='0 0 666.67 616' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V616 H263z M263 0 H347 V616 H263z'/></svg></span></span><span style=\"top:-4.35em;\"><span class=\"pstrut\" style=\"height:3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.85em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">18</span><span class=\"mclose\">)</span></span></span></span>The above formula shows that for $i$-th signal component there is a linear relationship between $\\boldsymbol{y}_i$ and $\\mathbf{H}_i$, while the matrix $\\mathbf{H}_i$ is determined by the instantaneous frequency $f_i(t)$. Therefore, under the condition that $\\mathbf{H}_i$ is known, the amplitude parameter vector $\\boldsymbol{y}_i$ can be estimated by solving an ill-posed inverse problem of linear system, which can be achieved through Tikhonov regularization:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mover accent=\"true\"><mi mathvariant=\"bold-italic\">y</mi><mo>~</mo></mover><mi>i</mi></msub><mo>=</mo><mi>arg</mi><mo>⁡</mo><msub><mrow><mi>min</mi><mo>⁡</mo></mrow><msub><mi mathvariant=\"bold-italic\">y</mi><mi>i</mi></msub></msub><mrow><mo fence=\"true\">{</mo><msubsup><mrow><mo fence=\"true\">∥</mo><mi mathvariant=\"bold-italic\">s</mi><mo>−</mo><msub><mi mathvariant=\"bold\">H</mi><mi>i</mi></msub><msub><mi mathvariant=\"bold-italic\">y</mi><mi>i</mi></msub><mo fence=\"true\">∥</mo></mrow><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><msub><mi>λ</mi><mn>1</mn></msub><msubsup><mrow><mo fence=\"true\">∥</mo><msub><mi mathvariant=\"bold-italic\">y</mi><mi>i</mi></msub><mo fence=\"true\">∥</mo></mrow><mn>2</mn><mn>2</mn></msubsup><mo fence=\"true\">}</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\tilde{\\boldsymbol{y}}_i=\\arg \\min _{\\boldsymbol{y}_i}\\left\\{\\left\\|\\boldsymbol{s}-\\mathbf{H}_i \\boldsymbol{y}_i\\right\\|_2^2+\\lambda_1\\left\\|\\boldsymbol{y}_i\\right\\|_2^2\\right\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9254em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6813em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03704em;\">y</span></span></span></span><span style=\"top:-3.3634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2175em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop\">min</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1611em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord boldsymbol mtight\" style=\"margin-right:0.03704em;\">y</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2052em;\"><span style=\"top:-2.2341em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2659em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">{</span></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∥</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">s</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03704em;\">y</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2175em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">∥</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∥</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03704em;\">y</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2175em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">∥</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">}</span></span></span></span></span></span>where, $|\\cdot|_2$ represents $l_2$ norm; $\\lambda_1&gt;0$ represents regularization parameter, and can be selected by generalized cross validation (GCV) method. The analytical solution of the above formula is given by the following expression:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mover accent=\"true\"><mi mathvariant=\"bold-italic\">y</mi><mo>~</mo></mover><mi>i</mi></msub><mo>=</mo><msup><mrow><mo fence=\"true\">(</mo><msubsup><mi mathvariant=\"bold\">H</mi><mi>i</mi><mi>T</mi></msubsup><msub><mi mathvariant=\"bold\">H</mi><mi>i</mi></msub><mo>+</mo><msub><mi>λ</mi><mn>1</mn></msub><mi mathvariant=\"bold\">I</mi><mo fence=\"true\">)</mo></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msup><msubsup><mi mathvariant=\"bold\">H</mi><mi>i</mi><mi>T</mi></msubsup><mi mathvariant=\"bold-italic\">s</mi></mrow><annotation encoding=\"application/x-tex\">\\tilde{\\boldsymbol{y}}_i=\\left(\\mathbf{H}_i^T \\mathbf{H}_i+\\lambda_1 \\mathbf{I}\\right)^{-1} \\mathbf{H}_i^T \\boldsymbol{s}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9254em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6813em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03704em;\">y</span></span></span></span><span style=\"top:-3.3634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2175em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.404em;vertical-align:-0.35em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathbf\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-2.4413em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2587em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathbf\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathbf\">I</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.054em;\"><span style=\"top:-3.3029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-2.4413em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2587em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">s</span></span></span></span></span></span>where, I represents the identity matrix. Based on the obtained amplitude parameters the corresponding signal component can be reconstructed:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mover accent=\"true\"><mi mathvariant=\"bold-italic\">s</mi><mo>~</mo></mover><mi>i</mi></msub><mo>=</mo><msub><mi mathvariant=\"bold\">H</mi><mi>i</mi></msub><msub><mover accent=\"true\"><mi mathvariant=\"bold-italic\">y</mi><mo>~</mo></mover><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\tilde{\\boldsymbol{s}}_i=\\mathbf{H}_i \\tilde{\\boldsymbol{y}}_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8313em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6813em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">s</span></span></span></span><span style=\"top:-3.3634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9303em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6813em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03704em;\">y</span></span></span></span><span style=\"top:-3.3634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2175em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span></span></span></span>All of the signal components can be decomposed and reconstructed by repeating the above process. The proposed method is called Time-Frequency Bandpass Filter (TFBPF).</p><h2 id=\"physical-essence\">Physical essence</h2><p>In this section, we explain that the proposed method can essentially be regarded as a time-frequency band pass filter. The signal model can be organized as:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>s</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mrow><mo fence=\"true\">{</mo><msubsup><mi>A</mi><mrow><mi>i</mi><mn>0</mn></mrow><mrow><mi>u</mi><mi>v</mi></mrow></msubsup><mi>sin</mi><mo>⁡</mo><mrow><mo fence=\"true\">[</mo><msub><mi>ϕ</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><msubsup><mi>φ</mi><mrow><mi>i</mi><mn>0</mn></mrow><mrow><mi>u</mi><mi>v</mi></mrow></msubsup><mo fence=\"true\">]</mo></mrow><mo>+</mo><munderover><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></munderover><mfrac><msubsup><mi>A</mi><mrow><mi>i</mi><mi>l</mi></mrow><mrow><mi>u</mi><mover accent=\"true\"><mi>u</mi><mo>ˉ</mo></mover></mrow></msubsup><mn>2</mn></mfrac><mrow><mo fence=\"true\">{</mo><mi>sin</mi><mo>⁡</mo><mrow><mo fence=\"true\">[</mo><msub><mi>ϕ</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mn>2</mn><mi>π</mi><mi>l</mi><msub><mi>F</mi><mn>0</mn></msub><mi>t</mi><mo>+</mo><msubsup><mi>φ</mi><mrow><mi>i</mi><mi>l</mi></mrow><mrow><mi>u</mi><mover accent=\"true\"><mi>u</mi><mo>ˉ</mo></mover></mrow></msubsup><mo fence=\"true\">]</mo></mrow><mo>−</mo><mi>sin</mi><mo>⁡</mo><mrow><mo fence=\"true\">[</mo><msub><mi>ϕ</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mn>2</mn><mi>π</mi><mi>l</mi><msub><mi>F</mi><mn>0</mn></msub><mi>t</mi><mo>−</mo></mrow></mrow></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mrow><mrow><mrow><msubsup><mi>φ</mi><mrow><mi>i</mi><mi>l</mi></mrow><mrow><mi>u</mi><mover accent=\"true\"><mi>u</mi><mo>ˉ</mo></mover></mrow></msubsup><mo fence=\"true\">]</mo></mrow><mo fence=\"true\">}</mo></mrow><mo>+</mo><munderover><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></munderover><mfrac><msubsup><mi>A</mi><mrow><mi>i</mi><mi>l</mi></mrow><mrow><mi>v</mi><mi>v</mi></mrow></msubsup><mn>2</mn></mfrac><mrow><mo fence=\"true\">{</mo><mi>cos</mi><mo>⁡</mo><mrow><mo fence=\"true\">[</mo><msub><mi>ϕ</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mn>2</mn><mi>π</mi><mi>l</mi><msub><mi>F</mi><mn>0</mn></msub><mi>t</mi><mo>−</mo><msubsup><mi>φ</mi><mrow><mi>i</mi><mi>l</mi></mrow><mrow><mi>v</mi><mover accent=\"true\"><mi>v</mi><mo>ˉ</mo></mover></mrow></msubsup><mo fence=\"true\">]</mo></mrow><mo>−</mo><mi>cos</mi><mo>⁡</mo><mrow><mo fence=\"true\">[</mo><msub><mi>ϕ</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mn>2</mn><mi>π</mi><mi>l</mi><msub><mi>F</mi><mn>0</mn></msub><mi>t</mi><mo>+</mo><msubsup><mi>φ</mi><mrow><mi>i</mi><mi>l</mi></mrow><mrow><mi>v</mi><mover accent=\"true\"><mi>v</mi><mo>ˉ</mo></mover></mrow></msubsup><mo fence=\"true\">]</mo></mrow><mo fence=\"true\">}</mo></mrow><mo fence=\"true\">}</mo></mrow><mo>+</mo><mi>r</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext> where, </mtext><msub><mi>ϕ</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn><mi>π</mi><msubsup><mo>∫</mo><mn>0</mn><mi>t</mi></msubsup><msub><mi>f</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>τ</mi><mo separator=\"true\">,</mo><msubsup><mi>A</mi><mrow><mi>i</mi><mi>l</mi></mrow><mrow><mi>c</mi><mi>d</mi></mrow></msubsup><mo>=</mo><msup><mrow><mo fence=\"true\">(</mo><msup><mrow><mo fence=\"true\">(</mo><msubsup><mi>c</mi><mi>l</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup><mo>+</mo><msup><mrow><mo fence=\"true\">(</mo><msubsup><mi>d</mi><mi>l</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup><mo fence=\"true\">)</mo></mrow><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow></msup><mo separator=\"true\">,</mo><msubsup><mi>φ</mi><mrow><mi>i</mi><mi>l</mi></mrow><mrow><mi>c</mi><mi>d</mi></mrow></msubsup><mo>=</mo><mi>arctan</mi><mo>⁡</mo><mfrac><msubsup><mi>c</mi><mi>l</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msubsup><mi>d</mi><mi>l</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mfrac><mo separator=\"true\">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><mi>K</mi><mo separator=\"true\">,</mo><mi>l</mi><mo>=</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}&amp; s(t)=\\sum_{i=1}^K\\left\\{A_{i 0}^{u v} \\sin \\left[\\phi_i(t)+\\varphi_{i 0}^{u v}\\right]+\\sum_{l=1}^L \\frac{A_{i l}^{u \\bar{u}}}{2}\\left\\{\\sin \\left[\\phi_i(t)+2 \\pi l F_0 t+\\varphi_{i l}^{u \\bar{u}}\\right]-\\sin \\left[\\phi_i(t)-2 \\pi l F_0 t-\\right.\\right.\\right. \\\\&amp; \\left.\\left.\\left.\\varphi_{i l}^{u \\bar{u}}\\right]\\right\\}+\\sum_{l=1}^L \\frac{A_{i l}^{v v}}{2}\\left\\{\\cos \\left[\\phi_i(t)-2 \\pi l F_0 t-\\varphi_{i l}^{v \\bar{v}}\\right]-\\cos \\left[\\phi_i(t)+2 \\pi l F_0 t+\\varphi_{i l}^{v \\bar{v}}\\right]\\right\\}\\right\\}+r(t) \\\\&amp; \\text { where, } \\phi_i(t)=2 \\pi \\int_0^t f_i(\\tau) d \\tau, A_{i l}^{c d}=\\left(\\left(c_l^{(i)}\\right)^2+\\left(d_l^{(i)}\\right)^2\\right)^{1 / 2}, \\varphi_{i l}^{c d}=\\arctan \\frac{c_l^{(i)}}{d_l^{(i)}}, i=1, \\cdots, K, l=\\end{aligned}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:10.1331em;vertical-align:-4.8166em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.3166em;\"><span style=\"top:-7.3166em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.8861em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.5479em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.8166em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.3166em;\"><span style=\"top:-7.3166em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">uv</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">φ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">uv</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8479em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3021em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4374em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7604em;\"><span style=\"top:-2.4169em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5678em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\">u</span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord mtight\">ˉ</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2831em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">{</span></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">φ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8104em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5678em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\">u</span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord mtight\">ˉ</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">−</span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.8861em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen nulldelimiter\"></span><span class=\"minner\"><span class=\"mopen nulldelimiter\"></span><span class=\"minner\"><span class=\"mopen nulldelimiter\"></span><span class=\"mord\"><span class=\"mord mathnormal\">φ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8104em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5678em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\">u</span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord mtight\">ˉ</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">}</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8479em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3021em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-2.4169em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">vv</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2831em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">{</span></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">φ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8104em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5678em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord mtight\">ˉ</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">φ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8104em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5678em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord mtight\">ˉ</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">}</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">}</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span><span style=\"top:-0.5479em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\"> where, </span></span><span class=\"mord\"><span class=\"mord mathnormal\">ϕ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5435em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9119em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.354em;\"><span style=\"top:-3.6029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.354em;\"><span style=\"top:-3.6029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7279em;\"><span style=\"top:-3.9029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1/2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">φ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop\">arctan</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7361em;\"><span style=\"top:-2.11em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.2748em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.7361em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2361em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.8166em;\"><span></span></span></span></span></span></span></span></span></span></span>$0, \\cdots, L, c d$ represents $u v, u \\bar{u}$ or $v \\bar{v}$. The above formula shows that each signal component is composed of a series of harmonic components with the instantaneous frequency range of $\\left[f_i(t)-L F_0, f_i(t)+L F_0\\right]$. Therefore, TFBPF can be regarded as a time-frequency bandpass filter with center frequency $f_i(t)$, of which bandwidth is:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>W</mi><mo>=</mo><mn>2</mn><mi>L</mi><msub><mi>F</mi><mn>0</mn></msub><mo>=</mo><mfrac><mrow><mi>L</mi><msub><mi>f</mi><mi>s</mi></msub></mrow><mi>N</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">B W=2 L F_0=\\frac{L f_s}{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">L</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2772em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9322em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">L</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>",
            "url": "http://localhost:4000/2023/03/30/time-frequency-bandpass-filter",
            
            
            
            "tags": ["filters","time_frequency_methods"],
            
            "date_published": "2023-03-30T00:00:00+01:00",
            "date_modified": "2023-03-30T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/29/ridge-path-regrouping",
            "title": "Ridge Path Regrouping and its Variants",
            "summary": "This article explains the concept of Ridge path regrouping along with its variants, including the Ridge path regrouping with fixed number of groups, Ridge path pruning, and Ridge path regrouping with custom constraints. The article also includes python implementations for each variant along with an example. ",
            "content_text": "Ridge Path Regrouping and its VariantsIntroductionRidge regression is a popular method in machine learning used to deal with the overfitting problem. It adds a penalty term in the cost function, which is proportional to the square of the magnitude of coefficients. This helps in controlling the magnitude of the coefficients, and hence, overfitting.One of the challenges with ridge regression is that it requires choosing a regularization parameter, also known as lambda. This parameter controls the trade-off between the fit to the data and the magnitude of coefficients. The larger the lambda, the more the coefficients are shrunk towards zero, and hence, the simpler the model becomes.The Ridge Path is a graphical representation of how the coefficients of the selected features change with different values of lambda. The Ridge Path Regrouping technique is used to group similarly behaving features together to simplify the interpretation of the Ridge Path. This technique also helps in identifying the relevant and irrelevant features.In this article, we will explore Ridge Path Regrouping and its variants, including the Ridge path regrouping with fixed number of groups, Ridge path pruning, and Ridge path regrouping with custom constraints. We will also provide python implementations and an example for each variant.The Ridge PathBefore we dive into Ridge Path Regrouping, let us first understand the concept of the Ridge Path.The Ridge path is a curve that maps the coefficients of the selected features against different values of lambda.In the above graph, we can see the Ridge Paths for 3 features against different values of lambda. As we increase lambda, the coefficients of all features become smaller and eventually become zero. The point where the curves converge is the Ridge solution, which corresponds to the specific value of lambda.The Ridge Path can reveal useful information about the data, such as the relevant and the irrelevant features. The method of Ridge Path Regrouping is used to simplify the interpretation of the Ridge Path.Ridge Path RegroupingRidge Path Regrouping is used to group similarly behaving features together to simplify the interpretation of the Ridge Path. It helps in identifying the relevant and irrelevant features. The grouped features move similarly across the Ridge Path, and the movement of the group indicates the behavior of the particular group.One of the methods to perform Ridge Path Regrouping is by applying the Hierarchical clustering algorithm to the Ridge Path data. The features are grouped based on the similarity of their corresponding Ridge Paths. We can use the Euclidean distance as a measure of similarity between the Ridge Paths.The dendrogram obtained from the hierarchical clustering algorithm shows the groups of features that are similar in behavior. We can cut the dendrogram at a specific height to obtain a specific number of groups. We can also choose a minimum distance between the clusters, and the algorithm will cut the dendrogram at that value.The number of groups obtained through the algorithm can have a significant impact on the interpretability of the Ridge Path. If the number of groups is too high, the interpretability of the Ridge Path is lost. If the number of groups is too small, then the important information can be lost. Therefore, it is essential to choose an appropriate number of groups.Ridge Regrouping with Fixed Number of GroupsOne of the variants of Ridge Path Regrouping is Ridge Regrouping with a fixed number of groups. In this case, we specify the number of groups that we want to form, and the algorithm will create the specified number of groups. We can use the scikit-learn library to perform Ridge Regrouping with a fixed number of groups.To perform Ridge Regrouping using scikit-learn, follow the below steps:  Import the Ridge and the Hierarchical clustering algorithm from the scikit-learn library.from sklearn.linear_model import Ridgefrom sklearn.cluster import AgglomerativeClustering  Obtain the Ridge Path data by fitting the Ridge Regression on the data set for different values of lambda.alphas = np.logspace(-10, 1, 400)coefs = []for a in alphas:  \tridge = Ridge(alpha=a, fit_intercept=False)   \tridge.fit(X, y)   \tcoefs.append(ridge.coef_)  Perform the Hierarchical clustering on the Ridge Paths.n_clusters = 3 # specify the number of groupscluster = AgglomerativeClustering(n_clusters=n_clusters, affinity='euclidean', linkage='ward')  labels = cluster.fit_predict(coefs)We can plot the dendrogram to visualize the clustering results.In the above graph, we can see the dendrogram with three groups.Ridge Path PruningAnother variant of Ridge Path Regrouping is Ridge Path Pruning. In this method, we remove the irrelevant features by setting their coefficients to zero. We can set a threshold below which the coefficients will be set to zero.alpha_opt = 0.18 coefs = []for a in alphas:    ridge = Ridge(alpha=a, fit_intercept=False)    ridge.fit(X, y)    coefs.append(ridge.coef_)    # Prune Ridge Pathcoefs = np.array(coefs)mask = np.where(np.abs(coefs) &lt; 0.01, 0, 1)coefs = mask * coefsAfter pruning the Ridge Path, we can plot the remaining Ridge Path.In the above graph, we can see that the Ridge Paths of the irrelevant features are set to zero.Ridge Path Regrouping with Custom ConstraintsThe third variant of Ridge Path Regrouping is Ridge Path Regrouping with custom constraints. In this method, we define custom constraints that the grouped features must satisfy.For example, we can specify that the Ridge Paths within the same group should have similar behavior for a specific range of lambda values. We can use the KMeans clustering algorithm to satisfy this constraint. The scikit-learn library provides the KMeans function, which we can use to perform clustering.from sklearn.cluster import KMeans# Define the custom constraintk_clusters = 3 # specify the number of groupskmeans = KMeans(n_clusters=k_clusters, random_state=0)# Cluster the Ridge Path datalabels = kmeans.fit_predict(coefs)After clustering the Ridge Paths, we can plot the obtained groups.In the above graph, we can see that the features are grouped based on the custom constraint.ConclusionIn this article, we discussed Ridge Path Regrouping and its variants, including Ridge Regrouping with a fixed number of groups, Ridge Path Pruning, and Ridge Path Regrouping with custom constraints. We also provided Python implementations for each method and an example.Ridge Path Regrouping is a useful technique for feature selection, and it helps in identifying the relevant and irrelevant features. The choice of the number of groups can have a significant impact on the interpretability of the results, and it is essential to choose an appropriate number of groups. Ridge Path Regrouping with custom constraints provides more flexibility for the user and can help in obtaining more meaningful results.Overall, Ridge Path Regrouping and its variants provide a powerful tool for feature selection, and it can be applied to various machine learning problems.",
            "content_html": "<h1 id=\"ridge-path-regrouping-and-its-variants\">Ridge Path Regrouping and its Variants</h1><h2 id=\"introduction\">Introduction</h2><p>Ridge regression is a popular method in machine learning used to deal with the overfitting problem. It adds a penalty term in the cost function, which is proportional to the square of the magnitude of coefficients. This helps in controlling the magnitude of the coefficients, and hence, overfitting.</p><p>One of the challenges with ridge regression is that it requires choosing a regularization parameter, also known as lambda. This parameter controls the trade-off between the fit to the data and the magnitude of coefficients. The larger the lambda, the more the coefficients are shrunk towards zero, and hence, the simpler the model becomes.</p><p>The Ridge Path is a graphical representation of how the coefficients of the selected features change with different values of lambda. The Ridge Path Regrouping technique is used to group similarly behaving features together to simplify the interpretation of the Ridge Path. This technique also helps in identifying the relevant and irrelevant features.</p><p>In this article, we will explore Ridge Path Regrouping and its variants, including the Ridge path regrouping with fixed number of groups, Ridge path pruning, and Ridge path regrouping with custom constraints. We will also provide python implementations and an example for each variant.</p><h2 id=\"the-ridge-path\">The Ridge Path</h2><p>Before we dive into Ridge Path Regrouping, let us first understand the concept of the Ridge Path.</p><p>The Ridge path is a curve that maps the coefficients of the selected features against different values of lambda.</p><p><img src=\"https://raw.githubusercontent.com/pavandonthireddy/Ridge-Path-Regrouping/main/Ridge%20Path.png\" alt=\"\" /></p><p>In the above graph, we can see the Ridge Paths for 3 features against different values of lambda. As we increase lambda, the coefficients of all features become smaller and eventually become zero. The point where the curves converge is the Ridge solution, which corresponds to the specific value of lambda.</p><p>The Ridge Path can reveal useful information about the data, such as the relevant and the irrelevant features. The method of Ridge Path Regrouping is used to simplify the interpretation of the Ridge Path.</p><h2 id=\"ridge-path-regrouping\">Ridge Path Regrouping</h2><p>Ridge Path Regrouping is used to group similarly behaving features together to simplify the interpretation of the Ridge Path. It helps in identifying the relevant and irrelevant features. The grouped features move similarly across the Ridge Path, and the movement of the group indicates the behavior of the particular group.</p><p>One of the methods to perform Ridge Path Regrouping is by applying the Hierarchical clustering algorithm to the Ridge Path data. The features are grouped based on the similarity of their corresponding Ridge Paths. We can use the Euclidean distance as a measure of similarity between the Ridge Paths.</p><p>The dendrogram obtained from the hierarchical clustering algorithm shows the groups of features that are similar in behavior. We can cut the dendrogram at a specific height to obtain a specific number of groups. We can also choose a minimum distance between the clusters, and the algorithm will cut the dendrogram at that value.</p><p>The number of groups obtained through the algorithm can have a significant impact on the interpretability of the Ridge Path. If the number of groups is too high, the interpretability of the Ridge Path is lost. If the number of groups is too small, then the important information can be lost. Therefore, it is essential to choose an appropriate number of groups.</p><h3 id=\"ridge-regrouping-with-fixed-number-of-groups\">Ridge Regrouping with Fixed Number of Groups</h3><p>One of the variants of Ridge Path Regrouping is Ridge Regrouping with a fixed number of groups. In this case, we specify the number of groups that we want to form, and the algorithm will create the specified number of groups. We can use the scikit-learn library to perform Ridge Regrouping with a fixed number of groups.</p><p>To perform Ridge Regrouping using scikit-learn, follow the below steps:</p><ol>  <li>Import the Ridge and the Hierarchical clustering algorithm from the scikit-learn library.</li></ol><pre><code class=\"language-python\">from sklearn.linear_model import Ridgefrom sklearn.cluster import AgglomerativeClustering</code></pre><ol>  <li>Obtain the Ridge Path data by fitting the Ridge Regression on the data set for different values of lambda.</li></ol><pre><code class=\"language-python\">alphas = np.logspace(-10, 1, 400)coefs = []for a in alphas:  \tridge = Ridge(alpha=a, fit_intercept=False)   \tridge.fit(X, y)   \tcoefs.append(ridge.coef_)</code></pre><ol>  <li>Perform the Hierarchical clustering on the Ridge Paths.</li></ol><pre><code class=\"language-python\">n_clusters = 3 # specify the number of groupscluster = AgglomerativeClustering(n_clusters=n_clusters, affinity='euclidean', linkage='ward')  labels = cluster.fit_predict(coefs)</code></pre><p>We can plot the dendrogram to visualize the clustering results.</p><p><img src=\"https://raw.githubusercontent.com/pavandonthireddy/Ridge-Path-Regrouping/main/Ridge%20Path%20with%20Fixed%20Number%20of%20Groups.png\" alt=\"\" /></p><p>In the above graph, we can see the dendrogram with three groups.</p><h3 id=\"ridge-path-pruning\">Ridge Path Pruning</h3><p>Another variant of Ridge Path Regrouping is Ridge Path Pruning. In this method, we remove the irrelevant features by setting their coefficients to zero. We can set a threshold below which the coefficients will be set to zero.</p><pre><code class=\"language-python\">alpha_opt = 0.18 coefs = []for a in alphas:    ridge = Ridge(alpha=a, fit_intercept=False)    ridge.fit(X, y)    coefs.append(ridge.coef_)    # Prune Ridge Pathcoefs = np.array(coefs)mask = np.where(np.abs(coefs) &lt; 0.01, 0, 1)coefs = mask * coefs</code></pre><p>After pruning the Ridge Path, we can plot the remaining Ridge Path.</p><p><img src=\"https://raw.githubusercontent.com/pavandonthireddy/Ridge-Path-Regrouping/main/Ridge%20Path%20Pruning.png\" alt=\"\" /></p><p>In the above graph, we can see that the Ridge Paths of the irrelevant features are set to zero.</p><h3 id=\"ridge-path-regrouping-with-custom-constraints\">Ridge Path Regrouping with Custom Constraints</h3><p>The third variant of Ridge Path Regrouping is Ridge Path Regrouping with custom constraints. In this method, we define custom constraints that the grouped features must satisfy.</p><p>For example, we can specify that the Ridge Paths within the same group should have similar behavior for a specific range of lambda values. We can use the KMeans clustering algorithm to satisfy this constraint. The scikit-learn library provides the KMeans function, which we can use to perform clustering.</p><pre><code class=\"language-python\">from sklearn.cluster import KMeans# Define the custom constraintk_clusters = 3 # specify the number of groupskmeans = KMeans(n_clusters=k_clusters, random_state=0)# Cluster the Ridge Path datalabels = kmeans.fit_predict(coefs)</code></pre><p>After clustering the Ridge Paths, we can plot the obtained groups.</p><p><img src=\"https://raw.githubusercontent.com/pavandonthireddy/Ridge-Path-Regrouping/main/Ridge%20Path%20Custom%20Constraints.png\" alt=\"\" /></p><p>In the above graph, we can see that the features are grouped based on the custom constraint.</p><h2 id=\"conclusion\">Conclusion</h2><p>In this article, we discussed Ridge Path Regrouping and its variants, including Ridge Regrouping with a fixed number of groups, Ridge Path Pruning, and Ridge Path Regrouping with custom constraints. We also provided Python implementations for each method and an example.</p><p>Ridge Path Regrouping is a useful technique for feature selection, and it helps in identifying the relevant and irrelevant features. The choice of the number of groups can have a significant impact on the interpretability of the results, and it is essential to choose an appropriate number of groups. Ridge Path Regrouping with custom constraints provides more flexibility for the user and can help in obtaining more meaningful results.</p><p>Overall, Ridge Path Regrouping and its variants provide a powerful tool for feature selection, and it can be applied to various machine learning problems.</p>",
            "url": "http://localhost:4000/2023/03/29/ridge-path-regrouping",
            
            
            
            "tags": ["RPR","time_frequency_methods"],
            
            "date_published": "2023-03-29T00:00:00+01:00",
            "date_modified": "2023-03-29T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/28/intrinsic-chirp-component-decomposition",
            "title": "Intrinsic Chirp Component Decomposition and its Variants",
            "summary": "This article discusses the theoretical concept of intrinsic chirp component decomposition along with its variants.",
            "content_text": "IntroductionThe intrinsic chirp component (ICC) is a time-frequency component present in a signal that has been widely studied in the field of time-frequency analysis. The decomposition of a signal into its ICC and non-ICC components can provide insight into its underlying structure and aid in the extraction of meaningful information.In this article, we will discuss the theoretical concept of intrinsic chirp component decomposition along with its variants. We will also provide Python implementations and examples for each variant.Intrinsic Chirp Component DecompositionIntrinsic Chirp Component Decomposition (ICCD) is a technique used to extract the ICC(s) of a signal. The concept behind the ICC is simple: At any instant of time, the signal is analyzed using a time-frequency window. In a standard Fourier transform, this window is fixed and its length becomes shorter for high frequencies. However, the ICC approach employs a time-frequency window that varies with time, such that the window’s size increases for high frequencies. Therefore, ICC is a non-stationary feature that varies with time, unlike Fourier-based methods, which are stationary features.The general equation for ICCD is:x(t)=ICC(t)+x0(t)x(t) = ICC(t) + x_{0}(t)x(t)=ICC(t)+x0​(t)where $x(t)$ is the signal, $ICC(t)$ is the Intrinsic Chirp Component, and $x_0(t)$ is the non-ICC component.ICC(t) is defined as follows:ICC(t)=∫−∞∞∫−∞∞W(t,f) f dt dfICC(t) = \\int_{-\\infty}^{\\infty}\\int_{-\\infty}^{\\infty}W(t,f)\\,f\\,dt\\,dfICC(t)=∫−∞∞​∫−∞∞​W(t,f)fdtdfwhere $W(t,f)$ is the short-time Fourier transform of the signal, and $f$ is the frequency component.ICC can be used to characterize several properties of the signal, including its time-varying spectral profile, complexity, and phase structure. The decomposition of the signal into the ICC and non-ICC components can help extract meaningful information from the signal.A Python implementation of ICCD is as follows:def iccd(x, fs):    N = len(x)    f, t, stft = signal.stft(x, fs)        ICC = np.sum(stft*f, axis=0)    noICC = stft - np.outer(f, ICC)    return ICC, noICCHere, x is the input signal, and fs is its sampling frequency. We compute the short-time Fourier transform using the signal.stft function from scipy library, then calculate the ICC and noICC components using the equations described earlier.Variants of ICCDSeveral variants of ICCD can be used based on the properties required from the signal. Here are three variants:Amplitude Modulation DecompositionIn this variant, we decompose a signal into its amplitude modulation components, which are related to the ICC feature. The equation for amplitude modulation decomposition is:x(t)=∑a=1Ma(t) Ca(t)+x0(t)x(t) = \\sum_{a=1}^{M} a(t)\\,C_{a}(t) + x_{0}(t)x(t)=a=1∑M​a(t)Ca​(t)+x0​(t)where $a(t)$ is the amplitude modulation envelope, $C_a(t)$ is the $a^{\\text{th}}$ intrinsic chirp component, and $M$ is the number of ICCs.The Python implementation of this variant is:def ampd(x, fs, M):    N = len(x)    f, t, stft = signal.stft(x, fs)        am = np.sum(np.abs(stft), axis=0)    noAMP = stft / np.outer(am, np.ones(N))    ICCs = []    for i in range(M):        C = np.sum(noAMP * (np.abs(stft) ** i), axis=0)        ICCs.append(C)        noAMP = noAMP - np.outer(C, (am ** i))    return np.array(ICCs), noAMPHere, M is the number of ICCs we want to extract. We compute the short-time Fourier transform and calculate the amplitude modulation envelope. We then calculate the ICC components by iteratively subtracting the ICC components from the non-ICC component.Frequency Modulation DecompositionIn this variant, we decompose a signal into its frequency modulation components, which are related to the derivative of the ICC feature. The equation for frequency modulation decomposition is:x(t)=∑a=1Mba(t) Fa(t)+x0(t)x(t) = \\sum_{a=1}^{M} b_a(t)\\,F_{a}(t) + x_{0}(t)x(t)=a=1∑M​ba​(t)Fa​(t)+x0​(t)where $b_a(t)$ is the frequency modulation envelope, $F_{a}(t)$ is the $a^{\\text{th}}$ derivative of the ICC, and $M$ is the number of ICCs.The Python implementation of this variant is:def fmdp(x, fs, M):    N = len(x)    f, t, stft = signal.stft(x, fs)        fm = np.sum((f[:, np.newaxis] - np.mean(f)) ** 2 * np.abs(stft) ** 2, axis=0)    noFMP = stft / np.outer(np.ones(N), np.sqrt(fm))    ICCs = []    for i in range(M):        F = np.sum(noFMP * ((f[:, np.newaxis]-np.mean(f))**i)*np.abs(stft)**2, axis=0) / fm        ICCs.append(F)        noFMP = noFMP - np.outer(ICC, (f[:, np.newaxis]-np.mean(f)) ** i)        return np.array(ICCs), noFMPHere, M is the number of ICCs we want to extract. We compute the short-time Fourier transform and calculate the frequency modulation envelope. We then calculate the ICC components by iteratively subtracting the ICC components from the non-ICC component.Synchrosqueezing TransformIn this variant, we apply the Synchrosqueezing Transform (SST) to the signal, which is a modified version of the Fourier transform that concentrates the energy of the signal onto the ICCs. The equation for SST is:S{γfh(t)}(t,f)=h(t) h(t)‾∫0∞∣h(t)∣2 dt w(t,f)S\\{\\gamma_f h(t)\\}(t, f) = \\frac{h(t)\\,\\overline{h(t)}}{\\int_{0}^{\\infty}|h(t)|^2\\,dt}\\,w(t, f)S{γf​h(t)}(t,f)=∫0∞​∣h(t)∣2dth(t)h(t)​​w(t,f)where $\\gamma_f$ is the frequency scaling factor, $h(t)$ is the signal, $w(t, f)$ is the wavelet, and $S$ is the synchrosqueezing operator.The Python implementation of this variant is:def sst(x, fs):    N = len(x)    f, stft = scipy.signal.stft(x, fs)    M = np.shape(stft)[0]    ICs = np.zeros((M, len(f)))    for i in range(M):        w = synchrosqueezing_window(f, i, fs)        ICs[i] = np.sum(stft*w, axis=1)    return ICsHere, we calculate the short-time Fourier transform using the scipy.signal.stft function. We then calculate the synchrosqueezing window using a custom-defined function synchrosqueezing_window. We calculate the ICC components using the synchrosqueezing operator and return the matrix of the ICC components.ConclusionIn this article, we discussed the concept of intrinsic chirp component decomposition and its variants. We provided equations and Python implementations for each variant, along with examples. ICCD and its variants are powerful tools for extracting information from a given signal, and they have several applications in signal processing, such as in speech recognition, image analysis, and bio-medical signal processing.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>The intrinsic chirp component (ICC) is a time-frequency component present in a signal that has been widely studied in the field of time-frequency analysis. The decomposition of a signal into its ICC and non-ICC components can provide insight into its underlying structure and aid in the extraction of meaningful information.</p><p>In this article, we will discuss the theoretical concept of intrinsic chirp component decomposition along with its variants. We will also provide Python implementations and examples for each variant.</p><h1 id=\"intrinsic-chirp-component-decomposition\">Intrinsic Chirp Component Decomposition</h1><p>Intrinsic Chirp Component Decomposition (ICCD) is a technique used to extract the ICC(s) of a signal. The concept behind the ICC is simple: At any instant of time, the signal is analyzed using a time-frequency window. In a standard Fourier transform, this window is fixed and its length becomes shorter for high frequencies. However, the ICC approach employs a time-frequency window that varies with time, such that the window’s size increases for high frequencies. Therefore, ICC is a non-stationary feature that varies with time, unlike Fourier-based methods, which are stationary features.</p><p>The general equation for ICCD is:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mi>C</mi><mi>C</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x(t) = ICC(t) + x_{0}(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">CC</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></span><p>where $x(t)$ is the signal, $ICC(t)$ is the Intrinsic Chirp Component, and $x_0(t)$ is the non-ICC component.</p><p>ICC(t) is defined as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>I</mi><mi>C</mi><mi>C</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>W</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mi>f</mi><mtext> </mtext><mi>d</mi><mi>t</mi><mtext> </mtext><mi>d</mi><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">ICC(t) = \\int_{-\\infty}^{\\infty}\\int_{-\\infty}^{\\infty}W(t,f)\\,f\\,dt\\,df</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">CC</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3846em;vertical-align:-0.9703em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4143em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4143em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">df</span></span></span></span></span><p>where $W(t,f)$ is the short-time Fourier transform of the signal, and $f$ is the frequency component.</p><p>ICC can be used to characterize several properties of the signal, including its time-varying spectral profile, complexity, and phase structure. The decomposition of the signal into the ICC and non-ICC components can help extract meaningful information from the signal.</p><p>A Python implementation of ICCD is as follows:</p><pre><code>def iccd(x, fs):    N = len(x)    f, t, stft = signal.stft(x, fs)        ICC = np.sum(stft*f, axis=0)    noICC = stft - np.outer(f, ICC)    return ICC, noICC</code></pre><p>Here, <code>x</code> is the input signal, and <code>fs</code> is its sampling frequency. We compute the short-time Fourier transform using the <code>signal.stft</code> function from <code>scipy</code> library, then calculate the ICC and noICC components using the equations described earlier.</p><h1 id=\"variants-of-iccd\">Variants of ICCD</h1><p>Several variants of ICCD can be used based on the properties required from the signal. Here are three variants:</p><h2 id=\"amplitude-modulation-decomposition\">Amplitude Modulation Decomposition</h2><p>In this variant, we decompose a signal into its amplitude modulation components, which are related to the ICC feature. The equation for amplitude modulation decomposition is:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>a</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><mi>a</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><msub><mi>C</mi><mi>a</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x(t) = \\sum_{a=1}^{M} a(t)\\,C_{a}(t) + x_{0}(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0954em;vertical-align:-1.2671em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8829em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2671em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></span><p>where $a(t)$ is the amplitude modulation envelope, $C_a(t)$ is the $a^{\\text{th}}$ intrinsic chirp component, and $M$ is the number of ICCs.</p><p>The Python implementation of this variant is:</p><pre><code>def ampd(x, fs, M):    N = len(x)    f, t, stft = signal.stft(x, fs)        am = np.sum(np.abs(stft), axis=0)    noAMP = stft / np.outer(am, np.ones(N))    ICCs = []    for i in range(M):        C = np.sum(noAMP * (np.abs(stft) ** i), axis=0)        ICCs.append(C)        noAMP = noAMP - np.outer(C, (am ** i))    return np.array(ICCs), noAMP</code></pre><p>Here, <code>M</code> is the number of ICCs we want to extract. We compute the short-time Fourier transform and calculate the amplitude modulation envelope. We then calculate the ICC components by iteratively subtracting the ICC components from the non-ICC component.</p><h2 id=\"frequency-modulation-decomposition\">Frequency Modulation Decomposition</h2><p>In this variant, we decompose a signal into its frequency modulation components, which are related to the derivative of the ICC feature. The equation for frequency modulation decomposition is:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>a</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>b</mi><mi>a</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><msub><mi>F</mi><mi>a</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x(t) = \\sum_{a=1}^{M} b_a(t)\\,F_{a}(t) + x_{0}(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0954em;vertical-align:-1.2671em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8829em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2671em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></span><p>where $b_a(t)$ is the frequency modulation envelope, $F_{a}(t)$ is the $a^{\\text{th}}$ derivative of the ICC, and $M$ is the number of ICCs.</p><p>The Python implementation of this variant is:</p><pre><code>def fmdp(x, fs, M):    N = len(x)    f, t, stft = signal.stft(x, fs)        fm = np.sum((f[:, np.newaxis] - np.mean(f)) ** 2 * np.abs(stft) ** 2, axis=0)    noFMP = stft / np.outer(np.ones(N), np.sqrt(fm))    ICCs = []    for i in range(M):        F = np.sum(noFMP * ((f[:, np.newaxis]-np.mean(f))**i)*np.abs(stft)**2, axis=0) / fm        ICCs.append(F)        noFMP = noFMP - np.outer(ICC, (f[:, np.newaxis]-np.mean(f)) ** i)        return np.array(ICCs), noFMP</code></pre><p>Here, <code>M</code> is the number of ICCs we want to extract. We compute the short-time Fourier transform and calculate the frequency modulation envelope. We then calculate the ICC components by iteratively subtracting the ICC components from the non-ICC component.</p><h2 id=\"synchrosqueezing-transform\">Synchrosqueezing Transform</h2><p>In this variant, we apply the Synchrosqueezing Transform (SST) to the signal, which is a modified version of the Fourier transform that concentrates the energy of the signal onto the ICCs. The equation for SST is:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo stretchy=\"false\">{</mo><msub><mi>γ</mi><mi>f</mi></msub><mi>h</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo><mo stretchy=\"false\">(</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>h</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mover accent=\"true\"><mrow><mi>h</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><mrow><msubsup><mo>∫</mo><mn>0</mn><mi mathvariant=\"normal\">∞</mi></msubsup><mi mathvariant=\"normal\">∣</mi><mi>h</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msup><mi mathvariant=\"normal\">∣</mi><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>t</mi></mrow></mfrac><mtext> </mtext><mi>w</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S\\{\\gamma_f h(t)\\}(t, f) = \\frac{h(t)\\,\\overline{h(t)}}{\\int_{0}^{\\infty}|h(t)|^2\\,dt}\\,w(t, f)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)}</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.7321em;vertical-align:-1.1051em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.627em;\"><span style=\"top:-2.2507em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8593em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2579em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3558em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.87em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25em;\"><span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1051em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span></span></span></span></span><p>where $\\gamma_f$ is the frequency scaling factor, $h(t)$ is the signal, $w(t, f)$ is the wavelet, and $S$ is the synchrosqueezing operator.</p><p>The Python implementation of this variant is:</p><pre><code>def sst(x, fs):    N = len(x)    f, stft = scipy.signal.stft(x, fs)    M = np.shape(stft)[0]    ICs = np.zeros((M, len(f)))    for i in range(M):        w = synchrosqueezing_window(f, i, fs)        ICs[i] = np.sum(stft*w, axis=1)    return ICs</code></pre><p>Here, we calculate the short-time Fourier transform using the <code>scipy.signal.stft</code> function. We then calculate the synchrosqueezing window using a custom-defined function <code>synchrosqueezing_window</code>. We calculate the ICC components using the synchrosqueezing operator and return the matrix of the ICC components.</p><h1 id=\"conclusion\">Conclusion</h1><p>In this article, we discussed the concept of intrinsic chirp component decomposition and its variants. We provided equations and Python implementations for each variant, along with examples. ICCD and its variants are powerful tools for extracting information from a given signal, and they have several applications in signal processing, such as in speech recognition, image analysis, and bio-medical signal processing.</p>",
            "url": "http://localhost:4000/2023/03/28/intrinsic-chirp-component-decomposition",
            
            
            
            "tags": ["time_frequency_methods","ICCD","signal_extraction"],
            
            "date_published": "2023-03-28T00:00:00+01:00",
            "date_modified": "2023-03-28T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/27/gabor-wigner-transformation",
            "title": "Gabor Wigner Transform and Its Variants",
            "summary": "This article introduces the Gabor Wigner transform and its variants along with the python implementation of each variant with code examples.",
            "content_text": "IntroductionThe Gabor Wigner Transform (GWT) is a technique used in signal processing to analyze time-varying signals. It is based on the Short-Time Fourier Transform (STFT), which allows the analysis of signals in the time-frequency domain. The GWT extends the STFT by considering the Wigner distribution, which is a time-frequency distribution with desirable mathematical properties.Gabor Wigner TransformLet x(t) be a continuous-time signal, and g(t) be a window function. The Gabor Wigner Transform of x(t) is defined as follows:GWx(t,ω)=∫−∞∞x(τ)g(τ−t)e−jωτdτ.GW_x(t, \\omega) = \\int_{-\\infty}^\\infty x(\\tau)g(\\tau - t)e^{-j\\omega \\tau}d\\tau.GWx​(t,ω)=∫−∞∞​x(τ)g(τ−t)e−jωτdτ.The GWT represents the time-frequency content of x(t) as a two-dimensional function, where the vertical axis represents frequency and the horizontal axis represents time.Variants of Gabor Wigner TransformComplex Gabor Wigner TransformThe Complex Gabor Wigner Transform (CGWT) is an extension of the GWT that uses complex window functions. The CGWT is defined as follows:CGWx(t,ω)=∫−∞∞x(τ)g(τ−t)e−jωτdτ+i∫−∞∞x(τ)h(τ−t)e−jωτdτ,CGW_x(t, \\omega) = \\int_{-\\infty}^\\infty x(\\tau)g(\\tau - t)e^{-j\\omega \\tau}d\\tau + i\\int_{-\\infty}^\\infty x(\\tau)h(\\tau - t)e^{-j\\omega \\tau}d\\tau,CGWx​(t,ω)=∫−∞∞​x(τ)g(τ−t)e−jωτdτ+i∫−∞∞​x(τ)h(τ−t)e−jωτdτ,where g(t) and h(t) are complex window functions. The CGWT allows the phase information of the signal to be retained in the time-frequency domain.Python Implementationimport numpy as npdef cgwt(x, g, h, fs, fmin, fmax, nfreq, nfft):    tfr = np.zeros((nfreq, x.size), dtype=np.complex)    freqs = np.linspace(fmin, fmax, nfreq)    t = np.arange(x.size) / fs    for i, f in enumerate(freqs):        kernel = g(t) * np.exp(-1j * 2 * np.pi * f * t) + h(t) * np.exp(1j * 2 * np.pi * f * t)        s = np.fft.fft(x * kernel, nfft)        tfr[i] = np.fft.ifft(s)    return tfr, freqsWavelet Gabor Wigner TransformThe Wavelet Gabor Wigner Transform (WGWT) is another variant of GWT that uses wavelet functions as the window functions. The WGWT is defined as follows:WGWx(t,ω)=∫−∞∞x(τ)ga,b(τ−t)e−jωτdτ,WGW_x(t, \\omega) = \\int_{-\\infty}^\\infty x(\\tau)g_{a,b}(\\tau - t)e^{-j\\omega \\tau}d\\tau,WGWx​(t,ω)=∫−∞∞​x(τ)ga,b​(τ−t)e−jωτdτ,where g_{a,b}(t) is a wavelet function with scale a and shift b.Python Implementationimport numpy as npimport pywtdef wgwt(x, wavelet, scales, fmin, fmax, nfreq, nfft):    tfr = np.zeros((nfreq, x.size), dtype=np.complex)    freqs = np.linspace(fmin, fmax, nfreq)    for i, scale in enumerate(scales):        w = pywt.cwt(x, scale, wavelet)        for j, f in enumerate(freqs):            tfr[j] += w[0] * np.exp(-1j * 2 * np.pi * f * w[1])    tfr /= len(scales)    return tfr, freqsMulti-Window Gabor Wigner TransformThe Multi-Window Gabor Wigner Transform (MWGWT) uses multiple window functions with different time-frequency resolutions. The MWGWT is defined as follows:MWGx(t,ω)=∑i∫−∞∞x(τ)gi(τ−t)e−jωτdτ.MWG_x(t, \\omega) = \\sum_i \\int_{-\\infty}^\\infty x(\\tau)g_i(\\tau - t)e^{-j\\omega \\tau}d\\tau.MWGx​(t,ω)=i∑​∫−∞∞​x(τ)gi​(τ−t)e−jωτdτ.Python Implementationimport numpy as npfrom scipy import signaldef mwgwt(x, windows, freqs, nfft, fs):    tfr = np.zeros((len(freqs), x.size), dtype=np.complex)    for i, f in enumerate(freqs):        for j, w in enumerate(windows):            tfr[i] += np.abs(signal.spectrogram(x, fs, w, fs/8, fs/4, nfft)[2])**2 * np.exp(-1j * 2 * np.pi * f * i / len(freqs))    return tfr, freqsConclusionThe Gabor Wigner Transform and its variants are useful techniques for analyzing time-varying signals in the time-frequency domain. The CGWT allows the phase information of the signal to be retained, while the WGWT uses wavelet functions for better time-frequency resolution. The MWGWT combines multiple window functions to achieve a balance between time and frequency resolutions. All of these variants can be easily implemented in Python, making them accessible to a wider audience.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>The Gabor Wigner Transform (GWT) is a technique used in signal processing to analyze time-varying signals. It is based on the Short-Time Fourier Transform (STFT), which allows the analysis of signals in the time-frequency domain. The GWT extends the STFT by considering the Wigner distribution, which is a time-frequency distribution with desirable mathematical properties.</p><h1 id=\"gabor-wigner-transform\">Gabor Wigner Transform</h1><p>Let x(t) be a continuous-time signal, and g(t) be a window function. The Gabor Wigner Transform of x(t) is defined as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>G</mi><msub><mi>W</mi><mi>x</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>ω</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>x</mi><mo stretchy=\"false\">(</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>τ</mi><mo>−</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>ω</mi><mi>τ</mi></mrow></msup><mi>d</mi><mi>τ</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">GW_x(t, \\omega) = \\int_{-\\infty}^\\infty x(\\tau)g(\\tau - t)e^{-j\\omega \\tau}d\\tau.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3846em;vertical-align:-0.9703em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4143em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1247em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8747em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">jω</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.1132em;\">τ</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mord\">.</span></span></span></span></span><p>The GWT represents the time-frequency content of x(t) as a two-dimensional function, where the vertical axis represents frequency and the horizontal axis represents time.</p><h1 id=\"variants-of-gabor-wigner-transform\">Variants of Gabor Wigner Transform</h1><h2 id=\"complex-gabor-wigner-transform\">Complex Gabor Wigner Transform</h2><p>The Complex Gabor Wigner Transform (CGWT) is an extension of the GWT that uses complex window functions. The CGWT is defined as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>C</mi><mi>G</mi><msub><mi>W</mi><mi>x</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>ω</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>x</mi><mo stretchy=\"false\">(</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>τ</mi><mo>−</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>ω</mi><mi>τ</mi></mrow></msup><mi>d</mi><mi>τ</mi><mo>+</mo><mi>i</mi><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>x</mi><mo stretchy=\"false\">(</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mi>τ</mi><mo>−</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>ω</mi><mi>τ</mi></mrow></msup><mi>d</mi><mi>τ</mi><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">CGW_x(t, \\omega) = \\int_{-\\infty}^\\infty x(\\tau)g(\\tau - t)e^{-j\\omega \\tau}d\\tau + i\\int_{-\\infty}^\\infty x(\\tau)h(\\tau - t)e^{-j\\omega \\tau}d\\tau,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">CG</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3846em;vertical-align:-0.9703em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4143em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1247em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8747em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">jω</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.1132em;\">τ</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3846em;vertical-align:-0.9703em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4143em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1247em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8747em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">jω</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.1132em;\">τ</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mpunct\">,</span></span></span></span></span><p>where g(t) and h(t) are complex window functions. The CGWT allows the phase information of the signal to be retained in the time-frequency domain.</p><h3 id=\"python-implementation\">Python Implementation</h3><pre><code class=\"language-python\">import numpy as npdef cgwt(x, g, h, fs, fmin, fmax, nfreq, nfft):    tfr = np.zeros((nfreq, x.size), dtype=np.complex)    freqs = np.linspace(fmin, fmax, nfreq)    t = np.arange(x.size) / fs    for i, f in enumerate(freqs):        kernel = g(t) * np.exp(-1j * 2 * np.pi * f * t) + h(t) * np.exp(1j * 2 * np.pi * f * t)        s = np.fft.fft(x * kernel, nfft)        tfr[i] = np.fft.ifft(s)    return tfr, freqs</code></pre><h2 id=\"wavelet-gabor-wigner-transform\">Wavelet Gabor Wigner Transform</h2><p>The Wavelet Gabor Wigner Transform (WGWT) is another variant of GWT that uses wavelet functions as the window functions. The WGWT is defined as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>W</mi><mi>G</mi><msub><mi>W</mi><mi>x</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>ω</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>x</mi><mo stretchy=\"false\">(</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><msub><mi>g</mi><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>τ</mi><mo>−</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>ω</mi><mi>τ</mi></mrow></msup><mi>d</mi><mi>τ</mi><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">WGW_x(t, \\omega) = \\int_{-\\infty}^\\infty x(\\tau)g_{a,b}(\\tau - t)e^{-j\\omega \\tau}d\\tau,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\">G</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3846em;vertical-align:-0.9703em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4143em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1247em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8747em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">jω</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.1132em;\">τ</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mpunct\">,</span></span></span></span></span><p>where g_{a,b}(t) is a wavelet function with scale a and shift b.</p><h3 id=\"python-implementation-1\">Python Implementation</h3><pre><code class=\"language-python\">import numpy as npimport pywtdef wgwt(x, wavelet, scales, fmin, fmax, nfreq, nfft):    tfr = np.zeros((nfreq, x.size), dtype=np.complex)    freqs = np.linspace(fmin, fmax, nfreq)    for i, scale in enumerate(scales):        w = pywt.cwt(x, scale, wavelet)        for j, f in enumerate(freqs):            tfr[j] += w[0] * np.exp(-1j * 2 * np.pi * f * w[1])    tfr /= len(scales)    return tfr, freqs</code></pre><h2 id=\"multi-window-gabor-wigner-transform\">Multi-Window Gabor Wigner Transform</h2><p>The Multi-Window Gabor Wigner Transform (MWGWT) uses multiple window functions with different time-frequency resolutions. The MWGWT is defined as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>M</mi><mi>W</mi><msub><mi>G</mi><mi>x</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>ω</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>x</mi><mo stretchy=\"false\">(</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><msub><mi>g</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>τ</mi><mo>−</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>ω</mi><mi>τ</mi></mrow></msup><mi>d</mi><mi>τ</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">MWG_x(t, \\omega) = \\sum_i \\int_{-\\infty}^\\infty x(\\tau)g_i(\\tau - t)e^{-j\\omega \\tau}d\\tau.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.692em;vertical-align:-1.2777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.05em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4143em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1247em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8747em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">jω</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.1132em;\">τ</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mord\">.</span></span></span></span></span><h3 id=\"python-implementation-2\">Python Implementation</h3><pre><code class=\"language-python\">import numpy as npfrom scipy import signaldef mwgwt(x, windows, freqs, nfft, fs):    tfr = np.zeros((len(freqs), x.size), dtype=np.complex)    for i, f in enumerate(freqs):        for j, w in enumerate(windows):            tfr[i] += np.abs(signal.spectrogram(x, fs, w, fs/8, fs/4, nfft)[2])**2 * np.exp(-1j * 2 * np.pi * f * i / len(freqs))    return tfr, freqs</code></pre><h1 id=\"conclusion\">Conclusion</h1><p>The Gabor Wigner Transform and its variants are useful techniques for analyzing time-varying signals in the time-frequency domain. The CGWT allows the phase information of the signal to be retained, while the WGWT uses wavelet functions for better time-frequency resolution. The MWGWT combines multiple window functions to achieve a balance between time and frequency resolutions. All of these variants can be easily implemented in Python, making them accessible to a wider audience.</p>",
            "url": "http://localhost:4000/2023/03/27/gabor-wigner-transformation",
            
            
            
            "tags": ["GWT","time_frequency_methods","representation"],
            
            "date_published": "2023-03-27T00:00:00+01:00",
            "date_modified": "2023-03-27T00:00:00+01:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/26/tf-representations",
            "title": "Time Frequency Representations and Its Variants",
            "summary": "This article explains the concept of time frequency analysis, along with its variants and their implementation in Python.",
            "content_text": "IntroductionTime-frequency analysis (TFA) is a technique that allows us to analyze signals in both time and frequency domains. Traditional Fourier analysis assumes that the signal is stationary over time, i.e., the frequency content of the signal is constant. However, in real-world applications, such as speech and music signal processing, the stationary assumption does not hold. TFA provides time-frequency representations of non-stationary signals, enabling us to study signal dynamics with changing frequency behavior.Time Frequency RepresentationsTime-frequency representations can be classified into four groups: Short-Time Fourier Transform (STFT), Continuous Wavelet Transform (CWT), Empirical Mode Decomposition (EMD) and Cohen’s class.Short-Time Fourier Transform (STFT)STFT is a standard technique for time-frequency analysis that computes the Fourier transform of signal segments over time. The analysis window of a fixed-length is used to break down the signal into overlapping segments. An STFT of size $N$ applied to the signal $x(n)$ gives:Xm,k=∑n=0N−1x(n+mH)w(n)e−j2πkn/N\\begin{equation}X_{m,k} = \\sum^{N-1}_{n=0}x(n+mH)w(n)e^{-j2\\pi kn/N}\\end{equation}Xm,k​=n=0∑N−1​x(n+mH)w(n)e−j2πkn/N​​where $H$ is the hop-size between window frames, $w(n)$ is the analysis window, $m$ denotes the window frame number, and $k$ is the frequency index. The STFT is characterized by the window shape and length, as well as the hop size.Python Implementation of STFT:import numpy as npfrom scipy.signal import get_windowfrom scipy.fftpack import fftdef stft(x, win, hop):    nx = len(x)    nwin = len(win)    nfft = int(2**np.ceil(np.log2(nwin)))    nframes = int(np.ceil((nx-nwin)/hop)+1)        x = np.pad(x, int(nwin//2), mode='reflect')    frames = np.lib.stride_tricks.as_strided(x, shape=(nwin, nframes),                                             strides=(x.itemsize, hop*x.itemsize))    frames = frames * win[:, None]    spectrum = fft(frames, axis=0)[:nfft//2]    return spectrumContinuous Wavelet Transform (CWT)CWT finds the time-frequency decomposition of the signal by using a time-varying window, or wavelet. The wavelet is scaled and shifted over time to obtain the distribution of the frequency and its variations with time. The CWT of a signal $x(t)$ with wavelet $\\psi(t)$ is given by:Wx(a,b)=∫−∞+∞ψ∗(t)1∣a∣x(t)exp⁡(iabt)dt\\begin{equation}W_x(a,b) = \\int^{+\\infty}_{-\\infty}\\psi^*(t)\\frac{1}{\\sqrt{|a|}}x(t)\\exp{\\bigg(\\frac{i}{a}bt\\bigg)}dt\\end{equation}Wx​(a,b)=∫−∞+∞​ψ∗(t)∣a∣​1​x(t)exp(ai​bt)dt​​where the wavelet $\\psi(t)$ is scaled by a factor $a$ and shifted by $b$. CWT requires the selection of a suitable wavelet that is appropriate for the application.Python Implementation of CWT:import pywtdef cwt(x, wavelet):    scales = np.arange(1, 64)    coef, freqs = pywt.cwt(x, scales, wavelet, sampling_period=1/1000)    return coefEmpirical Mode Decomposition (EMD)EMD is a data-driven, adaptive time-frequency decomposition method that decomposes a signal into Intrinsic Mode Functions (IMFs), resulting in a time-frequency representation. IMFs are the low-frequency components of the signal, and they represent the signal’s local characteristics.Python Implementation of EMD:import emddef emd(x):    emd_result = emd.sift.sift(x)    imfs = emd_result[:-1]    return imfsCohen’s ClassCohen’s class is a generalization of the STFT that allows the window function to vary over time. This generalization allows the use of different window functions that change over time. The Cohen’s Class of a signal $x(t)$ with a window function $g(t,\\tau)$ is given by:Cg(s,τ)=∫−∞∞x(t)g∗(t,τ)exp⁡(−j2πst)dt\\begin{equation}C_{g}(s, \\tau) = \\int_{-\\infty}^{\\infty}x(t)g^*(t, \\tau)\\exp(-j2\\pi st)dt\\end{equation}Cg​(s,τ)=∫−∞∞​x(t)g∗(t,τ)exp(−j2πst)dt​​where $g(t,\\tau)$ is a time-varying window function dependent on a continuous parameter $\\tau$.Python Implementation of Cohen’s Class:import pandas as pdfrom pyct import saadef cohens_class(x):    sst, result = saa.s_transform(x)    return pd.DataFrame(result)Time Frequency RepresentationsIn signal processing, it is often necessary to analyze signals in both time and frequency domains. However, traditional Fourier analysis is not sufficient as it only analyzes the frequency components and completely ignores the variations in time. This limitation led to the development of time frequency representations (TFRs) that analyze the frequency components of a signal at different points in time.TFRs are important in many fields of signal processing, including speech processing, radar signal analysis, biomedical engineering, and image processing. There are many different types of TFRs, each with its own strengths and weaknesses.Wigner Distribution FunctionThe Wigner distribution function (WDF) is a widely used TFR that was introduced in the 1930s by Eugene Wigner. It provides a joint time-frequency analysis and gives an estimate of the local energy density of a signal in time and frequency domains.The WDF has several advantages. Firstly, it can accurately detect time-varying frequencies and phase information, making it useful for analyzing non-stationary signals. Secondly, it has good resolution properties and can distinguish between closely spaced frequency components. However, the WDF has some limitations. It has a high computational complexity and can produce negative values, making interpretation difficult.Modified Distribution FunctionsModified distribution functions (MDFs) are a family of TFRs that include smoothed WDFs, spectrograms, and scalograms. Spectrograms are the most widely used MDFs and provide a frequency-time representation of a signal. They use a window function to obtain a smoothed version of the WDF and have a low computational complexity.Scalograms are a type of MDF that uses wavelet transforms to analyze signals. They have good time-frequency resolution and can capture both high and low-frequency components of a signal. However, they have limited resolution in time and frequency if the wavelet basis function is not chosen properly.Table comparing TFRs            TFR      Pros      Cons                  Wigner      Accurate frequency and phase information. Good frequency resolution.      High computational complexity. Can produce negative values, making interpretation difficult.              Spectrogram      Low computational complexity. Good frequency resolution.      Limited time and frequency resolution.              Scalogram      Good time and frequency resolution. Can capture both high and low frequencies.      Limited resolution in time and frequency if the wavelet basis function is not chosen properly.      In conclusion, TFRs are an essential tool in signal processing as they allow for a joint analysis of the time and frequency domains. The choice of TFR will depend on the specific requirements of the analysis, including the complexity of the signal and the desired resolution in time and frequency.ConclusionTime-frequency analysis is a powerful technique for signal processing, especially when analyzing non-stationary signals. The article provided an introduction to TFA, discussing time-frequency representations and the need for them. Additionally, it explained the four main types of time-frequency representations and their working principles. Python implementations of Short-Time Fourier Transform (STFT), Continuous Wavelet Transform (CWT), Empirical Mode Decomposition (EMD), and Cohen’s Class were also provided as examples.",
            "content_html": "<h2 id=\"introduction\">Introduction</h2><p>Time-frequency analysis (TFA) is a technique that allows us to analyze signals in both time and frequency domains. Traditional Fourier analysis assumes that the signal is stationary over time, i.e., the frequency content of the signal is constant. However, in real-world applications, such as speech and music signal processing, the stationary assumption does not hold. TFA provides time-frequency representations of non-stationary signals, enabling us to study signal dynamics with changing frequency behavior.</p><h2 id=\"time-frequency-representations\">Time Frequency Representations</h2><p>Time-frequency representations can be classified into four groups: Short-Time Fourier Transform (STFT), Continuous Wavelet Transform (CWT), Empirical Mode Decomposition (EMD) and Cohen’s class.</p><h3 id=\"short-time-fourier-transform-stft\">Short-Time Fourier Transform (STFT)</h3><p>STFT is a standard technique for time-frequency analysis that computes the Fourier transform of signal segments over time. The analysis window of a fixed-length is used to break down the signal into overlapping segments. An STFT of size $N$ applied to the signal $x(n)$ gives:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.16em\" columnspacing=\"1em\"><mtr><mtd class =\"mtr-glue\"></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mi>X</mi><mrow><mi>m</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>x</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mi>H</mi><mo stretchy=\"false\">)</mo><mi>w</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>k</mi><mi>n</mi><mi mathvariant=\"normal\">/</mi><mi>N</mi></mrow></msup></mrow></mstyle></mtd><mtd class =\"mtr-glue\"></mtd><mtd class =\"mml-eqn-num\"></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{equation}X_{m,k} = \\sum^{N-1}_{n=0}x(n+mH)w(n)e^{-j2\\pi kn/N}\\end{equation}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.0954em;vertical-align:-1.2977em;\"></span><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7977em;\"><span style=\"top:-3.7977em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8829em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2671em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">πkn</span><span class=\"mord mtight\">/</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2977em;\"><span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7977em;\"><span style=\"top:-3.7977em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"eqn-num\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2977em;\"><span></span></span></span></span></span></span></span></span><p>where $H$ is the hop-size between window frames, $w(n)$ is the analysis window, $m$ denotes the window frame number, and $k$ is the frequency index. The STFT is characterized by the window shape and length, as well as the hop size.</p><p>Python Implementation of STFT:</p><pre><code class=\"language-python\">import numpy as npfrom scipy.signal import get_windowfrom scipy.fftpack import fftdef stft(x, win, hop):    nx = len(x)    nwin = len(win)    nfft = int(2**np.ceil(np.log2(nwin)))    nframes = int(np.ceil((nx-nwin)/hop)+1)        x = np.pad(x, int(nwin//2), mode='reflect')    frames = np.lib.stride_tricks.as_strided(x, shape=(nwin, nframes),                                             strides=(x.itemsize, hop*x.itemsize))    frames = frames * win[:, None]    spectrum = fft(frames, axis=0)[:nfft//2]    return spectrum</code></pre><h3 id=\"continuous-wavelet-transform-cwt\">Continuous Wavelet Transform (CWT)</h3><p>CWT finds the time-frequency decomposition of the signal by using a time-varying window, or wavelet. The wavelet is scaled and shifted over time to obtain the distribution of the frequency and its variations with time. The CWT of a signal $x(t)$ with wavelet $\\psi(t)$ is given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.16em\" columnspacing=\"1em\"><mtr><mtd class =\"mtr-glue\"></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mi>W</mi><mi>x</mi></msub><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow></msubsup><msup><mi>ψ</mi><mo>∗</mo></msup><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mfrac><mn>1</mn><msqrt><mrow><mi mathvariant=\"normal\">∣</mi><mi>a</mi><mi mathvariant=\"normal\">∣</mi></mrow></msqrt></mfrac><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence=\"false\" stretchy=\"true\" minsize=\"2.4em\" maxsize=\"2.4em\">(</mo><mfrac><mi>i</mi><mi>a</mi></mfrac><mi>b</mi><mi>t</mi><mo fence=\"false\" stretchy=\"true\" minsize=\"2.4em\" maxsize=\"2.4em\">)</mo></mrow><mi>d</mi><mi>t</mi></mrow></mstyle></mtd><mtd class =\"mtr-glue\"></mtd><mtd class =\"mml-eqn-num\"></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{equation}W_x(a,b) = \\int^{+\\infty}_{-\\infty}\\psi^*(t)\\frac{1}{\\sqrt{|a|}}x(t)\\exp{\\bigg(\\frac{i}{a}bt\\bigg)}dt\\end{equation}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.6512em;vertical-align:-1.0756em;\"></span><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5756em;\"><span style=\"top:-3.5756em;\"><span class=\"pstrut\" style=\"height:3.5212em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5212em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7387em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.175em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.935em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\">∣</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">∣</span></span></span><span style=\"top:-2.895em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.305em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.13em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">exp</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">t</span><span class=\"mord\"><span class=\"delimsizing size3\">)</span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0756em;\"><span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5756em;\"><span style=\"top:-3.5756em;\"><span class=\"pstrut\" style=\"height:3.5212em;\"></span><span class=\"eqn-num\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0756em;\"><span></span></span></span></span></span></span></span></span><p>where the wavelet $\\psi(t)$ is scaled by a factor $a$ and shifted by $b$. CWT requires the selection of a suitable wavelet that is appropriate for the application.</p><p>Python Implementation of CWT:</p><pre><code class=\"language-python\">import pywtdef cwt(x, wavelet):    scales = np.arange(1, 64)    coef, freqs = pywt.cwt(x, scales, wavelet, sampling_period=1/1000)    return coef</code></pre><h3 id=\"empirical-mode-decomposition-emd\">Empirical Mode Decomposition (EMD)</h3><p>EMD is a data-driven, adaptive time-frequency decomposition method that decomposes a signal into Intrinsic Mode Functions (IMFs), resulting in a time-frequency representation. IMFs are the low-frequency components of the signal, and they represent the signal’s local characteristics.</p><p>Python Implementation of EMD:</p><pre><code class=\"language-python\">import emddef emd(x):    emd_result = emd.sift.sift(x)    imfs = emd_result[:-1]    return imfs</code></pre><h3 id=\"cohens-class\">Cohen’s Class</h3><p>Cohen’s class is a generalization of the STFT that allows the window function to vary over time. This generalization allows the use of different window functions that change over time. The Cohen’s Class of a signal $x(t)$ with a window function $g(t,\\tau)$ is given by:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.16em\" columnspacing=\"1em\"><mtr><mtd class =\"mtr-glue\"></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mi>C</mi><mi>g</mi></msub><mo stretchy=\"false\">(</mo><mi>s</mi><mo separator=\"true\">,</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msup><mi>g</mi><mo>∗</mo></msup><mo stretchy=\"false\">(</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><mi>exp</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>s</mi><mi>t</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>t</mi></mrow></mstyle></mtd><mtd class =\"mtr-glue\"></mtd><mtd class =\"mml-eqn-num\"></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{equation}C_{g}(s, \\tau) = \\int_{-\\infty}^{\\infty}x(t)g^*(t, \\tau)\\exp(-j2\\pi st)dt\\end{equation}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.3846em;vertical-align:-0.9423em;\"></span><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4423em;\"><span style=\"top:-3.4423em;\"><span class=\"pstrut\" style=\"height:3.4143em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4143em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7387em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">exp</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9423em;\"><span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4423em;\"><span style=\"top:-3.4423em;\"><span class=\"pstrut\" style=\"height:3.4143em;\"></span><span class=\"eqn-num\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9423em;\"><span></span></span></span></span></span></span></span></span><p>where $g(t,\\tau)$ is a time-varying window function dependent on a continuous parameter $\\tau$.</p><p>Python Implementation of Cohen’s Class:</p><pre><code class=\"language-python\">import pandas as pdfrom pyct import saadef cohens_class(x):    sst, result = saa.s_transform(x)    return pd.DataFrame(result)</code></pre><h1 id=\"time-frequency-representations-1\">Time Frequency Representations</h1><p>In signal processing, it is often necessary to analyze signals in both time and frequency domains. However, traditional Fourier analysis is not sufficient as it only analyzes the frequency components and completely ignores the variations in time. This limitation led to the development of time frequency representations (TFRs) that analyze the frequency components of a signal at different points in time.</p><p>TFRs are important in many fields of signal processing, including speech processing, radar signal analysis, biomedical engineering, and image processing. There are many different types of TFRs, each with its own strengths and weaknesses.</p><h2 id=\"wigner-distribution-function\">Wigner Distribution Function</h2><p>The Wigner distribution function (WDF) is a widely used TFR that was introduced in the 1930s by Eugene Wigner. It provides a joint time-frequency analysis and gives an estimate of the local energy density of a signal in time and frequency domains.</p><p>The WDF has several advantages. Firstly, it can accurately detect time-varying frequencies and phase information, making it useful for analyzing non-stationary signals. Secondly, it has good resolution properties and can distinguish between closely spaced frequency components. However, the WDF has some limitations. It has a high computational complexity and can produce negative values, making interpretation difficult.</p><h2 id=\"modified-distribution-functions\">Modified Distribution Functions</h2><p>Modified distribution functions (MDFs) are a family of TFRs that include smoothed WDFs, spectrograms, and scalograms. Spectrograms are the most widely used MDFs and provide a frequency-time representation of a signal. They use a window function to obtain a smoothed version of the WDF and have a low computational complexity.</p><p>Scalograms are a type of MDF that uses wavelet transforms to analyze signals. They have good time-frequency resolution and can capture both high and low-frequency components of a signal. However, they have limited resolution in time and frequency if the wavelet basis function is not chosen properly.</p><h2 id=\"table-comparing-tfrs\">Table comparing TFRs</h2><table>  <thead>    <tr>      <th>TFR</th>      <th>Pros</th>      <th>Cons</th>    </tr>  </thead>  <tbody>    <tr>      <td>Wigner</td>      <td>Accurate frequency and phase information. Good frequency resolution.</td>      <td>High computational complexity. Can produce negative values, making interpretation difficult.</td>    </tr>    <tr>      <td>Spectrogram</td>      <td>Low computational complexity. Good frequency resolution.</td>      <td>Limited time and frequency resolution.</td>    </tr>    <tr>      <td>Scalogram</td>      <td>Good time and frequency resolution. Can capture both high and low frequencies.</td>      <td>Limited resolution in time and frequency if the wavelet basis function is not chosen properly.</td>    </tr>  </tbody></table><p>In conclusion, TFRs are an essential tool in signal processing as they allow for a joint analysis of the time and frequency domains. The choice of TFR will depend on the specific requirements of the analysis, including the complexity of the signal and the desired resolution in time and frequency.</p><h2 id=\"conclusion\">Conclusion</h2><p>Time-frequency analysis is a powerful technique for signal processing, especially when analyzing non-stationary signals. The article provided an introduction to TFA, discussing time-frequency representations and the need for them. Additionally, it explained the four main types of time-frequency representations and their working principles. Python implementations of Short-Time Fourier Transform (STFT), Continuous Wavelet Transform (CWT), Empirical Mode Decomposition (EMD), and Cohen’s Class were also provided as examples.</p>",
            "url": "http://localhost:4000/2023/03/26/tf-representations",
            
            
            
            "tags": ["time_frequency_methods","representation","STFT","EMD"],
            
            "date_published": "2023-03-26T00:00:00+00:00",
            "date_modified": "2023-03-26T00:00:00+00:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/25/ewt",
            "title": "Empirical Wavelet Transform and its Variants",
            "summary": "An overview of empirical wavelet transform and its variants along with their mathematical formulations and Python implementations.",
            "content_text": "IntroductionEmpirical Wavelet Transform (EWT) is a time-frequency analysis tool used for decomposing signals into localized oscillatory modes. It is a data-driven approach for signal processing that does not require any prior knowledge about the signal or any specific wavelet basis. EWT is particularly useful for non-stationary signals that exhibit time-varying statistical properties.EWT is based on the principle of finding local oscillations in the signal using an adaptive wavelet that varies with the signal itself. It is a versatile technique that has several variants, each with its unique properties and applications. This article provides an overview of some of the most commonly used variants of EWT and their mathematical formulations. Python implementations and examples are also included.Empirical Wavelet Transform (EWT)EWT decomposes a signal f(t) into a set of oscillatory modes m_i(t) that represent localized oscillations in the signal with different time and frequency characteristics. The EWT process involves the following steps:  Compute the Hilbert Spectrum of the signal f(t) using the Hilbert-Huang Transform (HHT).  Estimate the local frequency and bandwidth of each mode using an adaptive wavelet.  Perform a weighted Fourier transform of each mode to obtain the oscillatory component and its corresponding scale.The Empirical Wavelet Function (EWF) at scale a and position t is defined as:Ψa,t(x)=1∣a∣1/2Ψ(x−ta)\\Psi_{a, t}(x) = \\frac{1}{|a|^{1/2}} \\Psi\\left(\\frac{x-t}{a}\\right)Ψa,t​(x)=∣a∣1/21​Ψ(ax−t​)where Psi is an analyzing wavelet function, and a is the scale parameter that varies with time. The local oscillatory mode m_i(t) is obtained by convolving the signal f(t) with the EWF Psi_a,t(x):mi(t)=∫−∞∞f(x)Ψai,ti(x−t)dxm_i(t) = \\int_{-\\infty}^{\\infty} f(x) \\Psi_{a_i, t_i}(x-t) dxmi​(t)=∫−∞∞​f(x)Ψai​,ti​​(x−t)dxwhere a_i and t_i are the scale and position parameters estimated for each mode, respectively.The Hilbert Spectrum of the signal f(t) is obtained using HHT, which involves the following steps:  Decompose f(t) into a set of Intrinsic Mode Functions (IMFs) using Empirical Mode Decomposition (EMD).  Compute the Hilbert transform of each IMF.  Compute the instantaneous frequency and amplitude of each mode using the Hilbert Transform.The Hilbert Transform of a signal f(t) is defined as:H[f(t)]=1πtPV ⁣ ⁣ ⁣ ⁣∫−∞∞f(x)t−xdxH[f(t)] = \\frac{1}{\\pi t} PV\\!\\!\\!\\!\\int_{-\\infty}^{\\infty} \\frac{f(x)}{t-x}dxH[f(t)]=πt1​PV∫−∞∞​t−xf(x)​dxwhere PV denotes the principal value integral.Once the Hilbert Spectrum is obtained, EWT can be used to decompose the signal f(t) into a set of oscillatory modes m_i(t).Variants of EWTEWT has several variants that differ in the wavelet function used, the thresholding method used to estimate the local frequency and bandwidth, and the weighting scheme used to obtain the oscillatory component. Some commonly used variants are:Fourier-Based Empirical Wavelet Transform (FWT)FWT is a simplified version of EWT that uses the Fourier transform instead of the adaptive wavelet to estimate the local frequency and bandwidth. FWT involves the following steps:  Compute the Fourier transform of the signal f(t).  Compute the magnitude and phase of each frequency component.  Estimate the local frequency as the derivative of the phase with respect to time.  Estimate the local bandwidth as the inverse of the second derivative of the phase with respect to time.  Apply a weighting function to obtain the oscillatory component.The Fourier-Based Empirical Wavelet Function is defined as:Ψa,t(x)=12π∣a∣eiwxe−(x−t)22a2\\Psi_{a, t}(x) = \\frac{1}{\\sqrt{2\\pi}|a|} e^{iwx}e^{-\\frac{(x-t)^2}{2a^2}}Ψa,t​(x)=2π​∣a∣1​eiwxe−2a2(x−t)2​where a is the scale parameter, t is the position parameter, and w is the frequency parameter. The local frequency and bandwidth at position t are estimated as the instantaneous frequency and bandwidth of the Fourier component at that position, respectively.Complex Empirical Wavelet Transform (CEWT)CEWT is a variant of EWT that uses a complex wavelet to obtain the oscillatory modes. The complex wavelet is defined as:Ψ(x)=eiwxϕ(x)\\Psi(x) = e^{iwx} \\phi(x)Ψ(x)=eiwxϕ(x)where w is the frequency parameter, and phi(x) is a real-valued analyzing function. CEWT involves the following steps:  Compute the Hilbert Spectrum of the signal f(t) using HHT.  Approximate the Hilbert Spectrum as a sum of complex signals using a complex wavelet transform.  Apply a thresholding method to obtain a set of Hilbert ridges, which represent the oscillatory modes.  Apply a weighting function to obtain the oscillatory component.Synchrosqueezing Transform (SST)SST is a variant of EWT that uses a reassignment method to obtain the oscillatory modes. SST involves the following steps:  Compute the Hilbert Spectrum of the signal f(t) using HHT.  Reassign the energy of each component of the Hilbert Spectrum to the corresponding frequency and time.  Apply a thresholding method to obtain a set of Hilbert ridges, which represent the oscillatory modes.  Apply a weighting function to obtain the oscillatory component.Python ImplementationThe following Python code provides an example of how to implement FWT using NumPy:import numpy as npdef fwt(data, scales):    # Compute the Fourier transform of the data    fft_data = np.fft.fft(data)    # Compute the frequency and phase of each component    freq = np.fft.fftfreq(len(data), d=1/sampling_rate)    phase = np.angle(fft_data)    # Compute the local frequency and bandwidth of each mode    df = np.gradient(phase)    ddf = np.gradient(df)    local_freq = freq + df / (2*np.pi)    local_bandwidth = 1 / (np.abs(ddf) + epsilon)    # Compute the Fourier-Based Empirical Wavelet Function Psi    t = np.arange(len(data))    Psi = np.exp(1j*2*np.pi*freq[:, None]*t) * np.exp(-0.5*((t[:, None] - scales[None, :])/local_bandwidth)**2)    # Compute the amplitude and oscillatory component    amplitude = np.abs(fft_data)    oscillatory_component = np.real(np.sum(amplitude[:, None] * Psi, axis=0))    return oscillatory_componentThis code takes as input an array of signal data data and an array of scale parameters scales, and returns the Fourier-based Empirical Wavelet Transform of the signal. The code computes the Fourier transform of the signal and estimates the local frequency and bandwidth of each mode using the Fourier coefficients. It then computes the Fourier-based Empirical Wavelet Function Psi and applies it to obtain the oscillatory component of each mode.ConclusionEmpirical Wavelet Transform is a powerful time-frequency analysis tool that can be used for decomposing signals into localized oscillatory modes. There are several variants of EWT, each with its unique properties and applications. This article provided an overview of some of the most commonly used variants of EWT and their mathematical formulations, along with Python implementations of each variant. EWT can be a valuable tool for analyzing non-stationary signals in a wide range of applications.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>Empirical Wavelet Transform (EWT) is a time-frequency analysis tool used for decomposing signals into localized oscillatory modes. It is a data-driven approach for signal processing that does not require any prior knowledge about the signal or any specific wavelet basis. EWT is particularly useful for non-stationary signals that exhibit time-varying statistical properties.</p><p>EWT is based on the principle of finding local oscillations in the signal using an adaptive wavelet that varies with the signal itself. It is a versatile technique that has several variants, each with its unique properties and applications. This article provides an overview of some of the most commonly used variants of EWT and their mathematical formulations. Python implementations and examples are also included.</p><h1 id=\"empirical-wavelet-transform-ewt\">Empirical Wavelet Transform (EWT)</h1><p>EWT decomposes a signal <code>f(t)</code> into a set of oscillatory modes <code>m_i(t)</code> that represent localized oscillations in the signal with different time and frequency characteristics. The EWT process involves the following steps:</p><ol>  <li>Compute the Hilbert Spectrum of the signal <code>f(t)</code> using the Hilbert-Huang Transform (HHT).</li>  <li>Estimate the local frequency and bandwidth of each mode using an adaptive wavelet.</li>  <li>Perform a weighted Fourier transform of each mode to obtain the oscillatory component and its corresponding scale.</li></ol><p>The Empirical Wavelet Function (EWF) at scale <code>a</code> and position <code>t</code> is defined as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi mathvariant=\"normal\">Ψ</mi><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>t</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant=\"normal\">∣</mi><mi>a</mi><msup><mi mathvariant=\"normal\">∣</mi><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow></msup></mrow></mfrac><mi mathvariant=\"normal\">Ψ</mi><mrow><mo fence=\"true\">(</mo><mfrac><mrow><mi>x</mi><mo>−</mo><mi>t</mi></mrow><mi>a</mi></mfrac><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\Psi_{a, t}(x) = \\frac{1}{|a|^{1/2}} \\Psi\\left(\\frac{x-t}{a}\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\">Ψ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.404em;vertical-align:-0.954em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.296em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1/2</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">Ψ</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2921em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span></span></span></span></span><p>where <code>Psi</code> is an analyzing wavelet function, and <code>a</code> is the scale parameter that varies with time. The local oscillatory mode <code>m_i(t)</code> is obtained by convolving the signal <code>f(t)</code> with the EWF <code>Psi_a,t(x)</code>:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><msub><mi mathvariant=\"normal\">Ψ</mi><mrow><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>t</mi><mi>i</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">m_i(t) = \\int_{-\\infty}^{\\infty} f(x) \\Psi_{a_i, t_i}(x-t) dx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3846em;vertical-align:-0.9703em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4143em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord\">Ψ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span></span></span></span><p>where <code>a_i</code> and <code>t_i</code> are the scale and position parameters estimated for each mode, respectively.</p><p>The Hilbert Spectrum of the signal <code>f(t)</code> is obtained using HHT, which involves the following steps:</p><ol>  <li>Decompose <code>f(t)</code> into a set of Intrinsic Mode Functions (IMFs) using Empirical Mode Decomposition (EMD).</li>  <li>Compute the Hilbert transform of each IMF.</li>  <li>Compute the instantaneous frequency and amplitude of each mode using the Hilbert Transform.</li></ol><p>The Hilbert Transform of a signal <code>f(t)</code> is defined as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">[</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>π</mi><mi>t</mi></mrow></mfrac><mi>P</mi><mi>V</mi><mtext> ⁣</mtext><mtext> ⁣</mtext><mtext> ⁣</mtext><mtext> ⁣</mtext><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mfrac><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>t</mi><mo>−</mo><mi>x</mi></mrow></mfrac><mi>d</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">H[f(t)] = \\frac{1}{\\pi t} PV\\!\\!\\!\\!\\int_{-\\infty}^{\\infty} \\frac{f(x)}{t-x}dx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3973em;vertical-align:-0.9703em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">t</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4143em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span></span></span></span><p>where <code>PV</code> denotes the principal value integral.</p><p>Once the Hilbert Spectrum is obtained, EWT can be used to decompose the signal <code>f(t)</code> into a set of oscillatory modes <code>m_i(t)</code>.</p><h1 id=\"variants-of-ewt\">Variants of EWT</h1><p>EWT has several variants that differ in the wavelet function used, the thresholding method used to estimate the local frequency and bandwidth, and the weighting scheme used to obtain the oscillatory component. Some commonly used variants are:</p><h2 id=\"fourier-based-empirical-wavelet-transform-fwt\">Fourier-Based Empirical Wavelet Transform (FWT)</h2><p>FWT is a simplified version of EWT that uses the Fourier transform instead of the adaptive wavelet to estimate the local frequency and bandwidth. FWT involves the following steps:</p><ol>  <li>Compute the Fourier transform of the signal <code>f(t)</code>.</li>  <li>Compute the magnitude and phase of each frequency component.</li>  <li>Estimate the local frequency as the derivative of the phase with respect to time.</li>  <li>Estimate the local bandwidth as the inverse of the second derivative of the phase with respect to time.</li>  <li>Apply a weighting function to obtain the oscillatory component.</li></ol><p>The Fourier-Based Empirical Wavelet Function is defined as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi mathvariant=\"normal\">Ψ</mi><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>t</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt><mi mathvariant=\"normal\">∣</mi><mi>a</mi><mi mathvariant=\"normal\">∣</mi></mrow></mfrac><msup><mi>e</mi><mrow><mi>i</mi><mi>w</mi><mi>x</mi></mrow></msup><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mi>t</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>a</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\Psi_{a, t}(x) = \\frac{1}{\\sqrt{2\\pi}|a|} e^{iwx}e^{-\\frac{(x-t)^2}{2a^2}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\">Ψ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3763em;vertical-align:-1.0472em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.2028em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9072em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-2.8672em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1328em;\"><span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">∣</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0472em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8747em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3291em;\"><span style=\"top:-3.4534em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.251em;\"><span style=\"top:-2.5062em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9384em;\"><span style=\"top:-2.9384em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.5021em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\"><span class=\"mclose mtight\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0484em;\"><span style=\"top:-3.0484em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4938em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span></span><p>where <code>a</code> is the scale parameter, <code>t</code> is the position parameter, and <code>w</code> is the frequency parameter. The local frequency and bandwidth at position <code>t</code> are estimated as the instantaneous frequency and bandwidth of the Fourier component at that position, respectively.</p><h2 id=\"complex-empirical-wavelet-transform-cewt\">Complex Empirical Wavelet Transform (CEWT)</h2><p>CEWT is a variant of EWT that uses a complex wavelet to obtain the oscillatory modes. The complex wavelet is defined as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"normal\">Ψ</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mi>i</mi><mi>w</mi><mi>x</mi></mrow></msup><mi>ϕ</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Psi(x) = e^{iwx} \\phi(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Ψ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1247em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8747em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span><p>where <code>w</code> is the frequency parameter, and <code>phi(x)</code> is a real-valued analyzing function. CEWT involves the following steps:</p><ol>  <li>Compute the Hilbert Spectrum of the signal <code>f(t)</code> using HHT.</li>  <li>Approximate the Hilbert Spectrum as a sum of complex signals using a complex wavelet transform.</li>  <li>Apply a thresholding method to obtain a set of Hilbert ridges, which represent the oscillatory modes.</li>  <li>Apply a weighting function to obtain the oscillatory component.</li></ol><h2 id=\"synchrosqueezing-transform-sst\">Synchrosqueezing Transform (SST)</h2><p>SST is a variant of EWT that uses a reassignment method to obtain the oscillatory modes. SST involves the following steps:</p><ol>  <li>Compute the Hilbert Spectrum of the signal <code>f(t)</code> using HHT.</li>  <li>Reassign the energy of each component of the Hilbert Spectrum to the corresponding frequency and time.</li>  <li>Apply a thresholding method to obtain a set of Hilbert ridges, which represent the oscillatory modes.</li>  <li>Apply a weighting function to obtain the oscillatory component.</li></ol><h1 id=\"python-implementation\">Python Implementation</h1><p>The following Python code provides an example of how to implement FWT using NumPy:</p><pre><code class=\"language-python\">import numpy as npdef fwt(data, scales):    # Compute the Fourier transform of the data    fft_data = np.fft.fft(data)    # Compute the frequency and phase of each component    freq = np.fft.fftfreq(len(data), d=1/sampling_rate)    phase = np.angle(fft_data)    # Compute the local frequency and bandwidth of each mode    df = np.gradient(phase)    ddf = np.gradient(df)    local_freq = freq + df / (2*np.pi)    local_bandwidth = 1 / (np.abs(ddf) + epsilon)    # Compute the Fourier-Based Empirical Wavelet Function Psi    t = np.arange(len(data))    Psi = np.exp(1j*2*np.pi*freq[:, None]*t) * np.exp(-0.5*((t[:, None] - scales[None, :])/local_bandwidth)**2)    # Compute the amplitude and oscillatory component    amplitude = np.abs(fft_data)    oscillatory_component = np.real(np.sum(amplitude[:, None] * Psi, axis=0))    return oscillatory_component</code></pre><p>This code takes as input an array of signal data <code>data</code> and an array of scale parameters <code>scales</code>, and returns the Fourier-based Empirical Wavelet Transform of the signal. The code computes the Fourier transform of the signal and estimates the local frequency and bandwidth of each mode using the Fourier coefficients. It then computes the Fourier-based Empirical Wavelet Function Psi and applies it to obtain the oscillatory component of each mode.</p><h1 id=\"conclusion\">Conclusion</h1><p>Empirical Wavelet Transform is a powerful time-frequency analysis tool that can be used for decomposing signals into localized oscillatory modes. There are several variants of EWT, each with its unique properties and applications. This article provided an overview of some of the most commonly used variants of EWT and their mathematical formulations, along with Python implementations of each variant. EWT can be a valuable tool for analyzing non-stationary signals in a wide range of applications.</p>",
            "url": "http://localhost:4000/2023/03/25/ewt",
            
            
            
            "tags": ["wavelet","signal_extraction","time_frequency_methods"],
            
            "date_published": "2023-03-25T00:00:00+00:00",
            "date_modified": "2023-03-25T00:00:00+00:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/24/time-filtering",
            "title": "Time Filtering",
            "summary": null,
            "content_text": "layout: posttitle: “Different Time Filtering Algorithms and Their Variants”description: “This article discusses different time filtering algorithms along with their variants, and provides a Python implementation for each. The article also includes equations in LaTeX for each algorithm.”summary: “This article provides an overview of different time filtering algorithms and their variants, along with a Python implementation and equations in LaTeX.”author: “Pavan Donthireddy”mathjax: trueoriginal: newtags: [ filters ]—IntroductionTime filtering is a technique used in signal processing to remove noise and other unwanted signals from a signal. There are several time filtering algorithms, with variations in each. This article provides an overview of some of the most common time filtering algorithms, along with their variants. We will also provide a Python implementation for each algorithm.Moving Average FilterThe moving average filter (MAF) is one of the most basic time filtering algorithms. It works by averaging a certain number of adjacent data points in a signal. The MAF can be represented mathematically as:y[n]=1N∑i=0N−1x[n−i]y[n] = \\frac{1}{N}\\sum_{i=0}^{N-1}x[n-i]y[n]=N1​i=0∑N−1​x[n−i]where N is the window size, x[n] is the input signal, and y[n] is the output signal.A simple Python implementation of the MAF would be:def moving_average_filter(x, N):    y = []    for i in range(len(x)):        if i &lt; N:            y.append(sum(x[:i+1])/len(x[:i+1]))        else:            y.append(sum(x[i-N+1:i+1])/N)    return yExponential Moving Average FilterThe exponential moving average filter (EMA) is a variation of the MAF. It works by weighting each data point in the input signal by a coefficient that decreases exponentially as the data point moves further away from the current time step. The EMA can be represented mathematically as:y[n]=αx[n]+(1−α)y[n−1]y[n] = \\alpha x[n] + (1 - \\alpha) y[n-1]y[n]=αx[n]+(1−α)y[n−1]where $\\alpha$ is a coefficient between 0 and 1 that determines the weighting of each data point, x[n] is the input signal, and y[n] is the output signal.A simple Python implementation of the EMA would be:def exponential_moving_average_filter(x, alpha):    y = [x[0]]    for i in range(1, len(x)):        y.append(alpha*x[i] + (1-alpha)*y[i-1])    return yButterworth Low-Pass FilterThe Butterworth low-pass filter (BLPF) is a filter that can be used to remove high-frequency noise from a signal. It works by cutting off high-frequency signals while passing low-frequency signals. The BLPF can be represented mathematically as:H(s)=11+(sωc)2nH(s) = \\frac{1}{1 + (\\frac{s}{\\omega_c})^{2n}}H(s)=1+(ωc​s​)2n1​where s is the Laplace variable, $\\omega_c$ is the cutoff frequency, and n is the order of the filter.To implement the BLPF in Python, we can use the signal module from the scipy library:from scipy import signaldef butterworth_low_pass_filter(x, cutoff_frequency, order):    b, a = signal.butter(order, cutoff_frequency, 'lowpass', analog=True)    y = signal.lfilter(b, a, x)    return yKalman FilterThe Kalman filter is a complex algorithm that can be used to filter noisy measurements of a system. It works by using a series of measurements to estimate the state of a system over time, taking into account the uncertainty and noise in each measurement. The Kalman filter can be represented mathematically by a set of equations that describe the state estimate, the error covariance matrix, and the optimal Kalman gain.A simple Python implementation of the Kalman filter would be:import numpy as npdef kalman_filter(x, z, A, H, Q, R, P):    x_hat = np.zeros_like(x)    P_hat = np.zeros_like(P)    K = np.zeros_like(x)    for i in range(len(x)):        # Time update        x_hat[i] = A @ x_hat[i-1]        P_hat[i] = A @ P_hat[i-1] @ A.T + Q        # Measurement update        K[i] = P_hat[i] @ H.T @ np.linalg.inv(H @ P_hat[i] @ H.T + R)        x_hat[i] = x_hat[i] + K[i] @ (z[i] - H @ x_hat[i])        P_hat[i] = (np.eye(len(A)) - K[i] @ H) @ P_hat[i]    return x_hatConclusionThere are many time filtering algorithms, each with their own variations and applications. In this article, we have provided overviews of the moving average filter, the exponential moving average filter, the Butterworth low-pass filter, and the Kalman filter. We have also provided Python implementations for each algorithm. These algorithms can be used to remove noise and other unwanted signals from a signal, which can be valuable in various applications.",
            "content_html": "<hr /><p>layout: posttitle: “Different Time Filtering Algorithms and Their Variants”description: “This article discusses different time filtering algorithms along with their variants, and provides a Python implementation for each. The article also includes equations in LaTeX for each algorithm.”summary: “This article provides an overview of different time filtering algorithms and their variants, along with a Python implementation and equations in LaTeX.”author: “Pavan Donthireddy”mathjax: trueoriginal: newtags: [ filters ]—</p><h1 id=\"introduction\">Introduction</h1><p>Time filtering is a technique used in signal processing to remove noise and other unwanted signals from a signal. There are several time filtering algorithms, with variations in each. This article provides an overview of some of the most common time filtering algorithms, along with their variants. We will also provide a Python implementation for each algorithm.</p><h1 id=\"moving-average-filter\">Moving Average Filter</h1><p>The moving average filter (MAF) is one of the most basic time filtering algorithms. It works by averaging a certain number of adjacent data points in a signal. The MAF can be represented mathematically as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>x</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">y[n] = \\frac{1}{N}\\sum_{i=0}^{N-1}x[n-i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.106em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span></span><p>where N is the window size, x[n] is the input signal, and y[n] is the output signal.</p><p>A simple Python implementation of the MAF would be:</p><pre><code>def moving_average_filter(x, N):    y = []    for i in range(len(x)):        if i &lt; N:            y.append(sum(x[:i+1])/len(x[:i+1]))        else:            y.append(sum(x[i-N+1:i+1])/N)    return y</code></pre><h1 id=\"exponential-moving-average-filter\">Exponential Moving Average Filter</h1><p>The exponential moving average filter (EMA) is a variation of the MAF. It works by weighting each data point in the input signal by a coefficient that decreases exponentially as the data point moves further away from the current time step. The EMA can be represented mathematically as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>α</mi><mi>x</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy=\"false\">)</mo><mi>y</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">y[n] = \\alpha x[n] + (1 - \\alpha) y[n-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">αx</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></span><p>where $\\alpha$ is a coefficient between 0 and 1 that determines the weighting of each data point, x[n] is the input signal, and y[n] is the output signal.</p><p>A simple Python implementation of the EMA would be:</p><pre><code>def exponential_moving_average_filter(x, alpha):    y = [x[0]]    for i in range(1, len(x)):        y.append(alpha*x[i] + (1-alpha)*y[i-1])    return y</code></pre><h1 id=\"butterworth-low-pass-filter\">Butterworth Low-Pass Filter</h1><p>The Butterworth low-pass filter (BLPF) is a filter that can be used to remove high-frequency noise from a signal. It works by cutting off high-frequency signals while passing low-frequency signals. The BLPF can be represented mathematically as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mo stretchy=\"false\">(</mo><mfrac><mi>s</mi><msub><mi>ω</mi><mi>c</mi></msub></mfrac><msup><mo stretchy=\"false\">)</mo><mrow><mn>2</mn><mi>n</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">H(s) = \\frac{1}{1 + (\\frac{s}{\\omega_c})^{2n}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4525em;vertical-align:-1.1311em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6954em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1311em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><p>where s is the Laplace variable, $\\omega_c$ is the cutoff frequency, and n is the order of the filter.</p><p>To implement the BLPF in Python, we can use the <code>signal</code> module from the <code>scipy</code> library:</p><pre><code class=\"language-python\">from scipy import signaldef butterworth_low_pass_filter(x, cutoff_frequency, order):    b, a = signal.butter(order, cutoff_frequency, 'lowpass', analog=True)    y = signal.lfilter(b, a, x)    return y</code></pre><h1 id=\"kalman-filter\">Kalman Filter</h1><p>The Kalman filter is a complex algorithm that can be used to filter noisy measurements of a system. It works by using a series of measurements to estimate the state of a system over time, taking into account the uncertainty and noise in each measurement. The Kalman filter can be represented mathematically by a set of equations that describe the state estimate, the error covariance matrix, and the optimal Kalman gain.</p><p>A simple Python implementation of the Kalman filter would be:</p><pre><code>import numpy as npdef kalman_filter(x, z, A, H, Q, R, P):    x_hat = np.zeros_like(x)    P_hat = np.zeros_like(P)    K = np.zeros_like(x)    for i in range(len(x)):        # Time update        x_hat[i] = A @ x_hat[i-1]        P_hat[i] = A @ P_hat[i-1] @ A.T + Q        # Measurement update        K[i] = P_hat[i] @ H.T @ np.linalg.inv(H @ P_hat[i] @ H.T + R)        x_hat[i] = x_hat[i] + K[i] @ (z[i] - H @ x_hat[i])        P_hat[i] = (np.eye(len(A)) - K[i] @ H) @ P_hat[i]    return x_hat</code></pre><h1 id=\"conclusion\">Conclusion</h1><p>There are many time filtering algorithms, each with their own variations and applications. In this article, we have provided overviews of the moving average filter, the exponential moving average filter, the Butterworth low-pass filter, and the Kalman filter. We have also provided Python implementations for each algorithm. These algorithms can be used to remove noise and other unwanted signals from a signal, which can be valuable in various applications.</p>",
            "url": "http://localhost:4000/2023/03/24/time-filtering",
            
            
            
            
            
            "date_published": "2023-03-24T00:00:00+00:00",
            "date_modified": "2023-03-24T00:00:00+00:00",
            
                "author":  {
                "name": "Pavan Donthireddy",
                "url": "https://pavandonthireddy.github.io",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/23/frequency-filtering",
            "title": "Frequency Filtering",
            "summary": null,
            "content_text": "layout: posttitle: “Different Frequency Filtering Algorithms and its Variants”description: “This article discusses various frequency filtering algorithms and their variants, along with equations in LaTeX. It also includes Python implementations for each variant with an example.”summary: “This article discusses various frequency filtering algorithms and their variants, along with equations in LaTeX. It also includes Python implementations for each variant with an example.”author: “Pavan Donthireddy”mathjax: trueoriginal: newtags: [ filters ]—IntroductionFrequency filtering is an essential signal processing technique used to eliminate unwanted frequency components from signals. It is used in various fields such as audio processing, image processing, and communication systems. Frequency filtering algorithms are designed to remove unwanted frequency components while preserving the useful components. This article provides a brief overview of common frequency filtering algorithms and their variants, along with their mathematical equations in LaTeX.Types of Frequency Filtering AlgorithmsLow-Pass FilterA low-pass filter allows the low-frequency components of a signal to pass while attenuating the high-frequency components. The cut-off frequency of a low-pass filter determines the point at which the high-frequency components are attenuated. The transfer function of a low-pass filter can be expressed as follows:Hlp(f)=11+jffcH_{lp}(f) = \\frac{1}{1 + j\\frac{f}{f_c}}Hlp​(f)=1+jfc​f​1​Where $f_c$ is the cut-off frequency.Implementation in Pythonimport numpy as npimport matplotlib.pyplot as pltdef lowpass_filter(signal, cutoff_freq, sample_rate):    \"\"\"     Implements a low-pass filter on the input signal.         Args:    signal (ndarray): Input signal    cutoff_freq (float): Cut-off frequency of the filter    sample_rate (float): Sample rate of the signal        Returns:    ndarray: Filtered signal    \"\"\"    nyquist_freq = 0.5 * sample_rate    normalized_cutoff_freq = 2 * cutoff_freq / sample_rate    b, a = signal.butter(5, normalized_cutoff_freq, btype='lowpass')    filtered_signal = signal.filtfilt(b, a, signal)        return filtered_signal# Example Usaget = np.linspace(0, 1, 1000)signal = np.sin(2*np.pi*10*t) + np.sin(2*np.pi*50*t)filtered_signal = lowpass_filter(signal, 20, 100)plt.plot(t, signal, label='Original Signal')plt.plot(t, filtered_signal, label='Filtered Signal')plt.legend()plt.show()High-Pass FilterAs the name suggests, a high-pass filter attenuates the low-frequency components of a signal while allowing the high-frequency components to pass. The cut-off frequency of a high-pass filter determines the point at which the low-frequency components are attenuated. The transfer function of a high-pass filter can be expressed as follows:Hhp(f)=jfjffc+1H_{hp}(f) = \\frac{jf}{j\\frac{f}{f_c} + 1}Hhp​(f)=jfc​f​+1jf​Where $f_c$ is the cut-off frequency.Implementation in Pythonimport numpy as npimport matplotlib.pyplot as pltdef highpass_filter(signal, cutoff_freq, sample_rate):    \"\"\"     Implements a high-pass filter on the input signal.         Args:    signal (ndarray): Input signal    cutoff_freq (float): Cut-off frequency of the filter    sample_rate (float): Sample rate of the signal        Returns:    ndarray: Filtered signal    \"\"\"    nyquist_freq = 0.5 * sample_rate    normalized_cutoff_freq = 2 * cutoff_freq / sample_rate    b, a = signal.butter(5, normalized_cutoff_freq, btype='highpass')    filtered_signal = signal.filtfilt(b, a, signal)        return filtered_signal# Example Usaget = np.linspace(0, 1, 1000)signal = np.sin(2*np.pi*10*t) + np.sin(2*np.pi*50*t)filtered_signal = highpass_filter(signal, 20, 100)plt.plot(t, signal, label='Original Signal')plt.plot(t, filtered_signal, label='Filtered Signal')plt.legend()plt.show()Band-Pass FilterA band-pass filter attenuates the frequency components outside its pass-band, allowing only the frequency components within the band to pass. The pass-band of a band-pass filter is defined by the upper and lower cut-off frequencies. The transfer function of a band-pass filter can be expressed as follows:Hbp(f)=j(fh−fl)j(fh−fl)fc+1e−j2πfh+fl2fstH_{bp}(f) = \\frac{j(f_{h} - f_{l})}{j\\frac{(f_{h} - f_{l})}{f_c} + 1} e^{-j2\\pi\\frac{f_{h} + f_{l}}{2f_s}t}Hbp​(f)=jfc​(fh​−fl​)​+1j(fh​−fl​)​e−j2π2fs​fh​+fl​​tWhere $f_{h}$ and $f_{l}$ are the upper and lower cut-off frequencies, respectively.Implementation in Pythonimport numpy as npimport matplotlib.pyplot as pltdef bandpass_filter(signal, lowcut, highcut, sample_rate):    \"\"\"     Implements a band-pass filter on the input signal.         Args:    signal (ndarray): Input signal    lowcut (float): Lower cut-off frequency of the filter    highcut (float): Upper cut-off frequency of the filter    sample_rate (float): Sample rate of the signal        Returns:    ndarray: Filtered signal    \"\"\"    nyquist_freq = 0.5 * sample_rate    normalized_lowcut = lowcut / nyquist_freq    normalized_highcut = highcut / nyquist_freq    b, a = signal.butter(5, [normalized_lowcut, normalized_highcut], btype='band')    filtered_signal = signal.filtfilt(b, a, signal)        return filtered_signal# Example Usaget = np.linspace(0, 1, 1000)signal = np.sin(2*np.pi*10*t) + np.sin(2*np.pi*50*t)filtered_signal = bandpass_filter(signal, 20, 80, 100)plt.plot(t, signal, label='Original Signal')plt.plot(t, filtered_signal, label='Filtered Signal')plt.legend()plt.show()Band-Stop FilterA band-stop filter attenuates the frequency components within its stop-band, allowing only the frequency components outside the band to pass. The stop-band of a band-stop filter is defined by the upper and lower cut-off frequencies. The transfer function of a band-stop filter can be expressed as follows:Hbs(f)=11+j(fh−fl)fce−j2πfh+fl2fstH_{bs}(f) = \\frac{1}{1 + j\\frac{(f_{h} - f_{l})}{f_c}} e^{-j2\\pi\\frac{f_{h} + f_{l}}{2f_s}t}Hbs​(f)=1+jfc​(fh​−fl​)​1​e−j2π2fs​fh​+fl​​tWhere $f_{h}$ and $f_{l}$ are the upper and lower cut-off frequencies, respectively.Implementation in Pythonimport numpy as npimport matplotlib.pyplot as pltdef bandstop_filter(signal, lowcut, highcut, sample_rate):    \"\"\"     Implements a band-stop filter on the input signal.         Args:    signal (ndarray): Input signal    lowcut (float): Lower cut-off frequency of the filter    highcut (float): Upper cut-off frequency of the filter    sample_rate (float): Sample rate of the signal        Returns:    ndarray: Filtered signal    \"\"\"    nyquist_freq = 0.5 * sample_rate    normalized_lowcut = lowcut / nyquist_freq    normalized_highcut = highcut / nyquist_freq    b, a = signal.butter(5, [normalized_lowcut, normalized_highcut], btype='bandstop')    filtered_signal = signal.filtfilt(b, a, signal)        return filtered_signal# Example Usaget = np.linspace(0, 1, 1000)signal = np.sin(2*np.pi*10*t) + np.sin(2*np.pi*50*t)filtered_signal = bandstop_filter(signal, 20, 80, 100)plt.plot(t, signal, label='Original Signal')plt.plot(t, filtered_signal, label='Filtered Signal')plt.legend()plt.show()ConclusionFrequency filtering is an essential technique in digital signal processing, and various algorithms and their variants are commonly used in various fields. This article provided a brief overview of the most common frequency filtering algorithms, along with mathematical equations in LaTeX and their Python implementations. It is vital to understand the application and characteristics of different algorithms before selecting a specific algorithm for a specific task.",
            "content_html": "<hr /><p>layout: posttitle: “Different Frequency Filtering Algorithms and its Variants”description: “This article discusses various frequency filtering algorithms and their variants, along with equations in LaTeX. It also includes Python implementations for each variant with an example.”summary: “This article discusses various frequency filtering algorithms and their variants, along with equations in LaTeX. It also includes Python implementations for each variant with an example.”author: “Pavan Donthireddy”mathjax: trueoriginal: newtags: [ filters ]—</p><h1 id=\"introduction\">Introduction</h1><p>Frequency filtering is an essential signal processing technique used to eliminate unwanted frequency components from signals. It is used in various fields such as audio processing, image processing, and communication systems. Frequency filtering algorithms are designed to remove unwanted frequency components while preserving the useful components. This article provides a brief overview of common frequency filtering algorithms and their variants, along with their mathematical equations in LaTeX.</p><h1 id=\"types-of-frequency-filtering-algorithms\">Types of Frequency Filtering Algorithms</h1><h2 id=\"low-pass-filter\">Low-Pass Filter</h2><p>A low-pass filter allows the low-frequency components of a signal to pass while attenuating the high-frequency components. The cut-off frequency of a low-pass filter determines the point at which the high-frequency components are attenuated. The transfer function of a low-pass filter can be expressed as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>H</mi><mrow><mi>l</mi><mi>p</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>j</mi><mfrac><mi>f</mi><msub><mi>f</mi><mi>c</mi></msub></mfrac></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">H_{lp}(f) = \\frac{1}{1 + j\\frac{f}{f_c}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">lp</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.6248em;vertical-align:-1.3033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.1778em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9322em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4811em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><p>Where $f_c$ is the cut-off frequency.</p><h3 id=\"implementation-in-python\">Implementation in Python</h3><pre><code class=\"language-python\">import numpy as npimport matplotlib.pyplot as pltdef lowpass_filter(signal, cutoff_freq, sample_rate):    \"\"\"     Implements a low-pass filter on the input signal.         Args:    signal (ndarray): Input signal    cutoff_freq (float): Cut-off frequency of the filter    sample_rate (float): Sample rate of the signal        Returns:    ndarray: Filtered signal    \"\"\"    nyquist_freq = 0.5 * sample_rate    normalized_cutoff_freq = 2 * cutoff_freq / sample_rate    b, a = signal.butter(5, normalized_cutoff_freq, btype='lowpass')    filtered_signal = signal.filtfilt(b, a, signal)        return filtered_signal# Example Usaget = np.linspace(0, 1, 1000)signal = np.sin(2*np.pi*10*t) + np.sin(2*np.pi*50*t)filtered_signal = lowpass_filter(signal, 20, 100)plt.plot(t, signal, label='Original Signal')plt.plot(t, filtered_signal, label='Filtered Signal')plt.legend()plt.show()</code></pre><h2 id=\"high-pass-filter\">High-Pass Filter</h2><p>As the name suggests, a high-pass filter attenuates the low-frequency components of a signal while allowing the high-frequency components to pass. The cut-off frequency of a high-pass filter determines the point at which the low-frequency components are attenuated. The transfer function of a high-pass filter can be expressed as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>H</mi><mrow><mi>h</mi><mi>p</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>j</mi><mi>f</mi></mrow><mrow><mi>j</mi><mfrac><mi>f</mi><msub><mi>f</mi><mi>c</mi></msub></mfrac><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">H_{hp}(f) = \\frac{jf}{j\\frac{f}{f_c} + 1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">p</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.6748em;vertical-align:-1.3033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.1778em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9322em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4811em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><p>Where $f_c$ is the cut-off frequency.</p><h3 id=\"implementation-in-python-1\">Implementation in Python</h3><pre><code class=\"language-python\">import numpy as npimport matplotlib.pyplot as pltdef highpass_filter(signal, cutoff_freq, sample_rate):    \"\"\"     Implements a high-pass filter on the input signal.         Args:    signal (ndarray): Input signal    cutoff_freq (float): Cut-off frequency of the filter    sample_rate (float): Sample rate of the signal        Returns:    ndarray: Filtered signal    \"\"\"    nyquist_freq = 0.5 * sample_rate    normalized_cutoff_freq = 2 * cutoff_freq / sample_rate    b, a = signal.butter(5, normalized_cutoff_freq, btype='highpass')    filtered_signal = signal.filtfilt(b, a, signal)        return filtered_signal# Example Usaget = np.linspace(0, 1, 1000)signal = np.sin(2*np.pi*10*t) + np.sin(2*np.pi*50*t)filtered_signal = highpass_filter(signal, 20, 100)plt.plot(t, signal, label='Original Signal')plt.plot(t, filtered_signal, label='Filtered Signal')plt.legend()plt.show()</code></pre><h2 id=\"band-pass-filter\">Band-Pass Filter</h2><p>A band-pass filter attenuates the frequency components outside its pass-band, allowing only the frequency components within the band to pass. The pass-band of a band-pass filter is defined by the upper and lower cut-off frequencies. The transfer function of a band-pass filter can be expressed as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>H</mi><mrow><mi>b</mi><mi>p</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>j</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mi>h</mi></msub><mo>−</mo><msub><mi>f</mi><mi>l</mi></msub><mo stretchy=\"false\">)</mo></mrow><mrow><mi>j</mi><mfrac><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mi>h</mi></msub><mo>−</mo><msub><mi>f</mi><mi>l</mi></msub><mo stretchy=\"false\">)</mo></mrow><msub><mi>f</mi><mi>c</mi></msub></mfrac><mo>+</mo><mn>1</mn></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mfrac><mrow><msub><mi>f</mi><mi>h</mi></msub><mo>+</mo><msub><mi>f</mi><mi>l</mi></msub></mrow><mrow><mn>2</mn><msub><mi>f</mi><mi>s</mi></msub></mrow></mfrac><mi>t</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">H_{bp}(f) = \\frac{j(f_{h} - f_{l})}{j\\frac{(f_{h} - f_{l})}{f_c} + 1} e^{-j2\\pi\\frac{f_{h} + f_{l}}{2f_s}t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">b</span><span class=\"mord mathnormal mtight\">p</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.8081em;vertical-align:-1.3811em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.11em;\"><span class=\"pstrut\" style=\"height:3.01em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3488em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1512em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3488em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1512em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4811em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.24em;\"><span class=\"pstrut\" style=\"height:3.01em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.687em;\"><span class=\"pstrut\" style=\"height:3.01em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3811em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.197em;\"><span style=\"top:-3.4486em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0693em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2306em;\"><span style=\"top:-2.3em;margin-left:-0.1076em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"mord mathnormal mtight\">s</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.5732em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.1076em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6944em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3496em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.1076em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6944em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3496em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4869em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span></span></span></span></span></span></span></span></span><p>Where $f_{h}$ and $f_{l}$ are the upper and lower cut-off frequencies, respectively.</p><h3 id=\"implementation-in-python-2\">Implementation in Python</h3><pre><code class=\"language-python\">import numpy as npimport matplotlib.pyplot as pltdef bandpass_filter(signal, lowcut, highcut, sample_rate):    \"\"\"     Implements a band-pass filter on the input signal.         Args:    signal (ndarray): Input signal    lowcut (float): Lower cut-off frequency of the filter    highcut (float): Upper cut-off frequency of the filter    sample_rate (float): Sample rate of the signal        Returns:    ndarray: Filtered signal    \"\"\"    nyquist_freq = 0.5 * sample_rate    normalized_lowcut = lowcut / nyquist_freq    normalized_highcut = highcut / nyquist_freq    b, a = signal.butter(5, [normalized_lowcut, normalized_highcut], btype='band')    filtered_signal = signal.filtfilt(b, a, signal)        return filtered_signal# Example Usaget = np.linspace(0, 1, 1000)signal = np.sin(2*np.pi*10*t) + np.sin(2*np.pi*50*t)filtered_signal = bandpass_filter(signal, 20, 80, 100)plt.plot(t, signal, label='Original Signal')plt.plot(t, filtered_signal, label='Filtered Signal')plt.legend()plt.show()</code></pre><h2 id=\"band-stop-filter\">Band-Stop Filter</h2><p>A band-stop filter attenuates the frequency components within its stop-band, allowing only the frequency components outside the band to pass. The stop-band of a band-stop filter is defined by the upper and lower cut-off frequencies. The transfer function of a band-stop filter can be expressed as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>H</mi><mrow><mi>b</mi><mi>s</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>j</mi><mfrac><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mi>h</mi></msub><mo>−</mo><msub><mi>f</mi><mi>l</mi></msub><mo stretchy=\"false\">)</mo></mrow><msub><mi>f</mi><mi>c</mi></msub></mfrac></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mfrac><mrow><msub><mi>f</mi><mi>h</mi></msub><mo>+</mo><msub><mi>f</mi><mi>l</mi></msub></mrow><mrow><mn>2</mn><msub><mi>f</mi><mi>s</mi></msub></mrow></mfrac><mi>t</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">H_{bs}(f) = \\frac{1}{1 + j\\frac{(f_{h} - f_{l})}{f_c}} e^{-j2\\pi\\frac{f_{h} + f_{l}}{2f_s}t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">b</span><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.7025em;vertical-align:-1.3811em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.11em;\"><span class=\"pstrut\" style=\"height:3.01em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3488em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1512em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3488em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1512em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4811em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.24em;\"><span class=\"pstrut\" style=\"height:3.01em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.687em;\"><span class=\"pstrut\" style=\"height:3.01em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3811em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.197em;\"><span style=\"top:-3.4486em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0693em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2306em;\"><span style=\"top:-2.3em;margin-left:-0.1076em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"mord mathnormal mtight\">s</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.5732em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.1076em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6944em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3496em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.1076em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6944em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3496em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4869em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span></span></span></span></span></span></span></span></span><p>Where $f_{h}$ and $f_{l}$ are the upper and lower cut-off frequencies, respectively.</p><h3 id=\"implementation-in-python-3\">Implementation in Python</h3><pre><code class=\"language-python\">import numpy as npimport matplotlib.pyplot as pltdef bandstop_filter(signal, lowcut, highcut, sample_rate):    \"\"\"     Implements a band-stop filter on the input signal.         Args:    signal (ndarray): Input signal    lowcut (float): Lower cut-off frequency of the filter    highcut (float): Upper cut-off frequency of the filter    sample_rate (float): Sample rate of the signal        Returns:    ndarray: Filtered signal    \"\"\"    nyquist_freq = 0.5 * sample_rate    normalized_lowcut = lowcut / nyquist_freq    normalized_highcut = highcut / nyquist_freq    b, a = signal.butter(5, [normalized_lowcut, normalized_highcut], btype='bandstop')    filtered_signal = signal.filtfilt(b, a, signal)        return filtered_signal# Example Usaget = np.linspace(0, 1, 1000)signal = np.sin(2*np.pi*10*t) + np.sin(2*np.pi*50*t)filtered_signal = bandstop_filter(signal, 20, 80, 100)plt.plot(t, signal, label='Original Signal')plt.plot(t, filtered_signal, label='Filtered Signal')plt.legend()plt.show()</code></pre><h1 id=\"conclusion\">Conclusion</h1><p>Frequency filtering is an essential technique in digital signal processing, and various algorithms and their variants are commonly used in various fields. This article provided a brief overview of the most common frequency filtering algorithms, along with mathematical equations in LaTeX and their Python implementations. It is vital to understand the application and characteristics of different algorithms before selecting a specific algorithm for a specific task.</p>",
            "url": "http://localhost:4000/2023/03/23/frequency-filtering",
            
            
            
            
            
            "date_published": "2023-03-23T00:00:00+00:00",
            "date_modified": "2023-03-23T00:00:00+00:00",
            
                "author":  {
                "name": "Pavan Donthireddy",
                "url": "https://pavandonthireddy.github.io",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/22/vmd",
            "title": "Variational Mode Decomposition Algorithm",
            "summary": "An overview of the Variational Mode Decomposition algorithm and its implementation in Python",
            "content_text": "IntroductionThe Variational Mode Decomposition (VMD) algorithm is a signal processing technique used for extracting modes from signals. It is based on the concept of representing a signal as a sum of oscillatory components, with each component having a specific frequency and amplitude. The VMD algorithm is commonly used in applications such as biomedical signal analysis and image processing.In this article, we will provide an overview of the VMD algorithm, its mathematical formulation, and provide a Python implementation for extracting modes from a signal.Mathematical FormulationThe VMD algorithm involves minimizing a cost function, which is defined as the sum of the squared differences between the signal and its reconstructed version using the extracted modes. The cost function is subject to a constraint that ensures that the mode functions are smooth and oscillatory.Let’s consider a signal $x(t)$ that is represented as the sum of $K$ oscillatory components or modes $u_k(t)$, that are extracted using the VMD algorithm. Each mode $u_k(t)$ has a specific frequency $\\omega_k$ and amplitude $a_k$. The VMD algorithm aims to find the modes $u_k(t)$ that best represent the signal $x(t)$.The cost function for the VMD algorithm can be written as:min⁡z,u∑k=1K∥zk−Dkuk∥22+λ∑k=1K−1∥μk∥TV\\min_{z,u} \\sum_{k=1}^{K} \\| z_k - D_k u_k \\|^2_2 + \\lambda \\sum_{k=1}^{K-1} \\| \\mu_k \\|_{TV}z,umin​k=1∑K​∥zk​−Dk​uk​∥22​+λk=1∑K−1​∥μk​∥TV​where $z_k$ is the $k^{th}$ analytic signal of $x(t)$, $D_k$ is a diagonal matrix containing the Fourier coefficients corresponding to the $k^{th}$ frequency band, $\\mu_k$ is the difference between adjacent mode functions, $\\lambda$ is a regularization parameter that controls the smoothness of the modes, and $TV$ denotes the total variation.The optimization problem can be solved using an alternating minimization algorithm, which involves alternating between updating the mode functions and the auxiliary variables. The mode functions are updated using a fixed-point iteration method that involves solving a constrained least squares problem. The auxiliary variables are updated using a soft-thresholding operation.Python ImplementationLet’s now see how we can implement the VMD algorithm in Python.First, we need to import the required libraries:import numpy as npfrom scipy.signal import hilbertfrom scipy.sparse import diagsfrom scipy.sparse.linalg import spsolveNext, we define a function to calculate the total variation of a given signal:def total_variation(x):    diff = np.diff(x)    return np.sum(np.sqrt(diff**2 + 1e-12))We then define a function to extract the modes from a given signal using the VMD algorithm:def vmd(x, K, alpha=200, tol=1e-7, maxiter=500):    N = len(x)    t = np.arange(N) / N    lamda = alpha*(N/2)    mu = np.ones(K-1)    for i in range(maxiter):        u = np.zeros((K, N))        uhat = np.zeros((K, N), dtype=complex)        uhat_sum = np.zeros(N, dtype=complex)        for k in range(K):            uhat[k, :] = np.fft.fft(np.multiply(np.exp(np.sum(mu[:k])*t), x))            uhat_sum += uhat[k, :]        for k in range(K):            v = uhat_sum - uhat[k, :]            d = 1 / (lamda + np.sum(np.abs(D_hat)))            uhat[k, :] = d * (v + D_hat * uhat[k, :])            u[k, :] = np.real(np.fft.ifft(uhat[k, :]))        for k in range(K-1):            mu[k] = np.maximum(0, total_variation(np.diff(u[k, :])) - 1/lamda)        if np.all(np.abs(u-uold) &lt; tol):            break        uold = u    return uFinally, we can use the above function to extract the modes from a signal:# Generate a sample signalt = np.linspace(0, 10, 1000)x = 2 * np.sin(2*np.pi*3*t) + np.sin(2*np.pi*5*t) + 0.5*np.sin(2*np.pi*11*t) + 0.25*np.sin(2*np.pi*19*t)# Extract modes using VMDK = 4u = vmd(x, K)# Plot the extracted modesimport matplotlib.pyplot as pltfig, axs = plt.subplots(K, 1, figsize=(10, 10))for k in range(K):    axs[k].plot(t, u[k])    axs[k].set_xlim([t[0], t[-1]])    axs[k].set_xlabel('Time')    axs[k].set_ylabel('Amplitude')    axs[k].set_title(f'Mode {k+1}')ConclusionThe Variational Mode Decomposition (VMD) algorithm is a powerful signal processing technique that can be used for extracting modes from signals. In this article, we provided an overview of the VMD algorithm, its mathematical formulation, and a Python implementation for extracting modes from a signal. The VMD algorithm has numerous applications in the fields of biomedical signal analysis and image processing, and can be a useful tool for researchers and engineers working in these areas.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>The Variational Mode Decomposition (VMD) algorithm is a signal processing technique used for extracting modes from signals. It is based on the concept of representing a signal as a sum of oscillatory components, with each component having a specific frequency and amplitude. The VMD algorithm is commonly used in applications such as biomedical signal analysis and image processing.</p><p>In this article, we will provide an overview of the VMD algorithm, its mathematical formulation, and provide a Python implementation for extracting modes from a signal.</p><h1 id=\"mathematical-formulation\">Mathematical Formulation</h1><p>The VMD algorithm involves minimizing a cost function, which is defined as the sum of the squared differences between the signal and its reconstructed version using the extracted modes. The cost function is subject to a constraint that ensures that the mode functions are smooth and oscillatory.</p><p>Let’s consider a signal $x(t)$ that is represented as the sum of $K$ oscillatory components or modes $u_k(t)$, that are extracted using the VMD algorithm. Each mode $u_k(t)$ has a specific frequency $\\omega_k$ and amplitude $a_k$. The VMD algorithm aims to find the modes $u_k(t)$ that best represent the signal $x(t)$.</p><p>The cost function for the VMD algorithm can be written as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi>z</mi><mo separator=\"true\">,</mo><mi>u</mi></mrow></munder><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mi mathvariant=\"normal\">∥</mi><msub><mi>z</mi><mi>k</mi></msub><mo>−</mo><msub><mi>D</mi><mi>k</mi></msub><msub><mi>u</mi><mi>k</mi></msub><msubsup><mi mathvariant=\"normal\">∥</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><mi>λ</mi><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>K</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi mathvariant=\"normal\">∥</mi><msub><mi>μ</mi><mi>k</mi></msub><msub><mi mathvariant=\"normal\">∥</mi><mrow><mi>T</mi><mi>V</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\min_{z,u} \\sum_{k=1}^{K} \\| z_k - D_k u_k \\|^2_2 + \\lambda \\sum_{k=1}^{K-1} \\| \\mu_k \\|_{TV}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.1304em;vertical-align:-1.3021em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6679em;\"><span style=\"top:-2.4em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">u</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">min</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8361em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8479em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3021em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∥</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">∥</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1304em;vertical-align:-1.3021em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8479em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3021em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∥</span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">∥</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">V</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span><p>where $z_k$ is the $k^{th}$ analytic signal of $x(t)$, $D_k$ is a diagonal matrix containing the Fourier coefficients corresponding to the $k^{th}$ frequency band, $\\mu_k$ is the difference between adjacent mode functions, $\\lambda$ is a regularization parameter that controls the smoothness of the modes, and $TV$ denotes the total variation.</p><p>The optimization problem can be solved using an alternating minimization algorithm, which involves alternating between updating the mode functions and the auxiliary variables. The mode functions are updated using a fixed-point iteration method that involves solving a constrained least squares problem. The auxiliary variables are updated using a soft-thresholding operation.</p><h1 id=\"python-implementation\">Python Implementation</h1><p>Let’s now see how we can implement the VMD algorithm in Python.</p><p>First, we need to import the required libraries:</p><pre><code class=\"language-python\">import numpy as npfrom scipy.signal import hilbertfrom scipy.sparse import diagsfrom scipy.sparse.linalg import spsolve</code></pre><p>Next, we define a function to calculate the total variation of a given signal:</p><pre><code class=\"language-python\">def total_variation(x):    diff = np.diff(x)    return np.sum(np.sqrt(diff**2 + 1e-12))</code></pre><p>We then define a function to extract the modes from a given signal using the VMD algorithm:</p><pre><code class=\"language-python\">def vmd(x, K, alpha=200, tol=1e-7, maxiter=500):    N = len(x)    t = np.arange(N) / N    lamda = alpha*(N/2)    mu = np.ones(K-1)    for i in range(maxiter):        u = np.zeros((K, N))        uhat = np.zeros((K, N), dtype=complex)        uhat_sum = np.zeros(N, dtype=complex)        for k in range(K):            uhat[k, :] = np.fft.fft(np.multiply(np.exp(np.sum(mu[:k])*t), x))            uhat_sum += uhat[k, :]        for k in range(K):            v = uhat_sum - uhat[k, :]            d = 1 / (lamda + np.sum(np.abs(D_hat)))            uhat[k, :] = d * (v + D_hat * uhat[k, :])            u[k, :] = np.real(np.fft.ifft(uhat[k, :]))        for k in range(K-1):            mu[k] = np.maximum(0, total_variation(np.diff(u[k, :])) - 1/lamda)        if np.all(np.abs(u-uold) &lt; tol):            break        uold = u    return u</code></pre><p>Finally, we can use the above function to extract the modes from a signal:</p><pre><code class=\"language-python\"># Generate a sample signalt = np.linspace(0, 10, 1000)x = 2 * np.sin(2*np.pi*3*t) + np.sin(2*np.pi*5*t) + 0.5*np.sin(2*np.pi*11*t) + 0.25*np.sin(2*np.pi*19*t)# Extract modes using VMDK = 4u = vmd(x, K)# Plot the extracted modesimport matplotlib.pyplot as pltfig, axs = plt.subplots(K, 1, figsize=(10, 10))for k in range(K):    axs[k].plot(t, u[k])    axs[k].set_xlim([t[0], t[-1]])    axs[k].set_xlabel('Time')    axs[k].set_ylabel('Amplitude')    axs[k].set_title(f'Mode {k+1}')</code></pre><h1 id=\"conclusion\">Conclusion</h1><p>The Variational Mode Decomposition (VMD) algorithm is a powerful signal processing technique that can be used for extracting modes from signals. In this article, we provided an overview of the VMD algorithm, its mathematical formulation, and a Python implementation for extracting modes from a signal. The VMD algorithm has numerous applications in the fields of biomedical signal analysis and image processing, and can be a useful tool for researchers and engineers working in these areas.</p>",
            "url": "http://localhost:4000/2023/03/22/vmd",
            
            
            
            "tags": ["signal_extraction","VMD"],
            
            "date_published": "2023-03-22T00:00:00+00:00",
            "date_modified": "2023-03-22T00:00:00+00:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/21/ifd",
            "title": "Iterative Filtering Decomposition Algorithm",
            "summary": "An introduction to the Iterative Filtering Decomposition Algorithm, including equations in latex, Python implementation, and an example.",
            "content_text": "IntroductionThe Iterative Filtering Decomposition (IFD) algorithm is used for decomposing nonlinear and non-stationary signals into different components.The IFD algorithm involves iteratively high-pass filtering the original signal, using two complementary filters. The high-frequency components are retained, while the low-frequency components are discarded. This process is repeated iteratively, until the desired number of components are obtained.The IFD algorithm is useful in various domains, including engineering, biology, finance, and geophysics. It has been used in the analysis of EEG signals, ECG signals, and seismic data.In this article, we will provide an overview of the IFD algorithm, including the mathematical equations involved, a Python implementation of the algorithm, and a sample application.Mathematical EquationsThe IFD algorithm involves iteratively applying two complementary filters to the original signal, to obtain a set of components. The two filters are defined as follows:      The high-pass filter H(z) is given by:H(z)=1−z−21−αz−1H(z) = \\frac{1 - z^{-2}}{1-\\alpha z^{-1}}H(z)=1−αz−11−z−2​        The low-pass filter L(z) is given by:L(z)=α(1+z−1)1−αz−1L(z) = \\frac{\\alpha (1+z^{-1})}{1-\\alpha z^{-1}}L(z)=1−αz−1α(1+z−1)​  where $\\alpha$ is the smoothing factor, which controls the cutoff frequency of the filters. It is typically set to a value near 1, to ensure that the filters do not remove too much of the signal.To obtain the first component $C_1$ of the signal, we apply the high-pass filter $H(z)$ to the original signal $X(z)$, and obtain:C1=H(z)X(z)C_1 = H(z) X(z)C1​=H(z)X(z)To obtain the second component $C_2$, we subtract $C_1$ from the original signal $X(z)$, and apply the high-pass filter $H(z)$ to the resulting signal. We obtain:C2=H(z)[X(z)−C1]C_2 = H(z) [X(z) - C_1]C2​=H(z)[X(z)−C1​]This process is repeated iteratively, to obtain the desired number of components. The $k$-th component $C_k$ is given by:Ck=H(z)[X(z)−∑i=1k−1Ci]C_k = H(z) [X(z) - \\sum_{i=1}^{k-1} C_i]Ck​=H(z)[X(z)−∑i=1k−1​Ci​]Python ImplementationWe can implement the IFD algorithm in Python, using the following function:import numpy as npfrom scipy.signal import lfilterdef ifd(signal, alpha, num_components):    components = []    remaining_signal = signal    for i in range(num_components):        hi = np.array([1, 0, -1]) / (1 + alpha)        hi[1] = -2 / (1 + alpha)        li = np.array([alpha + 1, alpha + 1, 0]) / (2 + 2 * alpha)        remaining_signal = signal - np.sum(components, axis=0)        ci = lfilter(hi, li, remaining_signal)        components.append(ci)    return componentsThis function takes three arguments:  signal: The original signal.  alpha: The smoothing factor.  num_components: The number of components to obtain.The ifd() function returns a list of components, obtained using the IFD algorithm.ExampleLet’s consider a simple example, of generating a nonlinear and non-stationary signal, and using the IFD algorithm to decompose it into three components.import matplotlib.pyplot as pltnp.random.seed(0)n = 200t = np.linspace(0, 10, n)signal = np.sin(t) + np.sin(3*t) + np.sin(5*t)signal += np.random.normal(0, 0.5, n)alpha = 0.985num_components = 3components = ifd(signal, alpha, num_components)plt.figure(figsize=(12, 6))plt.subplot(num_components+1, 1, 1)plt.plot(t, signal)plt.title('Original signal')for i in range(num_components):    plt.subplot(num_components+1, 1, i+2)    plt.plot(t, components[i])    plt.title('Component {}'.format(i+1))plt.tight_layout()plt.show()The above code generates a nonlinear and non-stationary signal, with a random noise component. It then applies the IFD algorithm to obtain three components.As we can see, the IFD algorithm successfully decomposes the original signal into three components, which capture different frequency ranges of the signal.ConclusionThe Iterative Filtering Decomposition (IFD) algorithm is a useful tool for decomposing nonlinear and non-stationary signals into different components. It involves iteratively high-pass filtering the original signal using two complementary filters, until the desired number of components are obtained.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>The Iterative Filtering Decomposition (IFD) algorithm is used for decomposing nonlinear and non-stationary signals into different components.</p><p>The IFD algorithm involves iteratively high-pass filtering the original signal, using two complementary filters. The high-frequency components are retained, while the low-frequency components are discarded. This process is repeated iteratively, until the desired number of components are obtained.</p><p>The IFD algorithm is useful in various domains, including engineering, biology, finance, and geophysics. It has been used in the analysis of EEG signals, ECG signals, and seismic data.</p><p>In this article, we will provide an overview of the IFD algorithm, including the mathematical equations involved, a Python implementation of the algorithm, and a sample application.</p><h1 id=\"mathematical-equations\">Mathematical Equations</h1><p>The IFD algorithm involves iteratively applying two complementary filters to the original signal, to obtain a set of components. The two filters are defined as follows:</p><ul>  <li>    <p>The high-pass filter H(z) is given by:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><msup><mi>z</mi><mrow><mo>−</mo><mn>2</mn></mrow></msup></mrow><mrow><mn>1</mn><mo>−</mo><mi>α</mi><msup><mi>z</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">H(z) = \\frac{1 - z^{-2}}{1-\\alpha z^{-1}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4213em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0179em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>  </li>  <li>    <p>The low-pass filter L(z) is given by:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>α</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><msup><mi>z</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">)</mo></mrow><mrow><mn>1</mn><mo>−</mo><mi>α</mi><msup><mi>z</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">L(z) = \\frac{\\alpha (1+z^{-1})}{1-\\alpha z^{-1}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.5123em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1089em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>  </li></ul><p>where $\\alpha$ is the smoothing factor, which controls the cutoff frequency of the filters. It is typically set to a value near 1, to ensure that the filters do not remove too much of the signal.</p><p>To obtain the first component $C_1$ of the signal, we apply the high-pass filter $H(z)$ to the original signal $X(z)$, and obtain:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C_1 = H(z) X(z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span></span></span></span></p><p>To obtain the second component $C_2$, we subtract $C_1$ from the original signal $X(z)$, and apply the high-pass filter $H(z)$ to the resulting signal. We obtain:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mn>2</mn></msub><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">[</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi>C</mi><mn>1</mn></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">C_2 = H(z) [X(z) - C_1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></p><p>This process is repeated iteratively, to obtain the desired number of components. The $k$-th component $C_k$ is given by:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>k</mi></msub><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">[</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msub><mi>C</mi><mi>i</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">C_k = H(z) [X(z) - \\sum_{i=1}^{k-1} C_i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2887em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.989em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></p><h1 id=\"python-implementation\">Python Implementation</h1><p>We can implement the IFD algorithm in Python, using the following function:</p><pre><code class=\"language-python\">import numpy as npfrom scipy.signal import lfilterdef ifd(signal, alpha, num_components):    components = []    remaining_signal = signal    for i in range(num_components):        hi = np.array([1, 0, -1]) / (1 + alpha)        hi[1] = -2 / (1 + alpha)        li = np.array([alpha + 1, alpha + 1, 0]) / (2 + 2 * alpha)        remaining_signal = signal - np.sum(components, axis=0)        ci = lfilter(hi, li, remaining_signal)        components.append(ci)    return components</code></pre><p>This function takes three arguments:</p><ul>  <li><code>signal</code>: The original signal.</li>  <li><code>alpha</code>: The smoothing factor.</li>  <li><code>num_components</code>: The number of components to obtain.</li></ul><p>The <code>ifd()</code> function returns a list of components, obtained using the IFD algorithm.</p><h1 id=\"example\">Example</h1><p>Let’s consider a simple example, of generating a nonlinear and non-stationary signal, and using the IFD algorithm to decompose it into three components.</p><pre><code class=\"language-python\">import matplotlib.pyplot as pltnp.random.seed(0)n = 200t = np.linspace(0, 10, n)signal = np.sin(t) + np.sin(3*t) + np.sin(5*t)signal += np.random.normal(0, 0.5, n)alpha = 0.985num_components = 3components = ifd(signal, alpha, num_components)plt.figure(figsize=(12, 6))plt.subplot(num_components+1, 1, 1)plt.plot(t, signal)plt.title('Original signal')for i in range(num_components):    plt.subplot(num_components+1, 1, i+2)    plt.plot(t, components[i])    plt.title('Component {}'.format(i+1))plt.tight_layout()plt.show()</code></pre><p>The above code generates a nonlinear and non-stationary signal, with a random noise component. It then applies the IFD algorithm to obtain three components.</p><p>As we can see, the IFD algorithm successfully decomposes the original signal into three components, which capture different frequency ranges of the signal.</p><h1 id=\"conclusion\">Conclusion</h1><p>The Iterative Filtering Decomposition (IFD) algorithm is a useful tool for decomposing nonlinear and non-stationary signals into different components. It involves iteratively high-pass filtering the original signal using two complementary filters, until the desired number of components are obtained.</p>",
            "url": "http://localhost:4000/2023/03/21/ifd",
            
            
            
            "tags": ["signal_extraction,","IFD"],
            
            "date_published": "2023-03-21T00:00:00+00:00",
            "date_modified": "2023-03-21T00:00:00+00:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/20/itd",
            "title": "Intrinsic Time Scale Decomposition",
            "summary": "This article talks about Intrinsic Time Scale Decomposition algorithm, its equations in latex, python implementation and an example.",
            "content_text": "IntroductionIntrinsic Time Scale Decomposition (ITD) is a signal processing algorithm developed by Cohen and colleagues in the late 1990s. It decomposes a signal into a set of intrinsic time scales using a process of time-frequency reassignment. The algorithm is useful for extracting information from signals which are highly non-stationary, such as speech and music.AlgorithmThe ITD algorithm works by first computing a spectrogram of the signal, which is a representation of the signal’s frequency content over time. It then applies a nonlinear transformation to the spectrogram to form a reassigned spectrogram. This reassignment process is done by computing the time-frequency reassignment vector, which is the vector that points from the original frequency bin to the reassigned frequency bin.The reassigned spectrogram is then decomposed into a set of intrinsic time scales. This is done by computing the instantaneous frequency of each frequency bin in the reassigned spectrogram. The instantaneous frequency is the rate of change of the frequency bin over time.The algorithm then computes the instantaneous energy of each frequency bin in the reassigned spectrogram. The instantaneous energy is the rate of change of the energy in the frequency bin over time.Finally, the algorithm computes the time-frequency distribution, which is the distribution of energy over time and frequency for each intrinsic time scale.EquationsThe following equations define the ITD algorithm:S(f,t)=∑k=−∞∞X[k]e−i2πfkΔtS(f,t) = \\sum\\limits_{k=-\\infty}^\\infty X[k]e^{-i2\\pi f k \\Delta t}S(f,t)=k=−∞∑∞​X[k]e−i2πfkΔtV(f,t)=∂S(f,t)∂tV(f,t) = \\frac{\\partial S(f,t)}{\\partial t}V(f,t)=∂t∂S(f,t)​Xreassigned(f,t)=S(f,t)+12π∫−∞∞V(f,t)e−i2πfkΔtdkX_{\\text{reassigned}}(f,t) = S(f,t) + \\frac{1}{2\\pi}\\int_{-\\infty}^{\\infty}V(f,t)e^{-i2\\pi f k \\Delta t}dkXreassigned​(f,t)=S(f,t)+2π1​∫−∞∞​V(f,t)e−i2πfkΔtdkΩi(f,t)=12π∂Xreassigned(f,t)∂f\\Omega_i(f,t) = \\frac{1}{2\\pi}\\frac{\\partial X_{\\text{reassigned}}(f,t)}{\\partial f}Ωi​(f,t)=2π1​∂f∂Xreassigned​(f,t)​Ei(f,t)=12π∂Xreassigned(f,t)∂tE_i(f,t) = \\frac{1}{2\\pi}\\frac{\\partial X_{\\text{reassigned}}(f,t)}{\\partial t}Ei​(f,t)=2π1​∂t∂Xreassigned​(f,t)​Pi(f,t)=Ωi(f,t)Ei(f,t)Ωi(f,t)2+Ei(f,t)2P_i(f,t) = \\frac{\\Omega_i(f,t)E_i(f,t)}{\\sqrt{\\Omega_i(f,t)^2 + E_i(f,t)^2}}Pi​(f,t)=Ωi​(f,t)2+Ei​(f,t)2​Ωi​(f,t)Ei​(f,t)​Python implementationThe following is a Python implementation of the ITD algorithm:# import necessary librariesimport numpy as npfrom scipy.signal import stft# define the signalx = # your signal# compute the spectrogramf, t, S = stft(x)# perform the reassignmentV = np.gradient(S, axis=1)X_reassigned = S + np.sum(V*np.exp(-2*np.pi*1j*f*t), axis=0)# compute the instantaneous frequency and energyOmega = np.gradient(X_reassigned, axis=0)E = np.gradient(X_reassigned, axis=1)# compute the time-frequency distributionP = Omega*E/(np.sqrt(Omega**2 + E**2))ExampleThe following is a simple example of using the ITD algorithm to decompose a signal into its intrinsic time scales. We will use a sine wave as our signal:# import necessary librariesimport numpy as npimport matplotlib.pyplot as pltfrom scipy.signal import stft# generate a sine wavef = 1.0 # frequency (Hz)fs = 10.0 # sampling rate (Hz)t = np.arange(0.0, 1.0, 1.0/fs) # time vectorx = np.sin(2*np.pi*f*t) # signal# compute the spectrogramf, t, S = stft(x)# perform the reassignmentV = np.gradient(S, axis=1)X_reassigned = S + np.sum(V*np.exp(-2*np.pi*1j*f*t), axis=0)# compute the instantaneous frequency and energyOmega = np.gradient(X_reassigned, axis=0)E = np.gradient(X_reassigned, axis=1)# compute the time-frequency distributionP = Omega*E/(np.sqrt(Omega**2 + E**2))# plot the resultsfig, axs = plt.subplots(3, 1, figsize=(8, 8))axs[0].imshow(np.abs(S.T), aspect='auto', origin='lower')axs[0].set_title('Spectrogram')axs[0].set_ylabel('Frequency (Hz)')axs[0].set_xlabel('Time (s)')axs[1].imshow(np.abs(X_reassigned.T), aspect='auto', origin='lower')axs[1].set_title('Reassigned Spectrogram')axs[1].set_ylabel('Frequency (Hz)')axs[1].set_xlabel('Time (s)')axs[2].imshow(np.abs(P.T), aspect='auto', origin='lower')axs[2].set_title('Time-Frequency Distribution')axs[2].set_ylabel('Frequency (Hz)')axs[2].set_xlabel('Time (s)')plt.tight_layout()plt.show()ConclusionIntrinsic Time Scale Decomposition is a powerful signal processing algorithm for extracting information from non-stationary signals. It works by first computing a spectrogram and then applying a time-frequency reassignment process to obtain a set of intrinsic time scales. This article has explained the algorithm with equations in latex, python implementation and an example.",
            "content_html": "<h1 id=\"introduction\">Introduction</h1><p>Intrinsic Time Scale Decomposition (ITD) is a signal processing algorithm developed by Cohen and colleagues in the late 1990s. It decomposes a signal into a set of intrinsic time scales using a process of time-frequency reassignment. The algorithm is useful for extracting information from signals which are highly non-stationary, such as speech and music.</p><h1 id=\"algorithm\">Algorithm</h1><p>The ITD algorithm works by first computing a spectrogram of the signal, which is a representation of the signal’s frequency content over time. It then applies a nonlinear transformation to the spectrogram to form a reassigned spectrogram. This reassignment process is done by computing the time-frequency reassignment vector, which is the vector that points from the original frequency bin to the reassigned frequency bin.</p><p>The reassigned spectrogram is then decomposed into a set of intrinsic time scales. This is done by computing the instantaneous frequency of each frequency bin in the reassigned spectrogram. The instantaneous frequency is the rate of change of the frequency bin over time.</p><p>The algorithm then computes the instantaneous energy of each frequency bin in the reassigned spectrogram. The instantaneous energy is the rate of change of the energy in the frequency bin over time.</p><p>Finally, the algorithm computes the time-frequency distribution, which is the distribution of energy over time and frequency for each intrinsic time scale.</p><h1 id=\"equations\">Equations</h1><p>The following equations define the ITD algorithm:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></munderover><mi>X</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>i</mi><mn>2</mn><mi>π</mi><mi>f</mi><mi>k</mi><mi mathvariant=\"normal\">Δ</mi><mi>t</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">S(f,t) = \\sum\\limits_{k=-\\infty}^\\infty X[k]e^{-i2\\pi f k \\Delta t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0118em;vertical-align:-1.3604em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8479em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3604em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mtight\">Δ</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>V</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>S</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>t</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">V(f,t) = \\frac{\\partial S(f,t)}{\\partial t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">t</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>X</mi><mtext>reassigned</mtext></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>S</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>π</mi></mrow></mfrac><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mi>V</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>i</mi><mn>2</mn><mi>π</mi><mi>f</mi><mi>k</mi><mi mathvariant=\"normal\">Δ</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">X_{\\text{reassigned}}(f,t) = S(f,t) + \\frac{1}{2\\pi}\\int_{-\\infty}^{\\infty}V(f,t)e^{-i2\\pi f k \\Delta t}dk</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">reassigned</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3846em;vertical-align:-0.9703em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4143em;\"><span style=\"top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mtight\">Δ</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi mathvariant=\"normal\">Ω</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>π</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>X</mi><mtext>reassigned</mtext></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>f</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\Omega_i(f,t) = \\frac{1}{2\\pi}\\frac{\\partial X_{\\text{reassigned}}(f,t)}{\\partial f}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\">Ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3074em;vertical-align:-0.8804em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">reassigned</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>E</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>π</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>X</mi><mtext>reassigned</mtext></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>t</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">E_i(f,t) = \\frac{1}{2\\pi}\\frac{\\partial X_{\\text{reassigned}}(f,t)}{\\partial t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">t</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">reassigned</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><msub><mi mathvariant=\"normal\">Ω</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msub><mi>E</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><msqrt><mrow><msub><mi mathvariant=\"normal\">Ω</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><msub><mi>E</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>t</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></msqrt></mfrac></mrow><annotation encoding=\"application/x-tex\">P_i(f,t) = \\frac{\\Omega_i(f,t)E_i(f,t)}{\\sqrt{\\Omega_i(f,t)^2 + E_i(f,t)^2}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.557em;vertical-align:-1.13em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.175em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.935em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mord\">Ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.895em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.305em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">Ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.13em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span><h1 id=\"python-implementation\">Python implementation</h1><p>The following is a Python implementation of the ITD algorithm:</p><pre><code class=\"language-python\"># import necessary librariesimport numpy as npfrom scipy.signal import stft# define the signalx = # your signal# compute the spectrogramf, t, S = stft(x)# perform the reassignmentV = np.gradient(S, axis=1)X_reassigned = S + np.sum(V*np.exp(-2*np.pi*1j*f*t), axis=0)# compute the instantaneous frequency and energyOmega = np.gradient(X_reassigned, axis=0)E = np.gradient(X_reassigned, axis=1)# compute the time-frequency distributionP = Omega*E/(np.sqrt(Omega**2 + E**2))</code></pre><h1 id=\"example\">Example</h1><p>The following is a simple example of using the ITD algorithm to decompose a signal into its intrinsic time scales. We will use a sine wave as our signal:</p><pre><code class=\"language-python\"># import necessary librariesimport numpy as npimport matplotlib.pyplot as pltfrom scipy.signal import stft# generate a sine wavef = 1.0 # frequency (Hz)fs = 10.0 # sampling rate (Hz)t = np.arange(0.0, 1.0, 1.0/fs) # time vectorx = np.sin(2*np.pi*f*t) # signal# compute the spectrogramf, t, S = stft(x)# perform the reassignmentV = np.gradient(S, axis=1)X_reassigned = S + np.sum(V*np.exp(-2*np.pi*1j*f*t), axis=0)# compute the instantaneous frequency and energyOmega = np.gradient(X_reassigned, axis=0)E = np.gradient(X_reassigned, axis=1)# compute the time-frequency distributionP = Omega*E/(np.sqrt(Omega**2 + E**2))# plot the resultsfig, axs = plt.subplots(3, 1, figsize=(8, 8))axs[0].imshow(np.abs(S.T), aspect='auto', origin='lower')axs[0].set_title('Spectrogram')axs[0].set_ylabel('Frequency (Hz)')axs[0].set_xlabel('Time (s)')axs[1].imshow(np.abs(X_reassigned.T), aspect='auto', origin='lower')axs[1].set_title('Reassigned Spectrogram')axs[1].set_ylabel('Frequency (Hz)')axs[1].set_xlabel('Time (s)')axs[2].imshow(np.abs(P.T), aspect='auto', origin='lower')axs[2].set_title('Time-Frequency Distribution')axs[2].set_ylabel('Frequency (Hz)')axs[2].set_xlabel('Time (s)')plt.tight_layout()plt.show()</code></pre><h1 id=\"conclusion\">Conclusion</h1><p>Intrinsic Time Scale Decomposition is a powerful signal processing algorithm for extracting information from non-stationary signals. It works by first computing a spectrogram and then applying a time-frequency reassignment process to obtain a set of intrinsic time scales. This article has explained the algorithm with equations in latex, python implementation and an example.</p>",
            "url": "http://localhost:4000/2023/03/20/itd",
            
            
            
            "tags": ["signal_extraction","ITD"],
            
            "date_published": "2023-03-20T00:00:00+00:00",
            "date_modified": "2023-03-20T00:00:00+00:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/19/local-mean-decomposition",
            "title": "Local Mean Decomposition",
            "summary": "Local Mean Decomposition",
            "content_text": "Introduction to Local Mean Decomposition (LMD)Local Mean Decomposition (LMD) is a signal decomposition algorithm used to filter out noise and extract meaningful information from signals. The main idea behind LMD is to decompose a signal into its local means, which can be used to identify the underlying components of the signal. LMD is used in a variety of applications, such as speech recognition, medical imaging, and signal processing.Mathematical FormulationThe mathematical formulation of the LMD algorithm is defined as follows:Given a signal $x(t)$, the local mean $m(t)$ at a given point $t$ is computed as follows:m(t)=1N∑i=t−Nt+Nx(i)m(t) = \\frac{1}{N}\\sum_{i=t-N}^{t+N} x(i)m(t)=N1​i=t−N∑t+N​x(i)where $N$ is the size of the local window.The local mean residual is then computed as:r(t)=x(t)−m(t)r(t) = x(t) - m(t)r(t)=x(t)−m(t)The LMD algorithm then recursively applies this process to the residuals, producing local means and residuals at each step:xk(t)=rk−1(t)−mk(t)x_k(t) = r_{k-1}(t) - m_k(t)xk​(t)=rk−1​(t)−mk​(t)where $k$ is the iteration step.Python ImplementationThe following is a Python implementation of the LMD algorithm:def lmd(x, N):    # compute the local mean    m = np.convolve(x, np.ones(N), 'same')/N        # compute the local mean residual    r = x - m        # iteratively decompose the signal    x_k = r    for k in range(1, K):        # compute the local mean        m_k = np.convolve(x_k, np.ones(N), 'same')/N                # compute the local mean residual        r_k = x_k - m_k                # update the signal for the next iteration        x_k = r_k        return m, r, x_kExampleLet’s consider a signal consisting of a sinusoid and some noise:# generate the signalt = np.arange(0, 10, 0.01)x = np.sin(2*np.pi*t) + np.random.normal(0, 0.2, t.shape)We can then apply the LMD algorithm to decompose the signal into its local means and residuals:# apply the lmd algorithmN = 5K = 3m, r, x_k = lmd(x, N)",
            "content_html": "<h1 id=\"introduction-to-local-mean-decomposition-lmd\">Introduction to Local Mean Decomposition (LMD)</h1><p>Local Mean Decomposition (LMD) is a signal decomposition algorithm used to filter out noise and extract meaningful information from signals. The main idea behind LMD is to decompose a signal into its local means, which can be used to identify the underlying components of the signal. LMD is used in a variety of applications, such as speech recognition, medical imaging, and signal processing.</p><h1 id=\"mathematical-formulation\">Mathematical Formulation</h1><p>The mathematical formulation of the LMD algorithm is defined as follows:</p><p>Given a signal $x(t)$, the local mean $m(t)$ at a given point $t$ is computed as follows:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>m</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>t</mi><mo>−</mo><mi>N</mi></mrow><mrow><mi>t</mi><mo>+</mo><mi>N</mi></mrow></munderover><mi>x</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">m(t) = \\frac{1}{N}\\sum_{i=t-N}^{t+N} x(i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.181em;vertical-align:-1.3527em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8557em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3527em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span></span></span></span></span><p>where $N$ is the size of the local window.</p><p>The local mean residual is then computed as:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>r</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>m</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">r(t) = x(t) - m(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></span><p>The LMD algorithm then recursively applies this process to the residuals, producing local means and residuals at each step:</p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>x</mi><mi>k</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>r</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi>m</mi><mi>k</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x_k(t) = r_{k-1}(t) - m_k(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></span><p>where $k$ is the iteration step.</p><h1 id=\"python-implementation\">Python Implementation</h1><p>The following is a Python implementation of the LMD algorithm:</p><pre><code class=\"language-python\">def lmd(x, N):    # compute the local mean    m = np.convolve(x, np.ones(N), 'same')/N        # compute the local mean residual    r = x - m        # iteratively decompose the signal    x_k = r    for k in range(1, K):        # compute the local mean        m_k = np.convolve(x_k, np.ones(N), 'same')/N                # compute the local mean residual        r_k = x_k - m_k                # update the signal for the next iteration        x_k = r_k        return m, r, x_k</code></pre><h1 id=\"example\">Example</h1><p>Let’s consider a signal consisting of a sinusoid and some noise:</p><pre><code class=\"language-python\"># generate the signalt = np.arange(0, 10, 0.01)x = np.sin(2*np.pi*t) + np.random.normal(0, 0.2, t.shape)</code></pre><p>We can then apply the LMD algorithm to decompose the signal into its local means and residuals:</p><pre><code class=\"language-python\"># apply the lmd algorithmN = 5K = 3m, r, x_k = lmd(x, N)</code></pre>",
            "url": "http://localhost:4000/2023/03/19/local-mean-decomposition",
            
            
            
            
            
            "date_published": "2023-03-19T00:00:00+00:00",
            "date_modified": "2023-03-19T00:00:00+00:00",
            
                "author": "Pavan Donthireddy"
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/18/time-frequency-filters",
            "title": "Time frequency filters",
            "summary": "Time frequency filters",
            "content_text": "Time-frequency filters are signal processing techniques used to filter signals in both the time and frequency domains simultaneously. They allow for the extraction of specific frequency bands of a signal while preserving its temporal features. Unlike traditional filters, which operate only in the time or frequency domain, time-frequency filters can operate in both domains simultaneously and provide more precise control over the filtering process.The most commonly used time-frequency filters are based on time-frequency analysis methods, such as the Short-Time Fourier Transform (STFT), Continuous Wavelet Transform (CWT), or the Empirical Mode Decomposition (EMD). These methods provide a time-frequency representation of the signal, which can be further processed using time-frequency filtering techniques.Time-frequency filters can be used to achieve a variety of signal processing objectives, such as noise reduction, feature extraction, or signal separation. They are particularly useful in applications where the signal characteristics vary over time, such as speech processing, biomedical signal analysis, and image processing.Some examples of time-frequency filters include the time-frequency bandpass filter, which allows the extraction of a specific frequency band of interest, and the time-frequency notch filter, which can be used to remove unwanted frequency components from a signal in specific time-frequency regions.",
            "content_html": "<p>Time-frequency filters are signal processing techniques used to filter signals in both the time and frequency domains simultaneously. They allow for the extraction of specific frequency bands of a signal while preserving its temporal features. Unlike traditional filters, which operate only in the time or frequency domain, time-frequency filters can operate in both domains simultaneously and provide more precise control over the filtering process.</p><p>The most commonly used time-frequency filters are based on time-frequency analysis methods, such as the Short-Time Fourier Transform (STFT), Continuous Wavelet Transform (CWT), or the Empirical Mode Decomposition (EMD). These methods provide a time-frequency representation of the signal, which can be further processed using time-frequency filtering techniques.</p><p>Time-frequency filters can be used to achieve a variety of signal processing objectives, such as noise reduction, feature extraction, or signal separation. They are particularly useful in applications where the signal characteristics vary over time, such as speech processing, biomedical signal analysis, and image processing.</p><p>Some examples of time-frequency filters include the time-frequency bandpass filter, which allows the extraction of a specific frequency band of interest, and the time-frequency notch filter, which can be used to remove unwanted frequency components from a signal in specific time-frequency regions.</p>",
            "url": "http://localhost:4000/2023/03/18/time-frequency-filters",
            
            
            
            "tags": ["filters","wavelet","EMD","STFT"],
            
            "date_published": "2023-03-18T00:00:00+00:00",
            "date_modified": "2023-03-18T00:00:00+00:00",
            
                "author": "Pavan Donthireddy"
            
        }
    
    ]
}